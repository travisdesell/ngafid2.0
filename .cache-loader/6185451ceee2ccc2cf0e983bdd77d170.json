{"remainingRequest":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js??ref--4-1!/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/filter.js","dependencies":[{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/filter.js","mtime":1589665823133},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/.babelrc","mtime":1589665823083},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nvar Filter =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Filter, _React$Component);\n\n  function Filter(props) {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this, props));\n    _this.state = {\n      filters: {\n        type: \"GROUP\",\n        condition: \"AND\",\n        depth: 0,\n        filters: []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"addRule\",\n    value: function addRule(filter) {\n      console.log(\"adding rule to filter:\");\n      var emptyRule = {\n        type: \"RULE\",\n        depth: filter.depth + 1,\n        inputs: [0]\n      };\n      filter.filters.push(emptyRule);\n      this.setState(this.state);\n\n      if (typeof this.props.parentRerender != 'undefined') {\n        this.props.parentRerender();\n      }\n    }\n  }, {\n    key: \"addGroup\",\n    value: function addGroup(filter) {\n      console.log(\"adding group to filter:\");\n      console.log(filter);\n      var emptyGroup = {\n        type: \"GROUP\",\n        condition: \"AND\",\n        depth: filter.depth + 1,\n        filters: []\n      };\n      filter.filters.push(emptyGroup);\n      console.log(\"after adding\");\n      console.log(filter);\n      this.setState(this.state);\n\n      if (typeof this.props.parentRerender != 'undefined') {\n        this.props.parentRerender();\n      }\n    }\n  }, {\n    key: \"removeFilter\",\n    value: function removeFilter(filters, index) {\n      console.log(\"removing filter \" + index + \" on filters:\");\n      console.log(filters);\n      filters.splice(index, 1);\n      this.setState(this.state);\n\n      if (typeof this.props.parentRerender != 'undefined') {\n        this.props.parentRerender();\n      }\n    }\n  }, {\n    key: \"orClicked\",\n    value: function orClicked(filter, disabled) {\n      if (disabled) {\n        console.log(\"not changing because button disabled\");\n        return;\n      }\n\n      console.log(\"changing group condition to: OR for filter:\");\n      console.log(filter);\n      filter.condition = \"OR\";\n      console.log(filter);\n      console.log(\"state filter:\");\n      console.log(this.state.filters);\n      this.setState(this.state);\n    }\n  }, {\n    key: \"andClicked\",\n    value: function andClicked(filter, disabled) {\n      if (disabled) {\n        console.log(\"not changing because button disabled\");\n        return;\n      }\n\n      console.log(\"changing group condition to: AND for filter:\");\n      console.log(filter);\n      filter.condition = \"AND\";\n      console.log(filter);\n      console.log(\"state filter:\");\n      console.log(this.state.filters);\n      this.setState(this.state);\n    }\n  }, {\n    key: \"getQuery\",\n    value: function getQuery() {\n      var query = this.getQueryHelper(this.state.filters);\n      return query;\n    }\n  }, {\n    key: \"getQueryHelper\",\n    value: function getQueryHelper(filter) {\n      var query = {};\n\n      if (filter.type == \"RULE\") {\n        var inputs = filter.inputs; //console.log(\"rule:\");\n\n        var rule = this.props.rules[inputs[0] - 1]; //console.log(rule);\n\n        query.type = \"RULE\";\n        query.inputs = [];\n        query.inputs.push(rule.name);\n\n        for (var i = 1; i < inputs.length; i++) {\n          var condition = rule.conditions[i - 1]; //console.log(condition);\n          //console.log(\"inputs[\" + i + \"]: \" + inputs[i]);\n\n          if (condition.type == \"select\") {\n            query.inputs.push(condition.options[inputs[i]]);\n          } else {\n            query.inputs.push(inputs[i]);\n          }\n        }\n      } else if (filter.type == \"GROUP\") {\n        query.type = \"GROUP\";\n        query.condition = filter.condition;\n        query.filters = [];\n        var filters = filter.filters;\n\n        for (var _i = 0; _i < filters.length; _i++) {\n          query.filters.push(this.getQueryHelper(filters[_i]));\n        }\n      } else {\n        console.log(\"UNKNOWN FILTER '\" + filter.type + \"'\");\n      }\n\n      return query;\n    }\n  }, {\n    key: \"getRemoveButton\",\n    value: function getRemoveButton(parentFilters, removeIndex) {\n      var _this2 = this;\n\n      var removeClasses = \"btn btn-danger btn-sm\";\n      return React.createElement(\"button\", {\n        type: \"button\",\n        className: removeClasses\n      }, \" \", React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        \"aria-hidden\": \"true\",\n        style: {\n          padding: \"4 4 3 4\"\n        },\n        onClick: function onClick() {\n          return _this2.removeFilter(parentFilters, removeIndex);\n        }\n      }), \" \");\n    }\n  }, {\n    key: \"getFilterHeader\",\n    value: function getFilterHeader(filter, includeRemove, parentFilters, removeIndex) {\n      var _this3 = this;\n\n      var ruleClasses = \"btn btn-primary btn-sm mr-1\";\n      var groupClasses = \"btn btn-primary btn-sm\";\n      var removeButton = \"\";\n      var andFixed = this.state.andFixed;\n      var disabledClasses = \"\";\n\n      if (includeRemove) {\n        groupClasses += \" mr-1\";\n        removeButton = this.getRemoveButton(parentFilters, removeIndex);\n        andFixed = false;\n      }\n\n      if (andFixed) disabledClasses = \" disabled\";\n      var andDefaultChecked = false;\n      var orDefaultChecked = false;\n\n      if (filter.groupCondition == \"AND\") {\n        andDefaultChecked = true;\n      } else {\n        orDefaultChecked = true;\n      }\n\n      var orButton = \"\";\n\n      if (!andFixed) {\n        orButton = React.createElement(\"label\", {\n          className: \"btn btn-outline-primary btn-sm\",\n          onClick: function onClick() {\n            return _this3.orClicked(filter, andFixed);\n          }\n        }, React.createElement(\"input\", {\n          type: \"radio\",\n          name: \"options\",\n          id: \"option3\",\n          autoComplete: \"off\",\n          defaultChecked: orDefaultChecked\n        }), \"OR\");\n      }\n\n      return React.createElement(\"div\", {\n        className: \"d-flex justify-content-between\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\"\n      }, React.createElement(\"div\", {\n        className: \"btn-group btn-group-toggle\",\n        \"data-toggle\": \"buttons\"\n      }, React.createElement(\"label\", {\n        className: \"btn btn-outline-primary btn-sm active\",\n        onClick: function onClick() {\n          return _this3.andClicked(filter, andFixed);\n        }\n      }, React.createElement(\"input\", {\n        type: \"radio\",\n        name: \"options\",\n        id: \"option1\",\n        autoComplete: \"off\",\n        defaultChecked: andDefaultChecked\n      }), \"AND\"), orButton)), React.createElement(\"div\", {\n        className: \"p-2\"\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: ruleClasses,\n        onClick: function onClick() {\n          return _this3.addRule(filter);\n        }\n      }, \"Add Rule\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: groupClasses,\n        onClick: function onClick() {\n          return _this3.addGroup(filter);\n        }\n      }, \"Add Group\"), removeButton));\n    }\n  }, {\n    key: \"ruleChange\",\n    value: function ruleChange(currentFilter, inputIndex, event) {\n      console.log(\"changing rule input \" + inputIndex + \" to: \" + event.target.value);\n\n      if (inputIndex == 0) {\n        //reset the inputs for this filter because the rule type changed\n        console.log(\"resetting the current filter's inputs\");\n        currentFilter.inputs = [0];\n      }\n\n      currentFilter.inputs[inputIndex] = event.target.value;\n      /*\n      console.log(\"all filters:\");\n      console.log(this.state.filters);\n       console.log(\"new rule, inputs first:\");\n      console.log(currentFilter.inputs);\n      console.log(this.props.rules[currentFilter.inputs[0] - 1]);\n      */\n\n      this.setState(this.state);\n\n      if (typeof this.props.parentRerender != 'undefined') {\n        this.props.parentRerender();\n      }\n    }\n  }, {\n    key: \"renderRuleSelect\",\n    value: function renderRuleSelect(currentFilter) {\n      var _this4 = this;\n\n      return React.createElement(\"select\", {\n        id: \"stateSelect\",\n        type: \"select\",\n        className: \"form-control\",\n        onChange: function onChange(event) {\n          return _this4.ruleChange(currentFilter, 0, event);\n        },\n        style: {\n          flexBasis: \"180px\",\n          flexShrink: 0,\n          marginRight: 5\n        },\n        value: currentFilter.inputs[0]\n      }, React.createElement(\"option\", {\n        value: \"0\"\n      }, \"Select Rule\"), this.props.rules.map(function (ruleInfo, index) {\n        //console.log(\"adding rule: \" + ruleInfo.name + \", with value: \" + index);\n        return React.createElement(\"option\", {\n          value: index + 1,\n          key: \"rule-\" + index\n        }, ruleInfo.name);\n      }));\n    }\n  }, {\n    key: \"renderRule\",\n    value: function renderRule(currentFilter) {\n      var _this5 = this;\n\n      var inputs = currentFilter.inputs;\n      var selectedRule = inputs[0];\n\n      if (selectedRule == 0) {\n        return React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          }\n        }, this.renderRuleSelect(currentFilter));\n      } else {\n        return React.createElement(\"div\", {\n          style: {\n            display: \"flex\",\n            flexDirection: \"row\"\n          }\n        }, this.renderRuleSelect(currentFilter), this.props.rules[selectedRule - 1].conditions.map(function (conditionInfo, index) {\n          if (conditionInfo.type == \"select\") {\n            if (typeof currentFilter.inputs[index + 1] == 'undefined') currentFilter.inputs[index + 1] = 0;\n            return React.createElement(\"select\", {\n              id: \"stateSelect\",\n              type: conditionInfo.type,\n              key: \"select-\" + index,\n              className: \"form-control\",\n              onChange: function onChange(event) {\n                return _this5.ruleChange(currentFilter, index + 1, event);\n              },\n              style: {\n                flexBasis: \"150px\",\n                flexShrink: 0,\n                marginRight: 5\n              },\n              value: currentFilter.inputs[index + 1]\n            }, conditionInfo.options.map(function (optionInfo, index) {\n              //console.log(\"adding option: \" + optionInfo + \", with value: \" + index + \", key: \" + (conditionInfo.name + \"-\" + index));\n              return React.createElement(\"option\", {\n                value: index,\n                key: conditionInfo.name + \"-\" + index\n              }, optionInfo);\n            }));\n          } else if (conditionInfo.type == \"time\" || conditionInfo.type == \"date\" || conditionInfo.type == \"number\" || conditionInfo.type == \"datetime-local\") {\n            if (typeof currentFilter.inputs[index + 1] == 'undefined') {\n              currentFilter.inputs[index + 1] = \"\";\n            }\n\n            return React.createElement(\"input\", {\n              type: conditionInfo.type,\n              step: \"any\",\n              key: \"input-\" + index,\n              className: \"form-control\",\n              \"aria-describedby\": \"valueHelp\",\n              placeholder: \"Enter \" + conditionInfo.name,\n              onChange: function onChange(event) {\n                return _this5.ruleChange(currentFilter, index + 1, event);\n              },\n              style: {\n                flexBasis: \"150px\",\n                flexShrink: 0,\n                marginRight: 5\n              },\n              value: currentFilter.inputs[index + 1]\n            });\n          }\n        }));\n      }\n    }\n  }, {\n    key: \"filterValid\",\n    value: function filterValid(filter) {\n      if (filter.type == \"GROUP\") {\n        if (filter.filters.length == 0) {\n          return \"Group has no rules.\";\n        } else {\n          return \"\";\n        }\n      } else if (filter.type == \"RULE\") {\n        console.log(\"checking if rule valid udpated 3, made some other changes! and some more!!: \");\n        console.log(filter);\n        var inputs = filter.inputs;\n\n        if (inputs[0] == 0) {\n          return \"Please select a rule.\";\n        } else {\n          var rule = this.props.rules[inputs[0] - 1];\n          console.log(\"checking rule valid, inputs then rule:\");\n          console.log(inputs);\n          console.log(rule);\n\n          for (var i = 0; i < rule.conditions.length; i++) {\n            if (rule.conditions[i].type == \"number\") {\n              if (typeof inputs[i + 1] == 'undefined' || inputs[i + 1] == \"\") {\n                return \"Please enter a number.\";\n              }\n            } else if (rule.conditions[i].type == \"time\") {\n              if (typeof inputs[i + 1] == 'undefined' || inputs[i + 1] == \"\") {\n                return \"Please enter a time.\";\n              }\n            } else if (rule.conditions[i].type == \"date\") {\n              if (typeof inputs[i + 1] == 'undefined' || inputs[i + 1] == \"\") {\n                return \"Please enter a date.\";\n              }\n            } else if (rule.conditions[i].type == \"datetime-local\") {\n              if (typeof inputs[i + 1] == 'undefined' || inputs[i + 1] == \"\") {\n                return \"Please enter a date and time.\";\n              }\n            }\n          }\n\n          return \"\";\n        }\n      } else {\n        return \"Unknown filter type: '\" + filter.type + \"'\";\n      }\n    }\n  }, {\n    key: \"recursiveValid\",\n    value: function recursiveValid(filters) {\n      if (this.filterValid(filters) != \"\") return false; //console.log(\"recursiveValid on:\");\n      //console.log(filters);\n\n      var subFilters = filters.filters;\n\n      for (var i = 0; i < subFilters.length; i++) {\n        if (subFilters[i].type == \"GROUP\") {\n          var subValid = this.recursiveValid(subFilters[i]); //console.log(\"GROUP was valid? \" + subValid);\n\n          if (!subValid) return false;\n        } else if (subFilters[i].type == \"RULE\") {\n          var _subValid = this.filterValid(subFilters[i]) == \"\"; //console.log(\"RULE was valid? \" + subValid);\n\n\n          if (!_subValid) return false;\n        } else {\n          //console.log(\"type wasn't defined!\");\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"isValid\",\n    value: function isValid() {\n      var valid = this.recursiveValid(this.state.filters);\n      console.log(\"isValid? \" + valid);\n      return valid;\n    }\n  }, {\n    key: \"renderFilters\",\n    value: function renderFilters(filters) {\n      var _this6 = this;\n\n      var filterContent = \"\";\n      if (filters.length == 0) return \"\";\n      var errorMessageStyle = {\n        padding: '7 0 7 0',\n        margin: '0',\n        display: 'block',\n        textAlign: 'left',\n        color: 'red'\n      };\n      return React.createElement(\"div\", null, filters.map(function (currentFilter, index) {\n        var cardClasses = \"card mb-1 m-1\";\n\n        var errorMessage = _this6.filterValid(currentFilter);\n\n        console.log(\"filter error mesage: \" + errorMessage);\n        var errorContent = \"\";\n\n        if (errorMessage == \"\") {\n          cardClasses += \" border-secondary\";\n        } else {\n          cardClasses += \" border-danger\";\n          errorContent = React.createElement(\"div\", {\n            className: \"d-flex justify-content-end\"\n          }, React.createElement(\"div\", {\n            className: \"p-2 flex-fill\"\n          }, React.createElement(\"span\", {\n            style: errorMessageStyle\n          }, errorMessage)));\n        }\n\n        if (currentFilter.type === \"GROUP\") {\n          return React.createElement(\"div\", {\n            className: \"card-body p-2\",\n            key: index\n          }, React.createElement(\"div\", {\n            className: cardClasses,\n            style: {\n              background: \"rgba(248,259,250,0.8)\"\n            }\n          }, _this6.getFilterHeader(currentFilter, true, filters, index), _this6.renderFilters(currentFilter.filters), errorContent));\n        } else if (currentFilter.type === \"RULE\") {\n          return React.createElement(\"div\", {\n            className: \"card-body p-2\",\n            key: index\n          }, React.createElement(\"div\", {\n            className: cardClasses,\n            style: {\n              background: \"rgba(248,259,250,0.8)\"\n            }\n          }, React.createElement(\"div\", {\n            className: \"d-flex justify-content-between\"\n          }, React.createElement(\"div\", {\n            className: \"p-2\"\n          }, _this6.renderRule(currentFilter)), React.createElement(\"div\", {\n            className: \"p-2\"\n          }, _this6.getRemoveButton(filters, index))), errorContent));\n        } else {\n          console.log(\"unknown filter type: '\" + currentFilter.type + \"'\");\n          return React.createElement(\"div\", {\n            key: index\n          }, \" EMPTY FILTER \");\n        }\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this7 = this;\n\n      var depth = 0;\n      var groupClasses = \"btn btn-primary btn-sm\";\n      var errorMessageStyle = {\n        padding: '7 0 7 0',\n        margin: '0',\n        display: 'block',\n        textAlign: 'left',\n        color: 'red'\n      };\n      var errorHidden = true;\n      var errorMessage = \"\";\n\n      if (this.state.filters.filters.length == 0) {\n        errorHidden = false;\n        errorMessage = \"Group has no rules.\";\n      }\n\n      var submitDisabled = !this.recursiveValid(this.state.filters);\n      var externalSubmit = false;\n\n      if (typeof this.props.externalSubmit != 'undefined') {\n        externalSubmit = this.props.externalSubmit;\n      }\n\n      console.log(externalSubmit);\n      return React.createElement(\"div\", {\n        className: \"card-body p-2\",\n        hidden: this.props.hidden,\n        style: {\n          padding: 0\n        }\n      }, React.createElement(\"div\", {\n        className: \"card mb-1 m-1 border-secondary\",\n        style: {\n          background: \"rgba(248,259,250,0.8)\",\n          margin: 0\n        }\n      }, this.getFilterHeader(this.state.filters, false, null, 0), this.renderFilters(this.state.filters.filters), React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\"\n      }, React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"span\", {\n        style: errorMessageStyle,\n        hidden: errorHidden\n      }, errorMessage)), React.createElement(\"div\", {\n        className: \"p-2\"\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: groupClasses,\n        disabled: submitDisabled,\n        onClick: function onClick() {\n          return _this7.props.submitFilter();\n        },\n        hidden: externalSubmit\n      }, this.props.submitButtonName)))));\n    }\n  }]);\n\n  return Filter;\n}(React.Component);\n\nexport { Filter };",null]}