{"remainingRequest":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js??ref--4-1!/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/manage_fleet.js","dependencies":[{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/manage_fleet.js","mtime":1589665823133},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/.babelrc","mtime":1589665823083},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\nimport { navbar } from \"./signed_in_navbar.js\";\n\nvar AccessCheck =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AccessCheck, _React$Component);\n\n  function AccessCheck(props) {\n    _classCallCheck(this, AccessCheck);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(AccessCheck).call(this, props));\n  }\n\n  _createClass(AccessCheck, [{\n    key: \"render\",\n    value: function render() {\n      var checkType = this.props.checkType;\n      var lcType = checkType.toLowerCase();\n      var ucType = checkType.toUpperCase();\n      var userAccess = this.props.userAccess;\n      var fleetUserRow = this.props.fleetUserRow;\n      var userId = this.props.userId;\n      var radioId = lcType + \"AccessRadio\" + userId; //console.log(\"rendering check \" + checkType + \" with access: \" + userAccess);\n\n      return React.createElement(\"div\", {\n        className: \"form-check form-check-inline\"\n      }, React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"radio\",\n        name: \"accessRadios\" + userId,\n        id: radioId,\n        value: ucType,\n        checked: ucType == userAccess,\n        onChange: function onChange() {\n          return fleetUserRow.checkRadio(ucType);\n        }\n      }), React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: radioId\n      }, lcType));\n    }\n  }]);\n\n  return AccessCheck;\n}(React.Component);\n\nvar FleetUserRow =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(FleetUserRow, _React$Component2);\n\n  function FleetUserRow(props) {\n    var _this;\n\n    _classCallCheck(this, FleetUserRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FleetUserRow).call(this, props));\n    var fleetUser = props.fleetUser;\n    fleetUser.fleetAccess.originalAccess = fleetUser.fleetAccess.accessType;\n    _this.state = {\n      fleetUser: fleetUser\n    };\n    return _this;\n  }\n\n  _createClass(FleetUserRow, [{\n    key: \"checkRadio\",\n    value: function checkRadio(newRadio) {\n      //console.log(\"changing \" + this.state.fleetUser.email + \" access to \" + newRadio);\n      this.state.fleetUser.fleetAccess.accessType = newRadio;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"updateUserAccess\",\n    value: function updateUserAccess(fleetUser) {\n      console.log(\"updating user access for:\");\n      console.log(fleetUser);\n      $(\"#loading\").show();\n      var submissionData = {\n        fleetUserId: fleetUser.id,\n        fleetId: fleetUser.fleetAccess.fleetId,\n        accessType: fleetUser.fleetAccess.accessType\n      };\n      var fleetUserRow = this;\n      $.ajax({\n        type: 'POST',\n        url: '/protected/update_user_access',\n        data: submissionData,\n        dataType: 'json',\n        success: function success(response) {\n          $('#loading').hide();\n\n          if (response.errorTitle) {\n            console.log(\"displaying error modal!\");\n            errorModal.show(response.errorTitle, response.errorMessage);\n            return false;\n          }\n\n          var previousAccess = fleetUser.fleetAccess.originalAccess;\n          var newAccess = fleetUser.fleetAccess.accessType;\n\n          if (newAccess == \"WAITING\" && previousAccess != \"WAITING\") {\n            console.log(\"incrementing waiting!\");\n            navbar.incrementWaiting();\n          } else if (newAccess != \"WAITING\" && previousAccess == \"WAITING\") {\n            console.log(\"decrementing waiting!\");\n            navbar.decrementWaiting();\n          } //update the fleetUser's new original access (so the update button will be disabled unless the access is changed again)\n\n\n          fleetUser.fleetAccess.originalAccess = newAccess;\n          fleetUserRow.state.fleetUser = fleetUser;\n          fleetUserRow.setState(fleetUser);\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          $(\"#loading\").hide();\n          errorModal.show(\"Error Loading Uploads\", errorThrown);\n        },\n        async: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var fleetUser = this.state.fleetUser;\n      var accessType = fleetUser.fleetAccess.accessType;\n      console.log(\"rendering \" + fleetUser.email + \" with access \" + accessType);\n      var buttonClasses = \"btn btn-outline-secondary\";\n      var buttonDisabled = fleetUser.fleetAccess.originalAccess == accessType;\n      return React.createElement(\"tr\", {\n        userid: fleetUser.id\n      }, React.createElement(\"td\", {\n        scope: \"row\",\n        style: {\n          padding: \"15 12 15 12\"\n        }\n      }, fleetUser.email), React.createElement(\"td\", {\n        style: {\n          padding: \"15 12 15 12\"\n        }\n      }, fleetUser.firstName, \" \", this.state.fleetUser.lastName), React.createElement(\"td\", {\n        style: {\n          padding: \"15 12 15 12\"\n        }\n      }, React.createElement(AccessCheck, {\n        checkType: \"MANAGER\",\n        userAccess: accessType,\n        fleetUserRow: this,\n        userId: fleetUser.id\n      }), React.createElement(AccessCheck, {\n        checkType: \"UPLOAD\",\n        userAccess: accessType,\n        fleetUserRow: this,\n        userId: fleetUser.id\n      }), React.createElement(AccessCheck, {\n        checkType: \"VIEW\",\n        userAccess: accessType,\n        fleetUserRow: this,\n        userId: fleetUser.id\n      }), React.createElement(AccessCheck, {\n        checkType: \"WAITING\",\n        userAccess: accessType,\n        fleetUserRow: this,\n        userId: fleetUser.id\n      }), React.createElement(AccessCheck, {\n        checkType: \"DENIED\",\n        userAccess: accessType,\n        fleetUserRow: this,\n        userId: fleetUser.id\n      })), React.createElement(\"td\", null, React.createElement(\"button\", {\n        className: buttonClasses,\n        style: {\n          padding: \"2 6 2 6\"\n        },\n        disabled: buttonDisabled,\n        onClick: function onClick() {\n          return _this2.updateUserAccess(fleetUser);\n        }\n      }, \"Update\")));\n    }\n  }]);\n\n  return FleetUserRow;\n}(React.Component);\n\nvar ManageFleetCard =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(ManageFleetCard, _React$Component3);\n\n  function ManageFleetCard(props) {\n    var _this3;\n\n    _classCallCheck(this, ManageFleetCard);\n\n    _this3 = _possibleConstructorReturn(this, _getPrototypeOf(ManageFleetCard).call(this, props));\n    _this3.state = {\n      user: _this3.props.user\n    };\n    console.log(\"constructed ManageFleetCard\");\n    return _this3;\n  }\n\n  _createClass(ManageFleetCard, [{\n    key: \"setUser\",\n    value: function setUser(user) {\n      console.log(\"set manage fleet card user\");\n      console.log(user);\n      this.state.user = user;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var hidden = this.props.hidden;\n      var bgStyle = {\n        opacity: 0.8\n      };\n      var fgStyle = {\n        opacity: 1.0\n      };\n      var user = \"\";\n      var fleetName = \"\";\n      var fleetUsers = [];\n\n      if (typeof this.state.user != 'undefined') {\n        user = this.state.user;\n        fleetName = user.fleet.name;\n\n        if (typeof user.fleet.users != 'undefined') {\n          fleetUsers = user.fleet.users;\n        }\n      }\n\n      return React.createElement(\"div\", {\n        className: \"card-body\",\n        hidden: hidden\n      }, React.createElement(\"div\", {\n        className: \"card mb-1\",\n        style: bgStyle\n      }, React.createElement(\"h5\", {\n        className: \"card-header\",\n        style: fgStyle\n      }, \"Manage \", fleetName, \" Users\"), React.createElement(\"div\", {\n        className: \"card-body\",\n        style: fgStyle\n      }, React.createElement(\"table\", {\n        className: \"table\"\n      }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", {\n        scope: \"col\"\n      }, \"Email\"), React.createElement(\"th\", {\n        scope: \"col\"\n      }, \"Name\"), React.createElement(\"th\", {\n        scope: \"col\"\n      }, \"Access Level\"))), React.createElement(\"tbody\", null, fleetUsers.map(function (fleetUser, index) {\n        return React.createElement(FleetUserRow, {\n          key: fleetUser.id,\n          fleetUser: fleetUser\n        });\n      }))))));\n    }\n  }]);\n\n  return ManageFleetCard;\n}(React.Component);\n\nvar manageFleetCard = ReactDOM.render(React.createElement(ManageFleetCard, {\n  user: user\n}), document.querySelector('#manage-fleet-card'));",null]}