{"remainingRequest":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js??ref--4-1!/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/signed_in_navbar.js","dependencies":[{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/signed_in_navbar.js","mtime":1589665823133},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/.babelrc","mtime":1589665823083},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\n\nvar NavLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(NavLink, _React$Component);\n\n  function NavLink() {\n    _classCallCheck(this, NavLink);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(NavLink).apply(this, arguments));\n  }\n\n  _createClass(NavLink, [{\n    key: \"render\",\n    value: function render() {\n      var name = this.props.name;\n      var hidden = this.props.hidden;\n      var active = this.props.active;\n      var _onClick = this.props.onClick;\n      var href = this.props.href;\n      if (typeof href == 'undefined') href = \"javascript:void(0)\"; //make unclick an empty function if its not defined\n\n      if (typeof _onClick == 'undefined') _onClick = function onClick() {}; //console.log(\"rendering navlink '\" + name + \"', active: \" + active);\n\n      var classNames = active ? \"nav-item active\" : \"nav-item\";\n      var isCurrent = active ? React.createElement(\"span\", {\n        className: \"sr-only\"\n      }, \"(current)\") : \"\";\n      return React.createElement(\"li\", {\n        className: classNames\n      }, React.createElement(\"a\", {\n        className: \"nav-link\",\n        href: href,\n        hidden: hidden,\n        onClick: function onClick() {\n          return _onClick();\n        }\n      }, name, \" \", isCurrent));\n    }\n  }]);\n\n  return NavLink;\n}(React.Component);\n\nvar DropdownLink =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(DropdownLink, _React$Component2);\n\n  function DropdownLink() {\n    _classCallCheck(this, DropdownLink);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DropdownLink).apply(this, arguments));\n  }\n\n  _createClass(DropdownLink, [{\n    key: \"render\",\n    value: function render() {\n      var name = this.props.name;\n      var hidden = this.props.hidden;\n      var _onClick2 = this.props.onClick;\n      var href = this.props.href;\n      if (typeof href == 'undefined') href = \"javascript:void(0)\"; //make unclick an empty function if its not defined\n\n      if (typeof _onClick2 == 'undefined') _onClick2 = function onClick() {};\n      console.log(\"rendering dropdownlink '\" + name + \"'\");\n      return React.createElement(\"a\", {\n        className: \"dropdown-item\",\n        href: href,\n        hidden: hidden,\n        onClick: function onClick() {\n          return _onClick2();\n        }\n      }, name);\n    }\n  }]);\n\n  return DropdownLink;\n}(React.Component);\n\nvar SignedInNavbar =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(SignedInNavbar, _React$Component3);\n\n  function SignedInNavbar(props) {\n    var _this;\n\n    _classCallCheck(this, SignedInNavbar);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SignedInNavbar).call(this, props));\n    _this.state = {\n      waitingUserCount: _this.props.waitingUserCount,\n      fleetManager: _this.props.fleetManager\n    };\n    navbar = _assertThisInitialized(_this);\n    return _this;\n  }\n\n  _createClass(SignedInNavbar, [{\n    key: \"setFlightsCard\",\n    value: function setFlightsCard(flightsCard) {\n      this.state.flightsCard = flightsCard;\n    }\n  }, {\n    key: \"toggleMap\",\n    value: function toggleMap() {\n      this.state.flightsCard.toggleMap();\n    }\n  }, {\n    key: \"togglePlot\",\n    value: function togglePlot() {\n      this.state.flightsCard.togglePlot();\n    }\n  }, {\n    key: \"toggleFilter\",\n    value: function toggleFilter() {\n      this.state.flightsCard.toggleFilter();\n    }\n  }, {\n    key: \"mapSelectChanged\",\n    value: function mapSelectChanged() {\n      console.log(\"map select changed!\");\n      var select = document.getElementById('mapLayerSelect');\n      var style = select.value;\n      this.state.flightsCard.mapSelectChanged(style);\n    }\n  }, {\n    key: \"setWaiting\",\n    value: function setWaiting(waitingUserCount) {\n      console.log(\"setting waiting to: \" + waitingUserCount + \"!\");\n      this.state.waitingUserCount = waitingUserCount;\n      console.log(\"waiting now: \" + this.state.waitingUserCount);\n      this.setState(this.state);\n    }\n  }, {\n    key: \"incrementWaiting\",\n    value: function incrementWaiting() {\n      console.log(\"decrementing waiting!\");\n      this.state.waitingUserCount++;\n      console.log(\"waiting now: \" + this.state.waitingUserCount);\n      this.setState(this.state);\n    }\n  }, {\n    key: \"decrementWaiting\",\n    value: function decrementWaiting() {\n      console.log(\"decrementing waiting!\");\n      this.state.waitingUserCount--;\n      console.log(\"waiting now: \" + this.state.waitingUserCount);\n      this.setState(this.state);\n    }\n  }, {\n    key: \"attemptLogIn\",\n    value: function attemptLogIn() {\n      console.log(\"showing login modal!\");\n      loginModal.show();\n    }\n  }, {\n    key: \"attemptLogOut\",\n    value: function attemptLogOut() {\n      console.log(\"attempting log out!\");\n      var submissionData = {};\n      $.ajax({\n        type: 'POST',\n        url: '../logout',\n        data: submissionData,\n        dataType: 'json',\n        success: function success(response) {\n          //processing the response will update the navbar\n          //to the logged out state\n          //redirect to the dashboard page\n          window.location.replace(\"/logout_success\");\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          errorModal.show(\"Error Logging Out\", errorThrown);\n        },\n        async: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var waitingUsersString = \"\";\n      if (this.state.waitingUserCount > 0) waitingUsersString = \" (\" + this.state.waitingUserCount + \")\";\n      var manageHidden = !this.state.fleetManager;\n      var filterButtonClasses = \"p-1 mr-1 expand-import-button btn btn-outline-secondary active\";\n      var plotButtonClasses = \"p-1 mr-1 expand-import-button btn btn-outline-secondary\";\n      var mapButtonClasses = \"p-1 expand-import-button btn btn-outline-secondary\";\n      var navbarBgColor = \"rgba(188,203,218,0.8)\";\n      var selectBgColor = \"rgba(203,210,218,0.8)\"; //const buttonStyle = { backgroundColor : selectBgColor };\n\n      var buttonStyle = {};\n      return React.createElement(\"nav\", {\n        id: \"ngafid-navbar\",\n        className: \"navbar navbar-expand-lg navbar-light\",\n        style: {\n          zIndex: \"999\",\n          opacity: \"1.0\",\n          backgroundColor: navbarBgColor\n        }\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand\",\n        href: \"../\"\n      }, \"NGAFID\"), React.createElement(\"button\", {\n        className: \"navbar-toggler\",\n        type: \"button\",\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#navbarNavDropdown\",\n        \"aria-controls\": \"navbarNavDropdown\",\n        \"aria-expanded\": \"false\",\n        \"aria-label\": \"Toggle navigation\"\n      }, React.createElement(\"span\", {\n        className: \"navbar-toggler-icon\"\n      })), React.createElement(\"div\", {\n        className: \"collapse navbar-collapse\",\n        id: \"navbarNavDropdown\"\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav mr-auto\"\n      }, React.createElement(\"ul\", {\n        className: \"navbar-nav mr-auto\",\n        hidden: this.props.plotMapHidden\n      }, React.createElement(\"button\", {\n        id: \"filter-toggle-button\",\n        className: filterButtonClasses,\n        \"data-toggle\": \"button\",\n        title: \"Toggle the filter.\",\n        \"aria-pressed\": \"false\",\n        style: buttonStyle,\n        onClick: function onClick() {\n          return _this2.toggleFilter();\n        }\n      }, React.createElement(\"i\", {\n        className: \"fa fa-search p-1\"\n      })), React.createElement(\"button\", {\n        id: \"plot-toggle-button\",\n        className: plotButtonClasses,\n        \"data-toggle\": \"button\",\n        title: \"Toggle the plot.\",\n        \"aria-pressed\": \"false\",\n        style: buttonStyle,\n        onClick: function onClick() {\n          return _this2.togglePlot();\n        }\n      }, React.createElement(\"i\", {\n        className: \"fa fa-area-chart p-1\"\n      })), React.createElement(\"div\", {\n        className: \"input-group m-0\"\n      }, React.createElement(\"div\", {\n        className: \"input-group-prepend\"\n      }, React.createElement(\"button\", {\n        id: \"map-toggle-button\",\n        className: mapButtonClasses,\n        \"data-toggle\": \"button\",\n        title: \"Toggle the map.\",\n        \"aria-pressed\": \"false\",\n        style: buttonStyle,\n        onClick: function onClick() {\n          return _this2.toggleMap();\n        }\n      }, React.createElement(\"i\", {\n        className: \"fa fa-globe p-1\"\n      }))), React.createElement(\"select\", {\n        className: \"custom-select\",\n        defaultValue: \"Road\",\n        id: \"mapLayerSelect\",\n        style: {\n          backgroundColor: selectBgColor\n        },\n        onChange: function onChange() {\n          return _this2.mapSelectChanged();\n        }\n      }, React.createElement(\"option\", {\n        value: \"Aerial\"\n      }, \"Aerial\"), React.createElement(\"option\", {\n        value: \"AerialWithLabels\"\n      }, \"Aerial with labels\"), React.createElement(\"option\", {\n        value: \"Road\"\n      }, \"Road (static)\"), React.createElement(\"option\", {\n        value: \"RoadOnDemand\"\n      }, \"Road (dynamic)\"), React.createElement(\"option\", {\n        value: \"SectionalCharts\"\n      }, \"Sectional Charts\"), React.createElement(\"option\", {\n        value: \"TerminalAreaCharts\"\n      }, \"Terminal Area Charts\"), React.createElement(\"option\", {\n        value: \"IFREnrouteLowCharts\"\n      }, \"IFR Enroute Low Charts\"), React.createElement(\"option\", {\n        value: \"IFREnrouteHighCharts\"\n      }, \"IFR Enroute High Charts\"))))), React.createElement(\"ul\", {\n        className: \"navbar-nav\"\n      }, React.createElement(NavLink, {\n        name: \"Dashboard\",\n        href: \"/protected/dashboard\"\n      }), React.createElement(NavLink, {\n        name: \"Flights\",\n        href: \"/protected/flights\"\n      }), React.createElement(NavLink, {\n        name: \"Imports\",\n        href: \"/protected/imports\"\n      }), React.createElement(NavLink, {\n        name: \"Uploads\",\n        href: \"/protected/uploads\"\n      }), React.createElement(\"li\", {\n        className: \"nav-item dropdown\"\n      }, React.createElement(\"a\", {\n        className: \"nav-link dropdown-toggle\",\n        href: \"javascript:void(0)\",\n        id: \"navbarDropdownMenuLink\",\n        role: \"button\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"false\"\n      }, \"Account\" + waitingUsersString), React.createElement(\"div\", {\n        className: \"dropdown-menu dropdown-menu-right text-right\",\n        \"aria-labelledby\": \"navbarDropdownMenuLink\"\n      }, React.createElement(DropdownLink, {\n        name: \"Manage Fleet\" + waitingUsersString,\n        hidden: manageHidden,\n        href: \"/protected/manage_fleet\"\n      }), React.createElement(\"div\", {\n        className: \"dropdown-divider\",\n        hidden: manageHidden\n      }), React.createElement(DropdownLink, {\n        name: \"Update Password\",\n        hidden: false,\n        href: \"/protected/update_password\"\n      }), React.createElement(DropdownLink, {\n        name: \"Update Profile\",\n        hidden: false,\n        href: \"/protected/update_profile\"\n      }), React.createElement(\"div\", {\n        className: \"dropdown-divider\"\n      }), React.createElement(DropdownLink, {\n        name: \"Log Out\",\n        hidden: false,\n        onClick: function onClick() {\n          return _this2.attemptLogOut();\n        }\n      }))))));\n    }\n  }]);\n\n  return SignedInNavbar;\n}(React.Component);\n\nvar navbar = ReactDOM.render(React.createElement(SignedInNavbar, {\n  waitingUserCount: waitingUserCount,\n  fleetManager: fleetManager,\n  plotMapHidden: plotMapHidden\n}), document.querySelector('#navbar'));\nexport { navbar };",null]}