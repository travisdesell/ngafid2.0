{"remainingRequest":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/ngafid/ngafid2.0/src/main/javascript/events_component.js","dependencies":[{"path":"/ngafid/ngafid2.0/src/main/javascript/events_component.js","mtime":1666016693590},{"path":"/ngafid/ngafid2.0/.babelrc","mtime":1664810261182},{"path":"/ngafid/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":1664910647113},{"path":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":1664910647213}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Popover from 'react-bootstrap/Popover';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\nimport Plotly from 'plotly.js';\nimport { map } from \"./map.js\";\nimport { Circle, Fill, Icon, Stroke, Style } from 'ol/style.js';\nimport GetDescription from \"./get_description\";\nimport { EventAnnotation } from './event_annotation.js';\nimport { errorModal } from './error_modal.js';\nimport { confirmModal } from './confirm_modal.js'; // establish set of RGB values to combine //\n\nvar BG_values = [\"00\", \"55\", \"AA\", \"FF\"];\nvar R_values = [\"FF\", \"D6\", \"AB\", \"80\"]; // heavier on the red for \"warmer\" colors\n// populate hashmap of event definition IDs to RGB values\n\nvar eventColorScheme = {};\nvar LOWEST_EVENT_ID = -7;\nvar HIGHEST_EVENT_ID = 70;\nvar ABS_EVENT_ID = Math.abs(LOWEST_EVENT_ID);\n\nfor (var d = LOWEST_EVENT_ID; d < HIGHEST_EVENT_ID; d++) {\n  // iterate through RGB permutations (up to 64)\n  var green = (d + ABS_EVENT_ID) % 4;\n  var blue = Math.trunc((d + ABS_EVENT_ID) / 4) % 4;\n  var red = Math.trunc((d + ABS_EVENT_ID) / 16) % 4;\n  eventColorScheme[d + 1] = \"#\" + R_values[red] + BG_values[green] + BG_values[blue];\n} //save the event definitions after the first event load so we can reuse them and not\n//have to keep sending them from the server\n\n\nglobal.eventDefinitionsLoaded = false;\nglobal.eventDefinitions = null;\n\nvar Events = /*#__PURE__*/function (_React$Component) {\n  _inherits(Events, _React$Component);\n\n  var _super = _createSuper(Events);\n\n  function Events(props) {\n    var _this;\n\n    _classCallCheck(this, Events);\n\n    _this = _super.call(this, props);\n    console.log(\"constructing Events, props.events:\");\n    console.log(props.events);\n    var definitionsPresent = [];\n\n    for (var i = 0; i < props.events.length; i++) {\n      if (!definitionsPresent.includes(props.events[i].eventDefinition)) {\n        definitionsPresent.push(props.events[i].eventDefinition);\n      } // assign color scheme to events, based on definition ID\n\n\n      props.events[i].color = eventColorScheme[props.events[i].eventDefinitionId];\n    }\n\n    _this.state = {\n      events: props.events,\n      definitions: definitionsPresent\n    };\n    return _this;\n  }\n\n  _createClass(Events, [{\n    key: \"updateEventDisplay\",\n    value: function updateEventDisplay(index, toggle) {\n      // Draw rectangles on plot\n      var event = this.state.events[index];\n      console.log(\"drawing plotly rectangle from \" + event.startLine + \" to \" + event.endLine);\n      var shapes = global.plotlyLayout.shapes;\n      var update = {\n        id: event.id,\n        type: 'rect',\n        // x-reference is assigned to the x-values\n        xref: 'x',\n        // y-reference is assigned to the plot paper [0,1]\n        yref: 'paper',\n        x0: event.startLine - 1,\n        y0: 0,\n        x1: event.endLine + 1,\n        y1: 1,\n        fillcolor: event.color,\n        'opacity': 0.5,\n        line: {\n          'width': 0\n        }\n      };\n      var found = false;\n\n      for (var i = 0; i < shapes.length; i++) {\n        if (shapes[i].id == event.id) {\n          if (toggle) {\n            shapes.splice(i, 1);\n            found = true;\n          } else {\n            shapes[i] = update;\n            found = true;\n            break;\n          }\n        }\n      }\n\n      if (!found && toggle) {\n        shapes.push(update);\n      }\n\n      Plotly.relayout('plot', global.plotlyLayout); // Toggle visibility of clicked event's Feature //\n      // create eventStyle & hiddenStyle\n\n      var eventStyle = new Style({\n        // create style getter methods**\n        stroke: new Stroke({\n          color: event.color,\n          width: 7\n        })\n      });\n      var outlineStyle = new Style({\n        // create style getter methods**\n        stroke: new Stroke({\n          color: \"#000000\",\n          width: 8\n        })\n      });\n      var hiddenStyle = new Style({\n        stroke: new Stroke({\n          color: [0, 0, 0, 0],\n          width: 3\n        })\n      }); // get event info from flight\n\n      var flight = this.props.parent;\n      var eventMapped = flight.state.eventsMapped[index];\n      var pathVisible = flight.state.pathVisible;\n      var eventPoints = flight.state.eventPoints;\n      var eventOutline = flight.state.eventOutlines[index];\n      event = eventPoints[index]; //override event var w/ event Feature\n      //toggle eventLayer style\n\n      if (!eventMapped) {\n        // if event hidden\n        event.setStyle(eventStyle);\n        eventOutline.setStyle(outlineStyle);\n        flight.state.eventsMapped[index] = !eventMapped; // center map view on event location\n\n        var coords = event.getGeometry().getFirstCoordinate();\n\n        if (coords.length > 0 && pathVisible) {\n          map.getView().setCenter(coords);\n        }\n      } else {\n        // if event displayed\n        event.setStyle(hiddenStyle);\n        eventOutline.setStyle(hiddenStyle);\n        flight.state.eventsMapped[index] = !eventMapped;\n      }\n    }\n  }, {\n    key: \"changeColor\",\n    value: function changeColor(e, index) {\n      this.state.events[index].color = e.target.value;\n      this.setState({\n        events: this.state.events\n      });\n      this.updateEventDisplay(index, false);\n    }\n  }, {\n    key: \"eventClicked\",\n    value: function eventClicked(index) {\n      this.updateEventDisplay(index, true);\n    }\n  }, {\n    key: \"getAnnotationTypes\",\n    value: function getAnnotationTypes() {\n      var types = [];\n      $.ajax({\n        type: 'GET',\n        url: '/protected/event_classes',\n        dataType: 'json',\n        success: function success(response) {\n          types = new Map(Object.entries(response));\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {},\n        async: false\n      });\n      return types;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cellClasses = \"d-flex flex-row p-1\";\n      var cellStyle = {\n        \"overflow\": \"visible\"\n      };\n      var buttonClasses = \"m-1 btn btn-outline-secondary\";\n      var styleButton = {\n        flex: \"0 0 10em\"\n      };\n      var eventType = \"type\";\n      var eventTypeSet = new Set();\n      var eventTypeButtons = [];\n      var thisFlight = this.props.parent;\n      var eventAnnotationTypes = this.getAnnotationTypes();\n      this.state.events.map(function (event, index) {\n        if (!eventTypeSet.has(event.eventDefinitionId)) {\n          // add new eventDef to types set\n          eventTypeSet.add(event.eventDefinitionId); // create new button for toggle\n\n          var type = /*#__PURE__*/React.createElement(\"button\", {\n            className: buttonClasses,\n            style: {\n              flex: \"0 0 10em\",\n              \"backgroundColor\": eventColorScheme[event.eventDefinitionId],\n              \"color\": \"#000000\"\n            },\n            \"data-toggle\": \"button\",\n            \"aria-pressed\": \"false\",\n            key: index,\n            onClick: function onClick() {\n              var flight = _this2.props.parent;\n              var eventsMapped = flight.state.eventsMapped;\n              var displayStatus = false;\n              var displayStatusSet = false; // update eventDisplay for every event concerned\n\n              for (var e = 0; e < _this2.state.events.length; e++) {\n                if (_this2.state.events[e].eventDefinitionId == event.eventDefinitionId) {\n                  // ensure unified display\n                  if (!displayStatusSet) {\n                    displayStatus = !eventsMapped[e];\n                    displayStatusSet = true;\n                  } // eventsMapped[e] = displayStatus;\n                  // this.updateEventDisplay(e);\n\n\n                  if (eventsMapped[e] != displayStatus) {\n                    document.getElementById(\"_\" + flight.props.flightInfo.id + e).click();\n                  }\n                }\n              }\n            },\n            title: GetDescription(event.eventDefinition.name)\n          }, /*#__PURE__*/React.createElement(\"b\", null, event.eventDefinition.name));\n          eventTypeButtons.push(type);\n          console.log(eventColorScheme);\n        }\n      });\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"b\", {\n        className: \"p-1\",\n        style: {\n          marginBottom: \"0\"\n        }\n      }, \"Events:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"eventTypes\"\n      }, eventTypeButtons.map(function (button) {\n        return button;\n      })), this.state.events.map(function (event, index) {\n        var buttonID = \"_\" + _this2.props.parent.props.flightInfo.id + index;\n        var otherFlightText = \"\";\n        var otherFlightURL = \"\";\n        var eventAnnotations = \"\";\n\n        if (event.eventDefinitionId == -1) {\n          otherFlightText = \", other flight id: \";\n          otherFlightURL = /*#__PURE__*/React.createElement(\"a\", {\n            href: \"./flight?flight_id=\" + event.flightId + \"&flight_id=\" + event.otherFlightId\n          }, \" \", event.otherFlightId, \" \");\n        }\n\n        if (event.eventDefinitionId >= 50 && event.eventDefinitionId <= 53) {\n          eventAnnotations = /*#__PURE__*/React.createElement(EventAnnotation, {\n            style: cellStyle,\n            id: event.id,\n            event: event,\n            annotationTypes: eventAnnotationTypes\n          });\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: cellClasses,\n          style: cellStyle,\n          key: index\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            flex: \"0 0\"\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"color\",\n          name: \"eventColor\",\n          value: event.color,\n          onChange: function onChange(e) {\n            _this2.changeColor(e, index);\n          },\n          style: {\n            padding: \"3 2 3 2\",\n            border: \"1\",\n            margin: \"5 4 4 0\",\n            height: \"36px\",\n            width: \"36px\"\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          id: buttonID,\n          className: buttonClasses,\n          style: styleButton,\n          \"data-toggle\": \"button\",\n          \"aria-pressed\": \"false\",\n          onClick: function onClick() {\n            return _this2.eventClicked(index);\n          }\n        }, /*#__PURE__*/React.createElement(\"b\", null, event.eventDefinition.name), \" \", \" -- \" + event.startTime + \" to \" + event.endTime + \", severity: \" + (Math.round(event.severity * 100) / 100).toFixed(2), \" \", otherFlightText, \" \", otherFlightURL), eventAnnotations);\n      }));\n    }\n  }]);\n\n  return Events;\n}(React.Component);\n\nexport { Events, eventColorScheme };",{"version":3,"names":["React","Component","ReactDOM","Dropdown","Popover","Col","Row","Button","Table","OverlayTrigger","Plotly","map","Circle","Fill","Icon","Stroke","Style","GetDescription","EventAnnotation","errorModal","confirmModal","BG_values","R_values","eventColorScheme","LOWEST_EVENT_ID","HIGHEST_EVENT_ID","ABS_EVENT_ID","Math","abs","d","green","blue","trunc","red","global","eventDefinitionsLoaded","eventDefinitions","Events","props","console","log","events","definitionsPresent","i","length","includes","eventDefinition","push","color","eventDefinitionId","state","definitions","index","toggle","event","startLine","endLine","shapes","plotlyLayout","update","id","type","xref","yref","x0","y0","x1","y1","fillcolor","line","found","splice","relayout","eventStyle","stroke","width","outlineStyle","hiddenStyle","flight","parent","eventMapped","eventsMapped","pathVisible","eventPoints","eventOutline","eventOutlines","setStyle","coords","getGeometry","getFirstCoordinate","getView","setCenter","e","target","value","setState","updateEventDisplay","types","$","ajax","url","dataType","success","response","Map","Object","entries","error","jqXHR","textStatus","errorThrown","async","cellClasses","cellStyle","buttonClasses","styleButton","flex","eventType","eventTypeSet","Set","eventTypeButtons","thisFlight","eventAnnotationTypes","getAnnotationTypes","has","add","displayStatus","displayStatusSet","document","getElementById","flightInfo","click","name","marginBottom","button","buttonID","otherFlightText","otherFlightURL","eventAnnotations","flightId","otherFlightId","changeColor","padding","border","margin","height","eventClicked","startTime","endTime","round","severity","toFixed"],"sources":["/ngafid/ngafid2.0/src/main/javascript/events_component.js"],"sourcesContent":["import 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Popover from 'react-bootstrap/Popover';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport OverlayTrigger from 'react-bootstrap/OverlayTrigger';\n\nimport Plotly from 'plotly.js';\nimport { map } from \"./map.js\";\nimport {Circle, Fill, Icon, Stroke, Style} from 'ol/style.js';\nimport GetDescription from \"./get_description\";\nimport { EventAnnotation } from './event_annotation.js';\nimport { errorModal } from './error_modal.js';\nimport { confirmModal } from './confirm_modal.js';\n\n\n// establish set of RGB values to combine //\nlet BG_values = [\"00\", \"55\", \"AA\", \"FF\"];\nlet R_values = [\"FF\", \"D6\", \"AB\", \"80\"];                            // heavier on the red for \"warmer\" colors\n\n\n// populate hashmap of event definition IDs to RGB values\nvar eventColorScheme = {};\nconst LOWEST_EVENT_ID = -7;\nconst HIGHEST_EVENT_ID = 70;\nconst ABS_EVENT_ID = Math.abs(LOWEST_EVENT_ID);\n\nfor (let d = LOWEST_EVENT_ID; d < HIGHEST_EVENT_ID; d++) {\n    // iterate through RGB permutations (up to 64)\n    let green = (d + ABS_EVENT_ID) % 4;\n    let blue = Math.trunc((d + ABS_EVENT_ID) / 4) % 4;\n    let red = Math.trunc((d + ABS_EVENT_ID) / 16) % 4;\n\n    eventColorScheme[(d + 1)] = \"#\" + R_values[red] + BG_values[green] + BG_values[blue];\n}\n\n\n//save the event definitions after the first event load so we can reuse them and not\n//have to keep sending them from the server\nglobal.eventDefinitionsLoaded = false;\nglobal.eventDefinitions = null;\n\nclass Events extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(\"constructing Events, props.events:\");\n        console.log(props.events);\n\n        let definitionsPresent = [];\n\n        for (let i = 0; i < props.events.length; i++) {\n            if (!definitionsPresent.includes(props.events[i].eventDefinition)) {\n                definitionsPresent.push(props.events[i].eventDefinition);\n            }\n\n            // assign color scheme to events, based on definition ID\n            props.events[i].color = eventColorScheme[props.events[i].eventDefinitionId];\n        }\n\n        this.state = {\n            events : props.events,\n            definitions : definitionsPresent,\n        };\n    }\n\n    updateEventDisplay(index, toggle) {\n            // Draw rectangles on plot\n        var event = this.state.events[index];\n        console.log(\"drawing plotly rectangle from \" + event.startLine + \" to \" + event.endLine);\n        let shapes = global.plotlyLayout.shapes;\n\n        let update = {\n            id: event.id,\n            type: 'rect',\n            // x-reference is assigned to the x-values\n            xref: 'x',\n            // y-reference is assigned to the plot paper [0,1]\n            yref: 'paper',\n            x0: event.startLine - 1,\n            y0: 0,\n            x1: event.endLine + 1,\n            y1: 1,\n            fillcolor: event.color,\n            'opacity': 0.5,\n            line: {\n                'width': 0,\n            }\n        };\n\n        let found = false;\n        for (let i = 0; i < shapes.length; i++) {\n            if (shapes[i].id == event.id) {\n                if (toggle) {\n                    shapes.splice(i, 1);\n                    found = true;\n                } else {\n                    shapes[i] = update;\n                    found = true;\n                    break;\n                }\n            }\n        }\n\n        if (!found && toggle) {\n            shapes.push(update);\n        }\n\n        Plotly.relayout('plot', global.plotlyLayout);\n\n\n        // Toggle visibility of clicked event's Feature //\n\n        // create eventStyle & hiddenStyle\n        var eventStyle = new Style({                                                   // create style getter methods**\n            stroke: new Stroke({\n                color: event.color,\n                width: 7\n            })\n        });\n\n        var outlineStyle = new Style({                                                   // create style getter methods**\n            stroke: new Stroke({\n                color: \"#000000\",\n                width: 8\n            })\n        });\n\n        var hiddenStyle = new Style({\n            stroke: new Stroke({\n                color: [0,0,0,0],\n                width: 3\n            })\n        });\n\n        // get event info from flight\n        let flight = this.props.parent;\n        let eventMapped = flight.state.eventsMapped[index];\n        let pathVisible = flight.state.pathVisible;\n        let eventPoints = flight.state.eventPoints;\n        let eventOutline = flight.state.eventOutlines[index];\n        event = eventPoints[index];                                 //override event var w/ event Feature\n\n        //toggle eventLayer style\n        if (!eventMapped) {                             // if event hidden\n            event.setStyle(eventStyle);\n            eventOutline.setStyle(outlineStyle);\n            flight.state.eventsMapped[index] = !eventMapped;\n\n            // center map view on event location\n            let coords = event.getGeometry().getFirstCoordinate();\n            if (coords.length > 0 && pathVisible) {\n                map.getView().setCenter(coords);\n            }\n\n        } else {                                        // if event displayed\n            event.setStyle(hiddenStyle);\n            eventOutline.setStyle(hiddenStyle);\n            flight.state.eventsMapped[index] = !eventMapped;\n        }\n    }\n\n    changeColor(e, index) {\n        this.state.events[index].color = e.target.value;\n        this.setState({\n            events : this.state.events\n        });\n        this.updateEventDisplay(index, false);\n    }\n    \n\n    eventClicked(index) {\n        this.updateEventDisplay(index, true);\n    }\n\n    getAnnotationTypes() {\n        let types = [];\n\n        $.ajax({\n            type: 'GET',\n            url: '/protected/event_classes',\n            dataType : 'json',\n            success : function(response) {\n                types = new Map(Object.entries(response));\n            },\n            error : function(jqXHR, textStatus, errorThrown) {\n            },\n            async: false\n        });\n\n        return types;\n    }\n\n    render() {\n        let cellClasses = \"d-flex flex-row p-1\";\n        let cellStyle = { \"overflow\" : \"visible\" };\n        let buttonClasses = \"m-1 btn btn-outline-secondary\";\n        const styleButton = {\n            flex : \"0 0 10em\"\n        };\n\n        let eventType = \"type\";\n\n        let eventTypeSet = new Set();\n        let eventTypeButtons = [];\n        let thisFlight = this.props.parent;\n\n        const eventAnnotationTypes = this.getAnnotationTypes();\n\n        this.state.events.map((event, index) => {\n            if (!eventTypeSet.has(event.eventDefinitionId)) {\n                // add new eventDef to types set\n                eventTypeSet.add(event.eventDefinitionId);\n\n                // create new button for toggle\n                let type =\n                        (\n                            <button className={buttonClasses} style={{flex : \"0 0 10em\", \"backgroundColor\": eventColorScheme[event.eventDefinitionId], \"color\" : \"#000000\"}} data-toggle=\"button\" aria-pressed=\"false\" key={index}\n                                        onClick={() =>\n                                            {\n                                                let flight = this.props.parent;\n                                                let eventsMapped = flight.state.eventsMapped;\n                                                let displayStatus = false;\n                                                let displayStatusSet = false;\n\n                                                // update eventDisplay for every event concerned\n                                                for (let e = 0; e < this.state.events.length; e++) {\n                                                    if (this.state.events[e].eventDefinitionId == event.eventDefinitionId) {\n                                                        // ensure unified display\n                                                        if (!displayStatusSet) {\n                                                            displayStatus = !eventsMapped[e];\n                                                            displayStatusSet = true;\n                                                        }\n                                                        // eventsMapped[e] = displayStatus;\n                                                        // this.updateEventDisplay(e);\n\n                                                        if (eventsMapped[e] != displayStatus) {\n                                                            document.getElementById(\"_\" + flight.props.flightInfo.id + e).click();\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    title={GetDescription(event.eventDefinition.name)}>\n\n                                <b>{event.eventDefinition.name}</b>\n                            </button>\n                        );\n                eventTypeButtons.push(type);\n\n                console.log(eventColorScheme);\n            }\n        })\n\n        return (\n            <div>\n                <b className={\"p-1\"} style={{marginBottom:\"0\"}}>Events:</b>\n\n                <div className={\"eventTypes\"}>\n                    {\n                        eventTypeButtons.map( (button) => {\n                            return (\n                                button\n                            )\n                        })\n                    }\n                </div>\n\n                {\n                    this.state.events.map((event, index) => {\n                        let buttonID = \"_\" + this.props.parent.props.flightInfo.id + index;\n                        let otherFlightText = \"\";\n                        let otherFlightURL = \"\";\n                        let eventAnnotations = \"\";\n\n\n                        if (event.eventDefinitionId == -1) { \n                            otherFlightText = \", other flight id: \";\n                            otherFlightURL = ( <a href={\"./flight?flight_id=\" + event.flightId + \"&flight_id=\" + event.otherFlightId}> {event.otherFlightId} </a> );\n                        }\n\n                        if (event.eventDefinitionId >= 50 && event.eventDefinitionId <= 53) {\n                            eventAnnotations = (\n                                <EventAnnotation style={cellStyle}\n                                    id={event.id}\n                                    event={event}\n                                    annotationTypes={eventAnnotationTypes}\n                                >\n                                </EventAnnotation>\n                            );\n                        }\n\n                        return (\n                            <div className={cellClasses} style={cellStyle} key={index}>\n                                <div style={{flex: \"0 0\"}}>\n                                    <input type=\"color\" name=\"eventColor\" value={event.color} onChange={(e) => {this.changeColor(e, index); }} style={{padding:\"3 2 3 2\", border:\"1\", margin:\"5 4 4 0\", height:\"36px\", width:\"36px\"}}/>\n                                </div>\n\n                                <button id={buttonID} className={buttonClasses} style={styleButton} data-toggle=\"button\" aria-pressed=\"false\" onClick={() => this.eventClicked(index)}>\n                                    <b>{event.eventDefinition.name}</b> {\" -- \" + event.startTime + \" to \" + event.endTime + \", severity: \" + (Math.round(event.severity * 100) / 100).toFixed(2)} { otherFlightText } { otherFlightURL }\n\n                                </button>\n\n                                {eventAnnotations}\n\n                            </div>\n                        );\n                    })\n                }\n\n            </div>\n        );\n\n    }\n}\n\nexport { Events, eventColorScheme };\n"],"mappings":"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"}]}