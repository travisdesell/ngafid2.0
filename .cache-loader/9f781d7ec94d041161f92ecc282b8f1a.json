{"remainingRequest":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js??ref--4-1!/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/map.js","dependencies":[{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/map.js","mtime":1589665823133},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/.babelrc","mtime":1589665823083},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Map, View } from 'ol';\nimport BingMaps from 'ol/source/BingMaps.js';\nimport { fromLonLat, toLonLat } from 'ol/proj.js';\nimport TileLayer from 'ol/layer/Tile';\nimport XYZ from 'ol/source/XYZ.js';\nimport OSM from 'ol/source/OSM';\nimport { errorModal } from \"./error_modal.js\";\nimport { navbar } from \"./signed_in_navbar.js\";\nconsole.log(\"doing first load after setting state!\");\nvar styles = ['Aerial', 'AerialWithLabels', 'Road', 'RoadOnDemand'];\nvar layers = [];\nvar i;\nvar ii = styles.length; //do the mapquest satellite differently\n\nfor (i = 0; i < ii; ++i) {\n  layers.push(new TileLayer({\n    visible: false,\n    preload: Infinity,\n    source: new BingMaps({\n      key: 'At3fIeQ6GJzbuGZpfWYkVjMDuzTuhYeFjHTzkraUafn06HMY3Eq1hDvZUlqq5Ysf',\n      imagerySet: styles[i] // use maxZoom 19 to see stretched tiles instead of the BingMaps\n      // \"no photos at this zoom level\" tiles\n      // maxZoom: 19\n\n    })\n  }));\n} //modified from chartbundle: http://wms.chartbundle.com/charts/tms.html\n//http://wms.chartbundle.com/charts/tms.js.txt\n\n\nstyles.push('SectionalCharts');\nvar tms_sec = new TileLayer({\n  visible: false,\n  preload: Infinity,\n  source: new XYZ({\n    url: \"https://wms.chartbundle.com/tms/1.0.0/sec/{z}/{x}/{-y}.png\"\n  })\n});\nlayers.push(tms_sec);\nstyles.push('IFREnrouteLowCharts');\nvar tms_enrl = new TileLayer({\n  visible: false,\n  preload: Infinity,\n  source: new XYZ({\n    url: \"https://wms.chartbundle.com/tms/1.0.0/enrl/{z}/{x}/{-y}.png\"\n  })\n});\nlayers.push(tms_enrl);\nstyles.push('IFREnrouteHighCharts');\nvar tms_enrh = new TileLayer({\n  visible: false,\n  preload: Infinity,\n  source: new XYZ({\n    url: \"https://wms.chartbundle.com/tms/1.0.0/enrh/{z}/{x}/{-y}.png\"\n  })\n});\nlayers.push(tms_enrh);\nstyles.push('TerminalAreaCharts');\nvar tms_tac = new TileLayer({\n  visible: false,\n  preload: Infinity,\n  source: new XYZ({\n    url: \"https://wms.chartbundle.com/tms/1.0.0/tac/{z}/{x}/{-y}.png\"\n  })\n});\nlayers.push(tms_tac);\nvar center = fromLonLat([-97.0329, 47.9253]);\nlayers[2].setVisible(true);\nvar map = new Map({\n  target: 'map',\n  layers: layers,\n  loadTilesWhileInteracting: true,\n  view: new View({\n    center: center,\n    zoom: 9\n  })\n});\n/*\nvar layer = new ol.layer.Tile({\n    source: new ol.source.OSM()\n});\n\nvar center = ol.proj.fromLonLat([-97.0329, 47.9253]);\nconsole.log(\"center:\");\nconsole.log(center);\n\nvar map = new ol.Map({\n    target: 'map',\n    layers: [ layer ],\n    view: new ol.View({\n        center: center,\n        zoom: 12\n    })\n});\n*/\n\nvar Colors = {};\nColors.names = {\n  aqua: \"#00ffff\",\n  //azure: \"#f0ffff\",\n  beige: \"#f5f5dc\",\n  black: \"#000000\",\n  blue: \"#0000ff\",\n  brown: \"#a52a2a\",\n  cyan: \"#00ffff\",\n  darkblue: \"#00008b\",\n  darkcyan: \"#008b8b\",\n  darkgrey: \"#a9a9a9\",\n  darkgreen: \"#006400\",\n  darkkhaki: \"#bdb76b\",\n  darkmagenta: \"#8b008b\",\n  darkolivegreen: \"#556b2f\",\n  darkorange: \"#ff8c00\",\n  darkorchid: \"#9932cc\",\n  darkred: \"#8b0000\",\n  darksalmon: \"#e9967a\",\n  darkviolet: \"#9400d3\",\n  fuchsia: \"#ff00ff\",\n  gold: \"#ffd700\",\n  green: \"#008000\",\n  indigo: \"#4b0082\",\n  //khaki: \"#f0e68c\",\n  //lightblue: \"#add8e6\",\n  //lightcyan: \"#e0ffff\",\n  //lightgreen: \"#90ee90\",\n  //lightgrey: \"#d3d3d3\",\n  //lightpink: \"#ffb6c1\",\n  //lightyellow: \"#ffffe0\",\n  lime: \"#00ff00\",\n  magenta: \"#ff00ff\",\n  maroon: \"#800000\",\n  navy: \"#000080\",\n  olive: \"#808000\",\n  orange: \"#ffa500\",\n  pink: \"#ffc0cb\",\n  purple: \"#800080\",\n  violet: \"#800080\",\n  red: \"#ff0000\",\n  silver: \"#c0c0c0\",\n  //white: \"#ffffff\",\n  yellow: \"#ffff00\"\n};\n\nColors.random = function () {\n  var result;\n  var count = 0;\n\n  for (var prop in this.names) {\n    if (Math.random() < 1 / ++count) result = prop;\n  }\n\n  return result;\n};\n\nColors.randomValue = function () {\n  var result;\n  var count = 0;\n\n  for (var prop in this.names) {\n    if (Math.random() < 1 / ++count) result = this.names[prop];\n  }\n\n  return result;\n};\n\nexport { map, styles, layers, Colors };",null]}