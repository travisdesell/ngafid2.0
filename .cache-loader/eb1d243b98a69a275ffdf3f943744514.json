{"remainingRequest":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/ngafid/ngafid2.0/src/main/javascript/tags_component.js","dependencies":[{"path":"/ngafid/ngafid2.0/src/main/javascript/tags_component.js","mtime":1664810261290},{"path":"/ngafid/ngafid2.0/.babelrc","mtime":1664810261182},{"path":"/ngafid/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":1664910647113},{"path":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":1664910647213}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport { Colors } from \"./map.js\";\nimport { errorModal } from \"./error_modal.js\";\nimport { confirmModal } from \"./confirm_modal.js\";\n\nvar cloneDeep = require('clone-deep'); //This will be helpful for text inputs\n\n\nfunction invalidString(str) {\n  return str == null || str.length < 0 || /^\\s*$/.test(str);\n}\n/**\n * Tags module\n * Houses the state and information for user-defined tags\n * @module flights/Tags\n */\n\n\nvar Tags = /*#__PURE__*/function (_React$Component) {\n  _inherits(Tags, _React$Component);\n\n  var _super = _createSuper(Tags);\n\n  /**\n   * ReactJS Constructor\n   * Intializes the state of this component\n   * @param props the props that are sent from the parent component\n   */\n  function Tags(props) {\n    var _this;\n\n    _classCallCheck(this, Tags);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      activeTag: null,\n      editedTag: null,\n      //the tag currently being edited\n      infoActive: false,\n      addActive: false,\n      adding: false,\n      addFormActive: false,\n      parent: props.parent\n    };\n    _this.handleFormChange = _this.handleFormChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Tags, [{\n    key: \"unToggleAddForm\",\n    value: function unToggleAddForm() {\n      $(\"#show-add-form-button\").removeClass('active');\n    }\n    /**\n     * called everytime props are updated\n     * @param oldProps the old props before the update\n     */\n    //componentDidUpdate(oldProps) {\n    //console.log(\"props updated\");\n    //const newProps = this.props;\n    //if (oldProps.tags !== newProps.tags) {\n    //this.state.tags = this.props.tags;\n    //this.state.addFormActive = false; //close the add form to indicate the tag has been edited or no longer exists\n    //this.setState(this.state);\n    //}\n    //}\n\n    /**\n     * Handles the event for which the add button is pressed\n     */\n\n  }, {\n    key: \"addClicked\",\n    value: function addClicked() {\n      this.setToggle(-1);\n      this.setState({\n        addActive: !this.state.addActive,\n        infoActive: !this.state.infoActive,\n        addFormActive: this.state.addFormActive ? false : this.state.addFormActive\n      });\n    }\n    /**\n     * Used to compare two tags for equality\n     * @param tagA the first tag to compare\n     * @param tagB the second tag to compare\n     * @return a boolean representing whether or not the two tags are equal\n     */\n\n  }, {\n    key: \"tagEquals\",\n    value: function tagEquals(tagA, tagB) {\n      return tagA != null && tagB != null && //they cant be null!\n      tagA.name == tagB.name && tagA.description == tagB.description && tagA.color == tagB.color;\n    }\n    /**\n     * Prepares to edit or just view a tag by creating a deep copy of the original tag\n     * to be used later on to determine if any changes have been made.\n     * @param tag the tag to edit\n     */\n\n  }, {\n    key: \"selectTag\",\n    value: function selectTag(index, tag) {\n      this.unToggleAddForm();\n      tag.index = index;\n      this.setToggle(index);\n      console.log(\"Editing tag: \" + tag.hashId);\n\n      if (this.state.activeTag == null || this.state.activeTag != tag) {\n        this.state.editing = true;\n        this.state.addFormActive = true;\n        this.state.addActive = false;\n      } else {\n        this.state.editing = !this.state.editing;\n        this.state.addFormActive = !this.state.addFormActive;\n        this.state.addActive = !this.state.addActive;\n      }\n\n      this.state.adding = false;\n      this.state.activeTag = tag;\n      this.state.editedTag = cloneDeep(tag);\n      this.setState(this.state);\n    }\n  }, {\n    key: \"setToggle\",\n    value: function setToggle(index) {\n      if (this.props.flight.tags != null && this.props.flight.tags.length > 0) {\n        var len = this.props.flight.tags.length;\n\n        for (var i = 0; i < len; i++) {\n          if (i != index) {\n            var id = '#tag_button_' + i;\n            $(id).removeClass('active');\n          }\n        }\n      }\n    }\n    /**\n     * shows @module errorModal when a tag has not been edited properly\n     */\n\n  }, {\n    key: \"showNoEditError\",\n    value: function showNoEditError() {\n      errorModal.show(\"Error editing tag\", \"Please make a change to the tag first before pressing submit!\");\n    }\n  }, {\n    key: \"removeTag\",\n    value: function removeTag() {\n      this.props.removeTag(this.props.flight.id, this.state.activeTag.hashId, false);\n      this.setToggle(-1);\n      this.setState({\n        editing: false,\n        addFormActive: false\n      });\n    }\n  }, {\n    key: \"deleteTag\",\n    value: function deleteTag() {\n      this.props.deleteTag(this.props.flight.id, this.state.activeTag.hashId);\n      this.setState({\n        editing: false,\n        addFormActive: false\n      });\n    }\n  }, {\n    key: \"editTag\",\n    value: function editTag() {\n      this.props.editTag(this.state.editedTag, this.state.activeTag);\n      this.setState({\n        addFormActive: false\n      });\n      var id = \"#tag_img_\" + this.state.activeTag.index;\n      $(id).attr('data-title', 'Changes Saved!').tooltip('show');\n      $(\"#tag_button_\" + this.state.activeTag.index).removeClass('active');\n      setTimeout(function () {\n        $(id).tooltip('hide');\n      }.bind(this), 5000);\n    }\n  }, {\n    key: \"createTag\",\n    value: function createTag() {\n      this.props.addTag(this.props.flight.id, $(\"#comName\").val(), $(\"#description\").val(), $(\"#color-picker-tag\").val());\n      this.setState({\n        addFormActive: false\n      });\n      var id = \"#tag_img_\" + this.props.flight.tags.length - 1;\n      console.log(id);\n      setTimeout(function () {\n        $(id).tooltip('hide');\n      }.bind(this), 5000);\n    }\n    /**\n     * Handles state changes for when the 'Create a new tag' option is selected\n     */\n\n  }, {\n    key: \"createClicked\",\n    value: function createClicked() {\n      this.state = {\n        addActive: true,\n        adding: true,\n        editing: false\n      };\n      this.showAddForm();\n    }\n    /**\n     * Shows the form for adding and/or editing a tag\n     */\n\n  }, {\n    key: \"showAddForm\",\n    value: function showAddForm() {\n      this.state.addFormActive = !this.state.addFormActive;\n      this.state.editedTag = {\n        name: \"\",\n        description: \"\",\n        color: Colors.randomValue()\n      };\n      this.setState(this.state);\n    }\n    /**\n     * sets the state value editedTag which is used to make sure that the user has made an edit, before\n     * enabling the submit button\n     * @param e the onChange() event\n     */\n\n  }, {\n    key: \"handleFormChange\",\n    value: function handleFormChange(e) {\n      if (e.target.id == 'comName') {\n        this.state.editedTag.name = e.target.value;\n      } else if (e.target.id == 'description') {\n        this.state.editedTag.description = e.target.value;\n      } else if (e.target.id == 'color-picker-tag') {\n        this.state.editedTag.color = e.target.value;\n      }\n\n      this.setState(this.state);\n    }\n    /**\n     * Renders the Tags component\n     */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cellClasses = \"d-flex flex-row p-1\";\n      var cellStyle = {\n        \"overflowX\": \"auto\"\n      };\n      var vcellStyle = {\n        \"overflowY\": \"visible\"\n      };\n      var addForm = \"\";\n      var addDrop = \"\";\n      var activeTag = this.state.activeTag;\n      var editedTag = this.state.editedTag;\n      var buttonClasses = \"m-1 btn btn-outline-secondary\";\n      var styleButton = {\n        flex: \"0 10 10em\"\n      };\n      var styleButtonSq = {\n        flex: \"0 2 2em\"\n      };\n      var styleColorInput = {\n        height: \"38\"\n      };\n      var tags = this.props.flight.tags;\n      var unassociatedTags = this.props.getUnassociatedTags(this.props.flight.id);\n      var defName = \"\",\n          defDescript = \"\",\n          defColor = Colors.randomValue(),\n          defAddAction = {},\n          tagStat = \"\";\n\n      if (tags == null || tags.length == 0) {\n        tagStat = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row m-1\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flex-basis m-1 alert alert-secondary\"\n        }, \"There are currently no tags on this flight yet.\"), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"flex-basis m-1 btn btn-outline-secondary\",\n          \"data-toggle\": \"button\",\n          title: \"Add Tag\",\n          onClick: function onClick() {\n            return _this2.addClicked();\n          }\n        }, \"Add a Tag\")));\n      } else {\n        tagStat = /*#__PURE__*/React.createElement(\"div\", {\n          className: cellClasses,\n          style: cellStyle\n        }, tags.map(function (tag, index) {\n          return /*#__PURE__*/React.createElement(\"button\", {\n            id: \"tag_button_\" + index,\n            key: index,\n            className: buttonClasses,\n            \"data-toggle\": \"button\",\n            onClick: function onClick() {\n              return _this2.selectTag(index, tag);\n            }\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            id: \"tag_img_\" + index,\n            className: \"fa fa-tag m-1\",\n            \"data-toggle\": \"tooltip\",\n            \"data-trigger\": \"manual\",\n            \"data-placement\": \"right\",\n            style: {\n              color: tag.color,\n              marginRight: '10px'\n            }\n          }), tag.name);\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          id: \"show-add-form-button\",\n          className: buttonClasses,\n          style: styleButtonSq,\n          \"aria-pressed\": this.state.addActive,\n          title: \"Add a tag to this flight\",\n          onClick: function onClick() {\n            return _this2.addClicked();\n          },\n          \"data-toggle\": \"button\"\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-plus\",\n          \"aria-hidden\": \"true\"\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: buttonClasses,\n          style: styleButtonSq,\n          title: \"Remove the selected tag from this flight\",\n          onClick: function onClick() {\n            return _this2.removeTag();\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-minus\",\n          \"aria-hidden\": \"true\"\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: buttonClasses,\n          style: styleButtonSq,\n          title: \"Permanently delete the selected tag from all flights\",\n          onClick: function onClick() {\n            return _this2.deleteTag();\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          \"aria-hidden\": \"true\"\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: buttonClasses,\n          style: styleButtonSq,\n          title: \"Clear all the tags from this flight\",\n          onClick: function onClick() {\n            return _this2.props.clearTags(_this2.props.flight.id);\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-eraser\",\n          \"aria-hidden\": \"true\"\n        })));\n      }\n\n      var tagInfo = \"\";\n\n      if (this.state.editing) {\n        defName = this.state.editedTag.name;\n        defDescript = this.state.editedTag.description;\n        defColor = this.state.editedTag.color;\n\n        defAddAction = function defAddAction() {\n          return _this2.editTag();\n        };\n      }\n\n      if (this.state.adding) {\n        defName = this.state.editedTag.name;\n        defDescript = this.state.editedTag.description;\n        defColor = this.state.editedTag.color;\n\n        defAddAction = function defAddAction() {\n          return _this2.createTag();\n        };\n      }\n\n      var submitButton = /*#__PURE__*/React.createElement(\"button\", {\n        id: \"submit-tag-button\",\n        className: \"btn btn-outline-secondary\",\n        style: styleButtonSq,\n        onClick: defAddAction,\n        \"data-toggle\": \"tooltip\",\n        \"data-trigger\": \"manual\",\n        \"data-placement\": \"top\",\n        disabled: true\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-check mr-1\",\n        \"aria-hidden\": \"true\"\n      }), \"Submit\");\n\n      if (!this.state.editing || !this.tagEquals(activeTag, editedTag)) {\n        submitButton = /*#__PURE__*/React.createElement(\"button\", {\n          id: \"submit-tag-button\",\n          className: \"btn btn-outline-secondary\",\n          \"data-toggle\": \"tooltip\",\n          \"data-trigger\": \"manual\",\n          \"data-placement\": \"top\",\n          style: styleButtonSq,\n          onClick: defAddAction\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-check mr-1\",\n          \"aria-hidden\": \"true\"\n        }), \"Submit\");\n      }\n\n      if (this.state.addActive) {\n        addDrop = /*#__PURE__*/React.createElement(\"div\", {\n          id: \"dropdown-item-button-add-tag\",\n          className: \"dropdown m-1\"\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn btn-outline-secondary dropdown-toggle\",\n          type: \"button\",\n          id: \"dropdownMenuButton\",\n          \"data-toggle\": \"dropdown\",\n          \"aria-haspopup\": \"true\",\n          \"aria-expanded\": \"false\"\n        }, \"Add a Tag\"), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"dropdown-menu\",\n          style: {\n            maxHeight: \"256px\",\n            overflowY: 'scroll'\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"btn dropdown-item\",\n          onClick: function onClick() {\n            return _this2.createClicked();\n          }\n        }, \"Create New Tag\"), unassociatedTags != null && unassociatedTags.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n          className: \"dropdown-divider\"\n        }), unassociatedTags != null && unassociatedTags.length > 0 && unassociatedTags.map(function (tag, index) {\n          var style = {\n            backgroundColor: tag.color,\n            fontSize: \"110%\"\n          };\n          return /*#__PURE__*/React.createElement(\"button\", {\n            key: index,\n            className: \"btn dropdown-item\",\n            onClick: function onClick() {\n              return _this2.props.associateTag(tag.hashId, _this2.props.flight.id);\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"row\"\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col-xs-1 text-center\"\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"badge badge-pill badge-primary\",\n            style: style\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fa fa-tag\",\n            \"aria-hidden\": \"true\"\n          }))), /*#__PURE__*/React.createElement(\"div\", {\n            className: \"col text-center\"\n          }, tag.name)));\n        })));\n      }\n\n      if (this.state.addFormActive) {\n        addForm = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"d-flex flex-row m-1\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-group\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-group-prepend\"\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn input-group-text\",\n          title: \"Assign a color to this tag\",\n          onClick: function onClick(e) {\n            return $(\"#color-picker-tag\").click();\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-tag\",\n          \"aria-hidden\": \"true\",\n          style: {\n            color: defColor\n          }\n        })), /*#__PURE__*/React.createElement(\"input\", {\n          key: \"cc-0\",\n          className: \"hidden\",\n          style: {\n            display: \"none\"\n          },\n          type: \"color\",\n          name: \"eventColor\",\n          value: defColor,\n          onChange: function onChange(e) {\n            return _this2.handleFormChange(e);\n          },\n          id: \"color-picker-tag\"\n        })), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          id: \"comName\",\n          className: \"form-control\",\n          onChange: this.handleFormChange,\n          value: defName,\n          placeholder: \"Common Name\"\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-group\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-group-prepend\"\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"input-group-text\"\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"fa fa-info\"\n        }))), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          id: \"description\",\n          className: \"form-control\",\n          onChange: this.handleFormChange,\n          value: defDescript,\n          placeholder: \"Description\"\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-sm ml-0\"\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"input-group\"\n        }, submitButton)));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"b\", {\n        className: \"m-1\",\n        style: {\n          styleButton: styleButton\n        }\n      }, \"Flight Tags:\")), tagStat, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex-row m-1 mb-2\"\n      }, addDrop, addForm));\n    }\n  }]);\n\n  return Tags;\n}(React.Component);\n\nexport { Tags };",{"version":3,"names":["React","Component","ReactDOM","Dropdown","DropdownButton","Colors","errorModal","confirmModal","cloneDeep","require","invalidString","str","length","test","Tags","props","state","activeTag","editedTag","infoActive","addActive","adding","addFormActive","parent","handleFormChange","bind","$","removeClass","setToggle","setState","tagA","tagB","name","description","color","index","tag","unToggleAddForm","console","log","hashId","editing","flight","tags","len","i","id","show","removeTag","deleteTag","editTag","attr","tooltip","setTimeout","addTag","val","showAddForm","randomValue","e","target","value","cellClasses","cellStyle","vcellStyle","addForm","addDrop","buttonClasses","styleButton","flex","styleButtonSq","styleColorInput","height","unassociatedTags","getUnassociatedTags","defName","defDescript","defColor","defAddAction","tagStat","addClicked","map","selectTag","marginRight","clearTags","tagInfo","createTag","submitButton","tagEquals","maxHeight","overflowY","createClicked","style","backgroundColor","fontSize","associateTag","click","display"],"sources":["/ngafid/ngafid2.0/src/main/javascript/tags_component.js"],"sourcesContent":["import 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport { Colors } from \"./map.js\";\n\nimport { errorModal } from \"./error_modal.js\";\nimport { confirmModal } from \"./confirm_modal.js\";\n\nconst cloneDeep = require('clone-deep');\n\n//This will be helpful for text inputs\nfunction invalidString(str){\n    return (str == null || str.length < 0 || /^\\s*$/.test(str));\n}\n\n\n\n/**\n * Tags module\n * Houses the state and information for user-defined tags\n * @module flights/Tags\n */\nclass Tags extends React.Component {\n\n    /**\n     * ReactJS Constructor\n     * Intializes the state of this component\n     * @param props the props that are sent from the parent component\n     */\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            activeTag : null,\n            editedTag : null,  //the tag currently being edited\n            infoActive : false,\n            addActive : false,\n            adding : false,\n            addFormActive : false,\n            parent : props.parent\n        };\n\n        this.handleFormChange = this.handleFormChange.bind(this);\n    }\n\n    unToggleAddForm() {\n        $(\"#show-add-form-button\").removeClass('active');\n    }\n\n    /**\n     * called everytime props are updated\n     * @param oldProps the old props before the update\n     */\n    //componentDidUpdate(oldProps) {\n        //console.log(\"props updated\");\n        //const newProps = this.props;\n          //if (oldProps.tags !== newProps.tags) {\n            //this.state.tags = this.props.tags;\n            //this.state.addFormActive = false; //close the add form to indicate the tag has been edited or no longer exists\n            //this.setState(this.state);\n          //}\n    //}\n\n    /**\n     * Handles the event for which the add button is pressed\n     */\n    addClicked() {\n        this.setToggle(-1);\n        this.setState({\n            addActive : !this.state.addActive,\n            infoActive : !this.state.infoActive,\n            addFormActive : (this.state.addFormActive ? false : this.state.addFormActive)\n        });\n    }\n\n    /**\n     * Used to compare two tags for equality\n     * @param tagA the first tag to compare\n     * @param tagB the second tag to compare\n     * @return a boolean representing whether or not the two tags are equal\n     */\n    tagEquals(tagA, tagB) {\n        return (tagA != null && tagB != null) && //they cant be null!\n            tagA.name == tagB.name &&\n            tagA.description == tagB.description &&\n            tagA.color == tagB.color;\n    }\n\n    /**\n     * Prepares to edit or just view a tag by creating a deep copy of the original tag\n     * to be used later on to determine if any changes have been made.\n     * @param tag the tag to edit\n     */\n    selectTag(index, tag) {\n        this.unToggleAddForm();\n\n        tag.index = index;\n        this.setToggle(index);\n\n        console.log(\"Editing tag: \" + tag.hashId);\n        if (this.state.activeTag == null || this.state.activeTag != tag) {\n            this.state.editing = true;\n            this.state.addFormActive = true;\n            this.state.addActive = false;\n        } else {\n            this.state.editing = !this.state.editing;\n            this.state.addFormActive = !this.state.addFormActive;\n            this.state.addActive = !this.state.addActive;\n        }\n        this.state.adding = false;\n\n        this.state.activeTag = tag;\n        this.state.editedTag = cloneDeep(tag);\n\n        this.setState(this.state);\n    }\n\n    setToggle(index) {\n        if (this.props.flight.tags != null && this.props.flight.tags.length > 0) {\n            let len = this.props.flight.tags.length;\n\n            for (var i = 0; i < len; i++) {\n                if (i != index) {\n                    let id = '#tag_button_' + i;\n                    $(id).removeClass('active');\n                }\n            }\n        }\n    }\n\n    /**\n     * shows @module errorModal when a tag has not been edited properly\n     */\n    showNoEditError() {\n        errorModal.show(\"Error editing tag\", \"Please make a change to the tag first before pressing submit!\");\n    }\n\n    removeTag() {\n        this.props.removeTag(this.props.flight.id, this.state.activeTag.hashId, false);\n        this.setToggle(-1);\n        this.setState({\n            editing : false,\n            addFormActive : false\n        });\n    }\n\n    deleteTag() {\n        this.props.deleteTag(this.props.flight.id, this.state.activeTag.hashId);\n        this.setState({\n            editing : false,\n            addFormActive : false\n        });\n    }\n\n    editTag() {\n        this.props.editTag(this.state.editedTag, this.state.activeTag);\n        this.setState({\n            addFormActive: false\n        });\n\n        let id = \"#tag_img_\" + this.state.activeTag.index;\n        $(id).attr('data-title', 'Changes Saved!').tooltip('show');\n        $(\"#tag_button_\" + this.state.activeTag.index).removeClass('active');\n\n        setTimeout(function() {\n            $(id).tooltip('hide');\n         }.bind(this), 5000)\n    }\n\n    createTag() {\n       this.props.addTag(\n            this.props.flight.id,\n            $(\"#comName\").val(), \n            $(\"#description\").val(), \n            $(\"#color-picker-tag\").val() \n        );\n\n        this.setState({\n            addFormActive: false\n        });\n\n        let id = \"#tag_img_\" + this.props.flight.tags.length - 1;\n        console.log(id);\n\n        setTimeout(function() {\n            $(id).tooltip('hide');\n         }.bind(this), 5000)\n    }\n\n    /**\n     * Handles state changes for when the 'Create a new tag' option is selected\n     */\n    createClicked() {\n        this.state = {\n            addActive : true,\n            adding : true,\n            editing : false,\n        };\n        this.showAddForm();\n    }\n\n    /**\n     * Shows the form for adding and/or editing a tag\n     */\n    showAddForm() {\n        this.state.addFormActive = !this.state.addFormActive;\n        this.state.editedTag = {\n            name : \"\",\n            description : \"\",\n            color : Colors.randomValue()\n        };\n        this.setState(this.state);\n    }\n\n    /**\n     * sets the state value editedTag which is used to make sure that the user has made an edit, before\n     * enabling the submit button\n     * @param e the onChange() event\n     */\n    handleFormChange(e) {\n        if (e.target.id == 'comName') {\n            this.state.editedTag.name = e.target.value;\n        }\n        else if (e.target.id == 'description') {\n            this.state.editedTag.description = e.target.value;\n        }\n        else if (e.target.id == 'color-picker-tag') {\n            this.state.editedTag.color = e.target.value;\n        }\n        this.setState(this.state);\n    }\n\n    /**\n     * Renders the Tags component\n     */\n    render() {\n        let cellClasses = \"d-flex flex-row p-1\";\n        let cellStyle = { \"overflowX\" : \"auto\" };\n        let vcellStyle = { \"overflowY\" : \"visible\"};\n        let addForm = \"\";\n        let addDrop = \"\";\n        let activeTag = this.state.activeTag;\n        let editedTag = this.state.editedTag;\n        let buttonClasses = \"m-1 btn btn-outline-secondary\";\n        const styleButton = {\n            flex : \"0 10 10em\",\n        };\n        const styleButtonSq = {\n            flex : \"0 2 2em\",\n        };\n\n        const styleColorInput = {\n            height : \"38\",\n        };\n\n        let tags = this.props.flight.tags;\n        let unassociatedTags = this.props.getUnassociatedTags(this.props.flight.id);\n\n        let defName = \"\", defDescript = \"\", defColor=Colors.randomValue(), defAddAction = {}, tagStat = \"\";\n        if (tags == null || tags.length == 0) {\n            tagStat = (\n                <div>\n                    <div className=\"row m-1\">\n                        <div className=\"flex-basis m-1 alert alert-secondary\">\n                            There are currently no tags on this flight yet.\n                        </div>\n                        <button className=\"flex-basis m-1 btn btn-outline-secondary\" data-toggle=\"button\" title=\"Add Tag\" onClick={() => this.addClicked()}>Add a Tag</button>\n                    </div>\n                </div>\n            );\n        } else {\n           tagStat = ( \n                <div className={cellClasses} style={cellStyle}>\n                    {\n                        tags.map((tag, index) => {\n                            return (\n                                <button id={\"tag_button_\" + index} key={index} className={buttonClasses} data-toggle=\"button\" onClick={() => this.selectTag(index, tag)}>\n                                    <i id={\"tag_img_\" + index} className=\"fa fa-tag m-1\" data-toggle=\"tooltip\" data-trigger='manual' data-placement=\"right\" style={{color : tag.color, marginRight : '10px'}}></i>\n                                    {tag.name}\n                                </button>\n                            );\n                        })\n                    }\n                    <button id=\"show-add-form-button\" className={buttonClasses} style={styleButtonSq} aria-pressed={this.state.addActive} title=\"Add a tag to this flight\" onClick={() => this.addClicked()} data-toggle=\"button\"><i className=\"fa fa-plus\" aria-hidden=\"true\"></i></button>\n                    <button className={buttonClasses} style={styleButtonSq} title=\"Remove the selected tag from this flight\" onClick={() => this.removeTag()}><i className=\"fa fa-minus\" aria-hidden=\"true\"></i></button>\n                    <button className={buttonClasses} style={styleButtonSq} title=\"Permanently delete the selected tag from all flights\" onClick={() => this.deleteTag()}><i className=\"fa fa-trash\" aria-hidden=\"true\"></i></button>\n                    <button className={buttonClasses} style={styleButtonSq} title=\"Clear all the tags from this flight\" onClick={() => this.props.clearTags(this.props.flight.id)}><i className=\"fa fa-eraser\" aria-hidden=\"true\"></i></button>\n                </div> \n            );\n        }\n\n        let tagInfo = \"\";\n        if (this.state.editing) {\n            defName = this.state.editedTag.name;\n            defDescript = this.state.editedTag.description;\n            defColor = this.state.editedTag.color;\n            defAddAction = () => this.editTag();\n        }\n\n        if (this.state.adding) {\n            defName = this.state.editedTag.name;\n            defDescript = this.state.editedTag.description;\n            defColor = this.state.editedTag.color;\n            defAddAction = () => this.createTag();\n        }\n\n        let submitButton = (\n            <button id=\"submit-tag-button\" className=\"btn btn-outline-secondary\" style={styleButtonSq} onClick={defAddAction} data-toggle=\"tooltip\" data-trigger='manual' data-placement=\"top\" disabled>\n                <i className=\"fa fa-check mr-1\" aria-hidden=\"true\"></i>\n                    Submit\n            </button> \n        );\n\n        if (!this.state.editing || !this.tagEquals(activeTag, editedTag)) {\n            submitButton = (\n                <button id=\"submit-tag-button\" className=\"btn btn-outline-secondary\" data-toggle=\"tooltip\" data-trigger='manual' data-placement=\"top\" style={styleButtonSq} onClick={defAddAction} >\n                    <i className=\"fa fa-check mr-1\" aria-hidden=\"true\"></i>\n                        Submit\n                </button> \n            );\n        }\n\n\n        if (this.state.addActive) {\n            addDrop = (\n                <div id=\"dropdown-item-button-add-tag\" className=\"dropdown m-1\">\n                    <button className=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                        Add a Tag\n                    </button>\n\n                    <div className=\"dropdown-menu\" style={{maxHeight: \"256px\", overflowY: 'scroll'}}>\n                    <button className=\"btn dropdown-item\" onClick={() => this.createClicked()}>Create New Tag</button>\n                    {unassociatedTags != null && unassociatedTags.length > 0 &&\n                        <div className=\"dropdown-divider\"/>\n                    }\n                    {unassociatedTags != null && unassociatedTags.length > 0 &&\n                        unassociatedTags.map((tag, index) => {\n                            let style = {\n                                backgroundColor : tag.color,\n                                fontSize : \"110%\"\n                            }\n                            return (\n                                <button key={index} className=\"btn dropdown-item\" onClick={() => this.props.associateTag(tag.hashId, this.props.flight.id)}>\n                                    <div className=\"row\">\n                                        <div className=\"col-xs-1 text-center\">\n                                            <span className=\"badge badge-pill badge-primary\" style={style}>\n                                                <i className=\"fa fa-tag\" aria-hidden=\"true\"></i>\n                                            </span>\n                                        </div>\n                                        <div className=\"col text-center\">\n                                            {tag.name}\n                                        </div>\n                                    </div>\n                                </button>\n                            );\n                        })\n                    }\n                    </div>\n                </div>\n            );\n        }\n        if (this.state.addFormActive) {\n            addForm = (\n                <div className=\"d-flex flex-row m-1\">\n                    <div className=\"col-\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                 <button type=\"button\" className=\"btn input-group-text\" title=\"Assign a color to this tag\" onClick={(e) => $(\"#color-picker-tag\").click()}>\n                                     <i className=\"fa fa-tag\" aria-hidden=\"true\" style={{color: defColor}}></i>\n                                 </button>\n                                 <input key=\"cc-0\" className=\"hidden\" style={{display: \"none\"}} type=\"color\" name=\"eventColor\" value={defColor} onChange={(e) => this.handleFormChange(e)} id=\"color-picker-tag\"/>\n                            </div>\n                            <input type=\"text\" id=\"comName\" className=\"form-control\" onChange={this.handleFormChange} value={defName} placeholder=\"Common Name\"/>\n                        </div>\n                    </div>\n                    <div className=\"col-sm\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">\n                                    <span className=\"fa fa-info\"></span>\n                                </span>\n                            </div>\n                          <input type=\"text\" id=\"description\" className=\"form-control\" onChange={this.handleFormChange} value={defDescript} placeholder=\"Description\"/>\n                        </div>\n                    </div>\n                    <div className=\"col-sm ml-0\">\n                        <div className=\"input-group\">\n                            {submitButton}\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n\n        return (\n            <div>\n                <div>\n                    <b className=\"m-1\" style={{styleButton}}>Flight Tags:</b>\n                </div>\n                {tagStat} \n                <div className=\"flex-row m-1 mb-2\">\n                    {addDrop}{addForm}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport { Tags };\n"],"mappings":"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"}]}