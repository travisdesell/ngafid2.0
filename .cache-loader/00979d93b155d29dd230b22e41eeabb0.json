{"remainingRequest":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/ngafid/ngafid2.0/src/main/javascript/flight_component.js","dependencies":[{"path":"/ngafid/ngafid2.0/src/main/javascript/flight_component.js","mtime":1666016693590},{"path":"/ngafid/ngafid2.0/.babelrc","mtime":1664810261182},{"path":"/ngafid/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":1664910647113},{"path":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":1664910647213}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\nimport { MapPopup } from \"./map_popup.js\";\nimport { map, styles, layers, Colors } from \"./map.js\";\nimport { fromLonLat, toLonLat } from 'ol/proj.js';\nimport Overlay from 'ol/Overlay';\nimport { Vector as VectorSource } from 'ol/source.js';\nimport { Group, Vector as VectorLayer } from 'ol/layer.js';\nimport { Circle, Fill, Icon, Stroke, Style } from 'ol/style.js';\nimport Feature from 'ol/Feature.js';\nimport LineString from 'ol/geom/LineString.js';\nimport Point from 'ol/geom/Point.js';\nimport { Itinerary } from './itinerary_component.js';\nimport { TraceButtons } from './trace_buttons_component.js';\nimport { Tags } from './tags_component.js';\nimport { Events } from './events_component.js';\nimport { selectAircraftModal } from './select_acft_modal.js';\nimport { generateLOCILayer, generateStallLayer } from './map_utils.js';\nimport Plotly from 'plotly.js';\nimport { cesiumFlightsSelected, updateCesiumButtonState } from \"./cesium_buttons\";\n\nvar moment = require('moment');\n\nvar Flight = /*#__PURE__*/function (_React$Component) {\n  _inherits(Flight, _React$Component);\n\n  var _super = _createSuper(Flight);\n\n  function Flight(props) {\n    var _this;\n\n    _classCallCheck(this, Flight);\n\n    _this = _super.call(this, props);\n    var color = Colors.randomValue();\n    console.log(color);\n    _this.state = {\n      pathVisible: false,\n      pageIndex: props.pageIndex,\n      mapLoaded: false,\n      eventsLoaded: false,\n      tagsLoaded: false,\n      commonTraceNames: null,\n      uncommonTraceNames: null,\n      traceIndex: [],\n      traceVisibility: [],\n      traceNamesVisible: false,\n      eventsVisible: false,\n      tagsVisible: false,\n      itineraryVisible: false,\n      points: [],\n      parent: props.parent,\n      selectedPlot: null,\n      color: color,\n      mapPopups: [],\n      seriesData: new Map(),\n      eventsMapped: [],\n      // Bool list to toggle event icons on map flightpath\n      eventPoints: [],\n      // list of event Features\n      eventLayer: null,\n      itineraryLayer: null,\n      eventOutlines: [],\n      eventOutlineLayer: null,\n      replayToggled: cesiumFlightsSelected.includes(_this.props.flightInfo.id)\n    };\n    _this.submitXPlanePath = _this.submitXPlanePath.bind(_assertThisInitialized(_this));\n    _this.displayParameters = _this.displayParameters.bind(_assertThisInitialized(_this));\n    _this.closeParamDisplay = _this.closeParamDisplay.bind(_assertThisInitialized(_this));\n    _this.zoomChanged = _this.zoomChanged.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Flight, [{\n    key: \"fetchEvents\",\n    value: function fetchEvents() {\n      var thisFlight = this;\n      var submissionData = {\n        flightId: this.props.flightInfo.id,\n        eventDefinitionsLoaded: global.eventDefinitionsLoaded\n      };\n      $.ajax({\n        type: 'POST',\n        url: '/protected/events',\n        data: submissionData,\n        dataType: 'json',\n        success: function success(response) {\n          console.log(\"received response: \");\n          console.log(response);\n\n          if (!global.eventDefinitionsLoaded) {\n            global.eventDefinitions = response.definitions;\n            global.eventDefinitionsLoaded = true;\n          }\n\n          var events = response.events;\n\n          for (var i = 0; i < events.length; i++) {\n            for (var j = 0; j < global.eventDefinitions.length; j++) {\n              if (events[i].eventDefinitionId == global.eventDefinitions[j].id) {\n                events[i].eventDefinition = global.eventDefinitions[j];\n                console.log(\"set events[\" + i + \"].eventDefinition to:\");\n                console.log(events[i].eventDefinition);\n              }\n            }\n          }\n\n          thisFlight.state.events = events;\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          thisFlight.state.mapLoaded = false;\n          thisFlight.setState(thisFlight.state);\n          errorModal.show(\"Error Loading Flight Events\", errorThrown);\n        },\n        async: false\n      });\n    }\n  }, {\n    key: \"getActiveLayers\",\n    value: function getActiveLayers() {\n      var activeLayers = [];\n\n      if (this.state.layers != null) {\n        for (var i = 0; i < this.state.layers.length; i++) {\n          var layer = this.state.layers[i];\n\n          if (layer.getVisible()) {\n            activeLayers.push(layer);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      console.log(\"unmounting:\");\n      console.log(this.props.flightInfo);\n      if (this.props.flightInfo.has_coords === \"0\") return;\n      console.log(\"hiding flight path\");\n      this.state.pathVisible = false;\n      this.state.itineraryVisible = false;\n\n      if (this.getActiveLayers()) {\n        for (var layer in this.getActiveLayers()) {\n          layer.setVisible(false);\n        }\n      } // hiding events\n\n\n      if (this.state.eventLayer) {\n        // map\n        this.state.eventLayer.setVisible(false);\n        this.state.eventOutlineLayer.setVisible(false); // plot\n\n        var shapes = global.plotlyLayout.shapes;\n        shapes.length = 0;\n      } // hiding phases\n\n\n      if (this.state.itineraryLayer) {\n        this.state.itineraryLayer.setVisible(false);\n      }\n\n      console.log(\"hiding plots\");\n\n      if (this.state.commonTraceNames) {\n        var visible = false;\n\n        for (var i = 0; i < this.state.commonTraceNames.length; i++) {\n          var seriesName = this.state.commonTraceNames[i];\n\n          if (seriesName in this.state.traceIndex) {\n            //this will make make a trace visible if it was formly set to visible and the plot button this flight is clicked on\n            //otherwise it will hide them\n            Plotly.restyle('plot', {\n              visible: visible && this.state.traceVisibility[seriesName]\n            }, [this.state.traceIndex[seriesName]]);\n          }\n        }\n\n        for (var _i = 0; _i < this.state.uncommonTraceNames.length; _i++) {\n          var _seriesName = this.state.uncommonTraceNames[_i];\n\n          if (_seriesName in this.state.traceIndex) {\n            //this will make make a trace visible if it was formly set to visible and the plot button this flight is clicked on\n            //otherwise it will hide them\n            Plotly.restyle('plot', {\n              visible: visible && this.state.traceVisibility[_seriesName]\n            }, [this.state.traceIndex[_seriesName]]);\n          }\n        }\n      }\n\n      this.state.traceNamesVisible = false;\n    }\n  }, {\n    key: \"plotClicked\",\n    value: function plotClicked() {\n      if (this.state.commonTraceNames == null) {\n        var thisFlight = this;\n        var submissionData = {\n          flightId: this.props.flightInfo.id\n        };\n        $.ajax({\n          type: 'POST',\n          url: '/protected/double_series_names',\n          data: submissionData,\n          dataType: 'json',\n          success: function success(response) {\n            console.log(\"received response: \");\n            console.log(response);\n            var names = response.names;\n            /*\n             * Do these common trace parameters first:\n             * Altitiude AGL\n             * Altitude MSL\n             * E1 MAP\n             * E2 MAP\n             * E1 RPM\n             * E2 RPM\n             * IAS\n             * Normal Acceleration\n             * Pitch\n             * Roll\n             * Vertical Speed\n             * LOC-I Index\n             * Stall Index\n             */\n\n            var preferredNames = [\"AltAGL\", \"AltMSL\", \"E1 MAP\", \"E2 MAP\", \"E1 RPM\", \"E2 RPM\", \"IAS\", \"NormAc\", \"Pitch\", \"Roll\", \"VSpd\", \"LOC-I Index\", \"Stall Index\"];\n            var commonTraceNames = [];\n            var uncommonTraceNames = [];\n\n            for (var i = 0; i < response.names.length; i++) {\n              var name = response.names[i]; //console.log(name);\n\n              if (preferredNames.includes(name)) {\n                commonTraceNames.push(name);\n              } else {\n                uncommonTraceNames.push(name);\n              }\n            } //set the trace number for this series\n\n\n            thisFlight.state.commonTraceNames = commonTraceNames;\n            thisFlight.state.uncommonTraceNames = uncommonTraceNames;\n            thisFlight.state.traceNamesVisible = true;\n            thisFlight.setState(thisFlight.state);\n          },\n          error: function error(jqXHR, textStatus, errorThrown) {\n            this.state.commonTraceNames = null;\n            this.state.uncommonTraceNames = null;\n            errorModal.show(\"Error Getting Potential Plot Parameters\", errorThrown);\n          },\n          async: true\n        });\n      } else {\n        var visible = !this.state.traceNamesVisible;\n\n        for (var i = 0; i < this.state.commonTraceNames.length; i++) {\n          var seriesName = this.state.commonTraceNames[i]; //check and see if this series was loaded in the past\n\n          if (seriesName in this.state.traceIndex) {\n            //this will make make a trace visible if it was formly set to visible and the plot button this flight is clicked on\n            //otherwise it will hide them\n            Plotly.restyle('plot', {\n              visible: visible && this.state.traceVisibility[seriesName]\n            }, [this.state.traceIndex[seriesName]]);\n          }\n        }\n\n        for (var _i2 = 0; _i2 < this.state.uncommonTraceNames.length; _i2++) {\n          var _seriesName2 = this.state.uncommonTraceNames[_i2]; //check and see if this series was loaded in the past\n\n          if (_seriesName2 in this.state.traceIndex) {\n            //this will make make a trace visible if it was formly set to visible and the plot button this flight is clicked on\n            //otherwise it will hide them\n            Plotly.restyle('plot', {\n              visible: visible && this.state.traceVisibility[_seriesName2]\n            }, [this.state.traceIndex[_seriesName2]]);\n          }\n        }\n\n        this.state.traceNamesVisible = !this.state.traceNamesVisible;\n        this.setState(this.state);\n      }\n    }\n  }, {\n    key: \"flightColorChange\",\n    value: function flightColorChange(target, event) {\n      console.log(\"trace color changed!\");\n      console.log(event);\n      console.log(event.target);\n      console.log(event.target.value);\n      target.state.baseLayer.setStyle(new Style({\n        stroke: new Stroke({\n          color: event.target.value,\n          width: 3\n        })\n      }));\n\n      for (var i = 0; i < target.state.layers.length; i++) {\n        var layer = target.state.layers[i];\n\n        if (layer.get('nMap')) {\n          layer.setStyle(new Style({\n            stroke: new Stroke({\n              color: event.target.value,\n              width: 12\n            })\n          }));\n        }\n      }\n\n      target.setState({\n        color: event.target.value\n      });\n    }\n  }, {\n    key: \"downloadClicked\",\n    value:\n    /**\n     * Handles when the download button was clicked\n     * @param type which type of download (xplane, csv etc)\n     */\n    function downloadClicked(type) {\n      if (type === 'KML') {\n        window.open(\"/protected/get_kml?flight_id=\" + this.props.flightInfo.id);\n      } else if (type === 'XPL10') {\n        selectAircraftModal.show('10', this.submitXPlanePath, this.props.flightInfo.id);\n      } else if (type === 'XPL11') {\n        selectAircraftModal.show('11', this.submitXPlanePath, this.props.flightInfo.id);\n      } else if (type === 'CSV-IMP') {\n        window.open(\"/protected/get_csv?flight_id=\" + this.props.flightInfo.id + \"&generated=false\");\n      } else if (type === 'CSV-GEN') {\n        window.open(\"/protected/get_csv?flight_id=\" + this.props.flightInfo.id + \"&generated=true\");\n      }\n    }\n    /**\n     * Gets the aircraft path from the submit aircraft modal\n     * @param type the xplane version\n     * @param path the selected path\n     * @param flightId the flightId\n     **/\n\n  }, {\n    key: \"exclamationClicked\",\n    value: function exclamationClicked() {\n      console.log(\"exclamation clicked!\");\n\n      if (!this.state.eventsLoaded) {\n        console.log(\"loading events!\");\n        this.state.eventsLoaded = true;\n        this.state.eventsVisible = true;\n        this.fetchEvents();\n        console.log(\"got events\");\n        console.log(this.state.events);\n        var events = this.state.events; // create list of event Features to display on map //\n\n        for (var i = 0; i < events.length; i++) {\n          var points;\n          var eventPoint;\n          var eventOutline;\n          var event = events[i]; // Create Feature for event\n\n          if (!this.state.mapLoaded) {\n            // if points (coordinates) have not been fetched\n            // create eventPoint with placeholder coordinates\n            eventPoint = new Feature({\n              geometry: new LineString([0, 0]),\n              name: 'Event'\n            }); // create outlines\n\n            eventOutline = new Feature({\n              geometry: new LineString([0, 0]),\n              name: 'EventOutline'\n            });\n          } else {\n            // create eventPoint with preloaded coordinates\n            points = this.state.points;\n            eventPoint = new Feature({\n              geometry: new LineString(points.slice(event.startLine, event.endLine + 2)),\n              name: 'Event'\n            }); // create outlines\n\n            eventOutline = new Feature({\n              geometry: new LineString(points.slice(event.startLine, event.endLine + 2)),\n              name: 'EventOutline'\n            });\n          } // add eventPoint to flight\n\n\n          this.state.eventsMapped.push(false);\n          this.state.eventPoints.push(eventPoint);\n          this.state.eventOutlines.push(eventOutline);\n        } // create eventLayer & add eventPoints\n\n\n        this.state.eventLayer = new VectorLayer({\n          style: new Style({\n            stroke: new Stroke({\n              color: [0, 0, 0, 0],\n              width: 3\n            })\n          }),\n          source: new VectorSource({\n            features: this.state.eventPoints\n          })\n        }); // create eventLayer & add eventPoints\n\n        this.state.eventOutlineLayer = new VectorLayer({\n          style: new Style({\n            stroke: new Stroke({\n              color: [0, 0, 0, 0],\n              width: 4\n            })\n          }),\n          source: new VectorSource({\n            features: this.state.eventOutlines\n          })\n        }); //this.state.eventLayer.flightState = this;\n\n        this.state.eventOutlineLayer.setVisible(true);\n        this.state.eventLayer.setVisible(true); // add to map only if flightPath loaded\n\n        if (this.state.mapLoaded) {\n          map.addLayer(this.state.eventOutlineLayer);\n          map.addLayer(this.state.eventLayer);\n        }\n\n        this.setState(this.state);\n      } else {\n        console.log(\"events already loaded!\"); //toggle visibility if already loaded\n\n        this.state.eventsVisible = !this.state.eventsVisible;\n        this.state.eventLayer.setVisible(this.state.eventsVisible);\n        this.state.eventOutlineLayer.setVisible(this.state.eventsVisible);\n\n        if (!this.state.eventsVisible) {\n          console.log(\"clearing plotly\");\n          global.plotlyLayout.shapes = [];\n          Plotly.relayout('plot', global.plotlyLayout);\n        }\n\n        console.log(global.plotlyLayout);\n        this.setState(this.state);\n      }\n    }\n  }, {\n    key: \"submitXPlanePath\",\n    value: function submitXPlanePath(type, path, useMSL) {\n      console.log(\"submitting the xplane path to server\" + type + \" \" + path + \" \" + useMSL);\n      console.log(this.props);\n      window.open(\"/protected/get_xplane?flight_id=\" + this.props.flightInfo.id + \"&version=\" + type + \"&acft_path=\" + path + \"&use_msl=\" + useMSL);\n    }\n  }, {\n    key: \"cesiumClicked\",\n    value: function cesiumClicked() {\n      var flightStoreIndex = cesiumFlightsSelected.indexOf(this.props.flightInfo.id);\n\n      if (flightStoreIndex === -1) {\n        cesiumFlightsSelected.push(this.props.flightInfo.id);\n      } else {\n        cesiumFlightsSelected.splice(flightStoreIndex, 1);\n      }\n\n      updateCesiumButtonState();\n      console.log(cesiumFlightsSelected);\n    }\n  }, {\n    key: \"replayClicked\",\n    value: function replayClicked() {\n      var URL = \"/protected/ngafid_cesium?flight_id=\" + this.props.flightInfo.id.toString();\n      window.open(URL);\n    }\n  }, {\n    key: \"closeParamDisplay\",\n    value: function closeParamDisplay() {\n      console.log(\"popup closed!\");\n    }\n  }, {\n    key: \"zoomChanged\",\n    value: function zoomChanged(oldZoom) {\n      var currZoom = map.getView().getZoom();\n      console.log(\"old zoom: \" + oldZoom);\n      console.log(\"current zoom: \" + currZoom);\n\n      for (var i = 0; i < this.state.mapPopups.length; i++) {\n        this.state.mapPopups[i].close();\n      }\n    }\n  }, {\n    key: \"displayParameters\",\n    value: function displayParameters(event) {\n      var pixel = event.pixel;\n      var features = [];\n      map.forEachFeatureAtPixel(pixel, function (feature, layer) {\n        features.push(feature);\n      });\n      var target = features[0];\n      console.log(\"populating new popup for metrics\");\n\n      if (target.get('name') === 'Event' && features[2] != null) {\n        target = features[2];\n      }\n\n      console.log(this.state.events);\n      var lociInfo = new Array(),\n          info = null,\n          precision = 0;\n\n      if (target != null && (target.parent === \"LOC-I Index\" || target.parent === \"Stall Index\")) {\n        var index = target.getId();\n        console.log(\"target info:\");\n        console.log(index);\n        console.log(target);\n        console.log(this.state.flightMetrics);\n        var submissionData = {\n          flight_id: this.props.flightInfo.id,\n          time_index: index\n        };\n        lociInfo.push(index);\n        var spData = this.state.seriesData.get('Stall Index');\n        var lociData = this.state.seriesData.get('LOC-I Index');\n        lociInfo.push(spData[index]); //All flights should have SI data\n\n        if (lociData == null) {\n          lociInfo.push(null);\n        } else {\n          lociInfo.push(lociData[index]);\n        }\n\n        $.ajax({\n          type: 'POST',\n          url: '/protected/loci_metrics',\n          data: submissionData,\n          dataType: 'json',\n          success: function success(response) {\n            console.log(\"got loci_metrics response\");\n            console.log(response);\n            info = response.values;\n            precision = response.precision;\n          },\n          error: function error(jqXHR, textStatus, errorThrown) {\n            console.log(\"Error getting upset data:\");\n            console.log(errorThrown);\n          },\n          async: false\n        });\n        var popupProps = {\n          pixel: pixel,\n          status: '',\n          events: this.state.events,\n          info: info,\n          lociData: lociInfo,\n          placement: pixel,\n          precision: precision,\n          lineSeg: target,\n          closePopup: this.closeParamDisplay(),\n          title: 'title'\n        };\n        var popup = this.renderNewPopup(this.state.mapPopups.length - 1, popupProps);\n        var visibleStyle = new Style({\n          stroke: new Stroke({\n            color: this.state.color,\n            width: 1.5\n          }),\n          image: new Circle({\n            radius: 5,\n            stroke: new Stroke({\n              color: this.state.color,\n              width: 2\n            })\n          })\n        });\n\n        if (target != null) {//console.log(\"need to draw point at: \" + this.state.points[index]);\n          //this.state.trackingPoint.setStyle(visibleStyle);\n          //this.state.trackingPoint.getGeometry().setCoordinates(index);\n        }\n      } else {\n        console.log(\"wont render popup\");\n      }\n    }\n    /**\n     * Recursively find a vacant (unpinned) popup or create a new one\n     */\n\n  }, {\n    key: \"renderNewPopup\",\n    value: function renderNewPopup(index, props) {\n      if (index < 0 || this.state.mapPopups[index] == null) {\n        // if we reach the bottom of the stack, we must allocate memory for a new popup component\n        var outterHTM = document.createElement('div');\n        document.body.appendChild(outterHTM);\n        var popup = ReactDOM.render( /*#__PURE__*/React.createElement(MapPopup, props), outterHTM);\n        outterHTM.setAttribute(\"id\", \"popover\" + this.state.mapPopups.length);\n        this.state.mapPopups.push(popup);\n        return popup;\n      } else if (this.state.mapPopups[index].isPinned()) {\n        // skip reallocating an existing popup if it is pinned\n        return this.renderNewPopup(index - 1, props);\n      } else {\n        console.log(\"using existing popup to render!\");\n        var element = \"popover\" + index;\n        var popup = ReactDOM.render( /*#__PURE__*/React.createElement(MapPopup, props), document.getElementById(element));\n        popup.show(); // we must call show in case the popup was closed before\n\n        return popup;\n      }\n    }\n  }, {\n    key: \"tagClicked\",\n    value: function tagClicked() {\n      this.state.tagsVisible = !this.state.tagsVisible;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"mapClicked\",\n    value: function mapClicked() {\n      var _this2 = this;\n\n      if (this.props.flightInfo.has_coords === \"0\") return;\n\n      if (!this.state.mapLoaded) {\n        this.props.showMap();\n        this.state.mapLoaded = true;\n        var thisFlight = this;\n        this.fetchEvents();\n        console.log(\"events fetched\");\n        console.log(this.state.events);\n        var lociSubmissionData = {\n          seriesName: \"LOC-I Index\",\n          flightId: this.props.flightInfo.id\n        }; //TODO: get upset probability data here\n\n        console.log(\"getting upset probabilities\");\n        var names = [\"Stall Index\", \"LOC-I Index\"];\n\n        var _loop = function _loop(i) {\n          var name = names[i];\n          console.log(name);\n          submissionData = {\n            seriesName: name,\n            flightId: _this2.props.flightInfo.id\n          };\n          $.ajax({\n            type: 'POST',\n            url: '/protected/double_series',\n            data: submissionData,\n            dataType: 'json',\n            success: function success(response) {\n              console.log(\"got double_series response\");\n              console.log(thisFlight.state.seriesData);\n              thisFlight.state.seriesData.set(name, response.y);\n            },\n            error: function error(jqXHR, textStatus, errorThrown) {\n              console.log(\"Error getting upset data:\");\n              console.log(errorThrown);\n            },\n            async: false\n          });\n        };\n\n        for (var i = 0; i < names.length; i++) {\n          var submissionData;\n\n          _loop(i);\n        }\n\n        var submissionData = {\n          request: \"GET_COORDINATES\",\n          id_token: \"TEST_ID_TOKEN\",\n          //id_token : id_token,\n          //user_id : user_id\n          user_id: 1,\n          flightId: this.props.flightInfo.id\n        };\n        $.ajax({\n          type: 'POST',\n          url: '/protected/coordinates',\n          data: submissionData,\n          dataType: 'json',\n          success: function success(response) {\n            //console.log(\"received response: \");\n            //console.log(response);\n            var coordinates = response.coordinates;\n            var points = thisFlight.state.points;\n\n            for (var i = 0; i < coordinates.length; i++) {\n              var point = fromLonLat(coordinates[i]);\n              points.push(point);\n            }\n\n            var color = thisFlight.state.color; //console.log(color);\n\n            thisFlight.state.trackingPoint = new Feature({\n              geometry: new Point(points[0]),\n              name: 'TrackingPoint'\n            });\n            thisFlight.state.trackingPoint.setId(points[0]);\n            thisFlight.state.layers = new Array();\n            var layers = thisFlight.state.layers; // adding itinerary (approaches and takeoffs) to flightpath \n\n            var itinerary = thisFlight.props.flightInfo.itinerary;\n            var flight_phases = []; // Create flight phase styles\n\n            var takeoff_style = new Style({\n              stroke: new Stroke({\n                color: \"#34eb52\",\n                width: 3\n              })\n            });\n            var approach_style = new Style({\n              stroke: new Stroke({\n                color: \"#347deb\",\n                width: 3\n              })\n            }); // create and add Features to flight_phases for each flight phase in itinerary\n\n            for (var _i3 = 0; _i3 < itinerary.length; _i3++) {\n              var stop = itinerary[_i3];\n              var approach = null;\n              var takeoff = null; // creating Linestrings\n\n              if (stop.startOfApproach != -1 && stop.endOfApproach != -1) {\n                approach = new LineString(points.slice(stop.startOfApproach, stop.endOfApproach));\n              }\n\n              if (stop.startOfTakeoff != -1 && stop.endOfTakeoff != -1) {\n                takeoff = new LineString(points.slice(stop.startOfTakeoff, stop.endOfTakeoff));\n              } // set styles and add phases to flight_phases list\n\n\n              if (approach != null) {\n                var phase = new Feature({\n                  geometry: approach,\n                  name: 'Approach'\n                });\n                phase.setStyle(approach_style);\n                flight_phases.push(phase);\n              }\n\n              if (takeoff != null) {\n                var _phase = new Feature({\n                  geometry: takeoff,\n                  name: 'Takeoff'\n                });\n\n                _phase.setStyle(takeoff_style);\n\n                flight_phases.push(_phase);\n              }\n            }\n\n            thisFlight.state.baseLayer = new VectorLayer({\n              name: 'Itinerary',\n              description: 'Itinerary with Phases',\n              nMap: false,\n              style: new Style({\n                stroke: new Stroke({\n                  color: color,\n                  width: 3\n                }),\n                image: new Circle({\n                  radius: 5,\n                  //fill: new Fill({color: [0, 0, 0, 255]}),\n                  stroke: new Stroke({\n                    color: [0, 0, 0, 0],\n                    width: 2\n                  })\n                })\n              }),\n              source: new VectorSource({\n                features: [new Feature({\n                  geometry: new LineString(points),\n                  name: 'Line'\n                }), thisFlight.state.trackingPoint]\n              })\n            });\n            var phaseLayer = new VectorLayer({\n              name: 'Itinerary Phases',\n              nMap: true,\n              style: new Style({\n                stroke: new Stroke({\n                  color: [1, 1, 1, 1],\n                  width: 3\n                })\n              }),\n              source: new VectorSource({\n                features: flight_phases\n              })\n            });\n            var baseLayer = thisFlight.state.baseLayer;\n            baseLayer.flightState = thisFlight;\n            thisFlight.state.pathVisible = true;\n            thisFlight.state.itineraryVisible = true;\n            thisFlight.state.nanOffset = response.nanOffset;\n            thisFlight.state.coordinates = response.coordinates;\n            thisFlight.state.points = points; // toggle visibility of itinerary\n\n            layers.push(baseLayer, phaseLayer);\n            var lociData = thisFlight.state.seriesData.get('LOC-I Index');\n            var spData = thisFlight.state.seriesData.get('Stall Index');\n            generateStallLayer(spData, layers, thisFlight);\n            generateLOCILayer(lociData, layers, thisFlight);\n            console.log(\"adding layers!\");\n\n            for (var _i4 = 0; _i4 < layers.length; _i4++) {\n              var layer = layers[_i4];\n              console.log(layer);\n\n              if (layer.get('name').includes('Itinerary')) {\n                //Itinerary will be the default layer\n                thisFlight.state.selectedPlot = layer.values_.name;\n                layer.setVisible(true);\n              } else {\n                layer.setVisible(false);\n              }\n\n              map.addLayer(layer);\n            }\n\n            console.log(layers);\n            thisFlight.props.setAvailableLayers(layers);\n            console.log(\"added layers\");\n            console.log(map.getLayers());\n            map.on('click', thisFlight.displayParameters);\n            var currZoom = map.getView().getZoom();\n            map.on('moveend', function () {\n              return thisFlight.zoomChanged(currZoom);\n            }); // adding coordinates to events, if needed //\n\n            var events = [];\n            var eventPoints = [];\n            var eventOutlines = [];\n\n            if (thisFlight.state.eventsLoaded) {\n              events = thisFlight.state.events;\n              eventPoints = thisFlight.state.eventPoints;\n              eventOutlines = thisFlight.state.eventOutlines;\n\n              for (var _i5 = 0; _i5 < events.length; _i5++) {\n                var line = new LineString(points.slice(events[_i5].startLine - 1, events[_i5].endLine + 1));\n\n                eventPoints[_i5].setGeometry(line); // set geometry of eventPoint Features\n\n\n                eventOutlines[_i5].setGeometry(line);\n              } // add eventLayer to front of map\n\n\n              var eventLayer = thisFlight.state.eventLayer;\n              var outlineLayer = thisFlight.state.eventOutlineLayer;\n              map.addLayer(outlineLayer);\n              map.addLayer(eventLayer);\n            }\n\n            var extent = baseLayer.getSource().getExtent();\n            console.log(extent);\n            map.getView().fit(extent, map.getSize());\n            thisFlight.setState(thisFlight.state);\n          },\n          error: function error(jqXHR, textStatus, errorThrown) {\n            thisFlight.state.mapLoaded = false;\n            thisFlight.setState(thisFlight.state);\n            errorModal.show(\"Error Loading Flight Coordinates\", errorThrown);\n          },\n          async: true\n        });\n      } else {\n        //toggle visibility if already loaded\n        this.state.pathVisible = !this.state.pathVisible;\n        this.state.itineraryVisible = !this.state.itineraryVisible;\n        console.log(\"already rendered\");\n        console.log(this.state.layers);\n\n        for (var _i6 = 0; _i6 < this.state.layers.length; _i6++) {\n          var layer = this.state.layers[_i6];\n          console.log(layer);\n\n          if (layer.values_.visible && !this.state.pathVisible) {\n            this.state.selectedPlot = layer.values_.name;\n            layer.setVisible(false);\n          } else if (layer.values_.name === this.state.selectedPlot && this.state.pathVisible) {\n            layer.setVisible(true);\n          }\n        } // toggle visibility of events\n\n\n        if (this.state.eventLayer != null) {\n          this.state.eventLayer.setVisible(!this.state.eventLayer.getVisible());\n          this.state.eventOutlineLayer.setVisible(!this.state.eventOutlineLayer.getVisible());\n        }\n\n        if (this.state.pathVisibile) {\n          this.props.showMap();\n        }\n\n        this.setState(this.state);\n\n        if (this.state.pathVisible) {\n          var extent = this.state.baseLayer.getSource().getExtent();\n          console.log(extent);\n          map.getView().fit(extent, map.getSize());\n        }\n      }\n    }\n    /**\n     * Changes all the flights on a given page by calling the parent function\n     */\n\n  }, {\n    key: \"updateFlights\",\n    value: function updateFlights(flights) {\n      this.props.updateParentState(flights);\n    }\n    /**\n     * Changes the tags associated with this flight\n     */\n\n  }, {\n    key: \"invokeUpdate\",\n    value: function invokeUpdate(tags) {\n      this.state.tags = tags;\n      this.setState(this.state);\n    }\n    /**\n     * Called when props are updated\n     * changes state if props have in fact changed\n     * @param oldProps the old props before the update\n     */\n\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(oldProps) {\n      console.log(\"props updated\");\n      var newProps = this.props;\n\n      if (oldProps.tags !== newProps.tags) {\n        this.state.tags = this.props.tags;\n        this.setState(this.state);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var buttonClasses = \"p-1 mr-1 expand-import-button btn btn-outline-secondary\";\n      var lastButtonClasses = \"p-1 expand-import-button btn btn-outline-secondary\";\n      var styleButton = {};\n      var firstCellClasses = \"p-1 card mr-1\";\n      var cellClasses = \"p-1 card mr-1\";\n      var flightInfo = this.props.flightInfo;\n      var startTime = moment(flightInfo.startDateTime);\n      var endTime = moment(flightInfo.endDateTime);\n      var globeClasses = \"\";\n      var traceDisabled = false;\n      var globeTooltip = \"\";\n      var tagTooltip = \"Click to tag a flight for future queries and grouping\"; //console.log(flightInfo);\n\n      if (!flightInfo.hasCoords) {\n        //console.log(\"flight \" + flightInfo.id + \" doesn't have coords!\");\n        globeClasses += \" disabled\";\n        globeTooltip = \"Cannot display flight on the map because the flight data did not have latitude/longitude.\";\n        traceDisabled = true;\n      } else {\n        globeTooltip = \"Click the globe to display the flight on the map.\";\n      }\n\n      var visitedAirports = [];\n\n      for (var i = 0; i < flightInfo.itinerary.length; i++) {\n        if ($.inArray(flightInfo.itinerary[i].airport, visitedAirports) < 0) {\n          visitedAirports.push(flightInfo.itinerary[i].airport);\n        }\n      }\n\n      var itineraryRow = \"\";\n\n      if (this.state.itineraryVisible) {\n        itineraryRow = /*#__PURE__*/React.createElement(Itinerary, {\n          showMap: function showMap() {\n            _this3.props.showMap();\n          },\n          layers: this.state.layers,\n          itinerary: flightInfo.itinerary,\n          color: this.state.color,\n          coordinates: this.state.coordinates,\n          nanOffset: this.state.nanOffset,\n          parent: this,\n          flightColorChange: this.flightColorChange\n        });\n      }\n\n      var eventsRow = \"\";\n\n      if (this.state.eventsVisible) {\n        eventsRow = /*#__PURE__*/React.createElement(Events, {\n          events: this.state.events,\n          parent: this\n        });\n      }\n\n      var tagsRow = \"\";\n\n      if (this.state.tagsVisible) {\n        tagsRow = /*#__PURE__*/React.createElement(Tags, {\n          flight: this.props.flightInfo,\n          flightIndex: this.state.pageIndex,\n          flightId: flightInfo.id,\n          parent: this,\n          addTag: this.props.addTag,\n          removeTag: this.props.removeTag,\n          deleteTag: this.props.deleteTag,\n          getUnassociatedTags: this.props.getUnassociatedTags,\n          associateTag: this.props.associateTag,\n          clearTags: this.props.clearTags,\n          editTag: this.props.editTag\n        });\n      }\n\n      var tracesRow = \"\";\n\n      if (this.state.traceNamesVisible) {\n        tracesRow = /*#__PURE__*/React.createElement(TraceButtons, {\n          showPlot: function showPlot() {\n            _this3.props.showPlot();\n          },\n          parentFlight: this,\n          flightId: flightInfo.id\n        });\n      }\n\n      var tagPills = \"\";\n\n      if (this.props.flightInfo.tags != null && this.props.flightInfo.tags.length > 0) {\n        tagPills = this.props.flightInfo.tags.map(function (tag, index) {\n          var style = {\n            backgroundColor: tag.color,\n            marginRight: '4px',\n            lineHeight: '2',\n            opacity: '75%'\n          };\n          return /*#__PURE__*/React.createElement(\"span\", {\n            key: index,\n            className: \"badge badge-primary\",\n            style: {\n              lineHeight: '1.5',\n              marginRight: '4px',\n              backgroundColor: '#e3e3e3',\n              color: '#000000'\n            },\n            title: tag.description\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"badge badge-pill badge-primary\",\n            style: style,\n            page: _this3.state.page\n          }, /*#__PURE__*/React.createElement(\"i\", {\n            className: \"fa fa-tag\",\n            \"aria-hidden\": \"true\"\n          })), \"   \", tag.name);\n        });\n      }\n\n      $(function () {\n        $('[data-toggle=\"tooltip\"]').tooltip();\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mb-1\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body m-0 p-0\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-row p-1\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: firstCellClasses,\n        style: {\n          flexBasis: \"100px\",\n          flexShrink: 0,\n          flexGrow: 0\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-plane p-1\"\n      }, \" \", /*#__PURE__*/React.createElement(\"a\", {\n        href: '/protected/flight?flight_id=' + flightInfo.id\n      }, flightInfo.id))), /*#__PURE__*/React.createElement(\"div\", {\n        className: cellClasses,\n        style: {\n          flexBasis: \"100px\",\n          flexShrink: 0,\n          flexGrow: 0\n        }\n      }, flightInfo.tailNumber), /*#__PURE__*/React.createElement(\"div\", {\n        className: cellClasses,\n        style: {\n          flexBasis: \"100px\",\n          flexShrink: 0,\n          flexGrow: 0\n        }\n      }, flightInfo.systemId), /*#__PURE__*/React.createElement(\"div\", {\n        className: cellClasses,\n        style: {\n          flexBasis: \"120px\",\n          flexShrink: 0,\n          flexGrow: 0\n        }\n      }, flightInfo.airframeName), /*#__PURE__*/React.createElement(\"div\", {\n        className: cellClasses,\n        style: {\n          flexBasis: \"200px\",\n          flexShrink: 0,\n          flexGrow: 0\n        }\n      }, flightInfo.startDateTime), /*#__PURE__*/React.createElement(\"div\", {\n        className: cellClasses,\n        style: {\n          flexBasis: \"200px\",\n          flexShrink: 0,\n          flexGrow: 0\n        }\n      }, flightInfo.endDateTime), /*#__PURE__*/React.createElement(\"div\", {\n        className: cellClasses,\n        style: {\n          flexBasis: \"80px\",\n          flexShrink: 0,\n          flexGrow: 0\n        }\n      }, moment.utc(endTime.diff(startTime)).format(\"HH:mm:ss\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: cellClasses,\n        style: {\n          flexBasis: \"200px\",\n          flexShrink: 0,\n          flexGrow: 0\n        }\n      }, visitedAirports.join(\", \")), /*#__PURE__*/React.createElement(\"div\", {\n        className: cellClasses,\n        style: {\n          flexGrow: 1 //textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000'\n\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", null, tagPills)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-0\"\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: buttonClasses,\n        \"data-toggle\": \"button\",\n        \"aria-pressed\": \"false\",\n        style: styleButton,\n        onClick: function onClick() {\n          return _this3.exclamationClicked();\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-exclamation p-1\"\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: buttonClasses,\n        \"data-toggle\": \"button\",\n        title: tagTooltip,\n        \"aria-pressed\": \"false\",\n        style: styleButton,\n        onClick: function onClick() {\n          return _this3.tagClicked();\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-tag p-1\"\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: buttonClasses + globeClasses,\n        \"data-toggle\": \"button\",\n        title: globeTooltip,\n        \"aria-pressed\": \"false\",\n        style: styleButton,\n        onClick: function onClick() {\n          return _this3.mapClicked();\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-map-o p-1\"\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: buttonClasses,\n        style: styleButton,\n        \"data-toggle\": \"button\",\n        \"aria-pressed\": \"false\",\n        onClick: function onClick() {\n          return _this3.plotClicked();\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-area-chart p-1\"\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: buttonClasses + globeClasses,\n        id: \"cesiumToggled\" + this.props.flightInfo.id,\n        \"data-toggle\": \"button\",\n        \"aria-pressed\": this.state.replayToggled,\n        style: styleButton,\n        onClick: function onClick() {\n          return _this3.cesiumClicked();\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-globe p-1\"\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: buttonClasses,\n        style: styleButton,\n        onClick: function onClick() {\n          return _this3.replayClicked();\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-video-camera p-1\"\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: buttonClasses,\n        type: \"button\",\n        id: \"dropdownMenu2\",\n        \"data-toggle\": \"dropdown\",\n        \"aria-haspopup\": \"true\",\n        \"aria-expanded\": \"false\"\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-download p-1\"\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropdown-menu\",\n        \"aria-labelledby\": \"dropdownMenu2\"\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"dropdown-item\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this3.downloadClicked('CSV-IMP');\n        }\n      }, \"Export to CSV (Original)\", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ml-1 fa fa-question-circle\",\n        \"data-toggle\": \"tooltip\",\n        \"data-placement\": \"top\",\n        title: \"The NGAFID stores original CSV files from the aircraft's flight data recorder. Select this option if you wish to view this flight's original CSV file.\"\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"dropdown-item\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this3.downloadClicked('CSV-GEN');\n        }\n      }, \"Export to CSV (Generated)\", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"ml-1 fa fa-question-circle\",\n        \"data-toggle\": \"tooltip\",\n        \"data-placement\": \"top\",\n        title: \"The NGAFID adds additional calculated parameters for further flight analysis, such as angle of attack. Select this option if you wish for the CSV file to contain such parameters.\"\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"dropdown-item\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this3.downloadClicked('KML');\n        }\n      }, \"Export to KML\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"dropdown-item\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this3.downloadClicked('XPL10');\n        }\n      }, \"Export to X-Plane 10\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"dropdown-item\",\n        type: \"button\",\n        onClick: function onClick() {\n          return _this3.downloadClicked('XPL11');\n        }\n      }, \"Export to X-Plane 11\")))), itineraryRow, tagsRow, eventsRow, tracesRow));\n    }\n  }]);\n\n  return Flight;\n}(React.Component);\n\nexport { Flight };",{"version":3,"names":["React","Component","ReactDOM","errorModal","MapPopup","map","styles","layers","Colors","fromLonLat","toLonLat","Overlay","Vector","VectorSource","Group","VectorLayer","Circle","Fill","Icon","Stroke","Style","Feature","LineString","Point","Itinerary","TraceButtons","Tags","Events","selectAircraftModal","generateLOCILayer","generateStallLayer","Plotly","cesiumFlightsSelected","updateCesiumButtonState","moment","require","Flight","props","color","randomValue","console","log","state","pathVisible","pageIndex","mapLoaded","eventsLoaded","tagsLoaded","commonTraceNames","uncommonTraceNames","traceIndex","traceVisibility","traceNamesVisible","eventsVisible","tagsVisible","itineraryVisible","points","parent","selectedPlot","mapPopups","seriesData","Map","eventsMapped","eventPoints","eventLayer","itineraryLayer","eventOutlines","eventOutlineLayer","replayToggled","includes","flightInfo","id","submitXPlanePath","bind","displayParameters","closeParamDisplay","zoomChanged","thisFlight","submissionData","flightId","eventDefinitionsLoaded","global","$","ajax","type","url","data","dataType","success","response","eventDefinitions","definitions","events","i","length","j","eventDefinitionId","eventDefinition","error","jqXHR","textStatus","errorThrown","setState","show","async","activeLayers","layer","getVisible","push","has_coords","getActiveLayers","setVisible","shapes","plotlyLayout","visible","seriesName","restyle","names","preferredNames","name","target","event","value","baseLayer","setStyle","stroke","width","get","window","open","fetchEvents","eventPoint","eventOutline","geometry","slice","startLine","endLine","style","source","features","addLayer","relayout","path","useMSL","flightStoreIndex","indexOf","splice","URL","toString","oldZoom","currZoom","getView","getZoom","close","pixel","forEachFeatureAtPixel","feature","lociInfo","Array","info","precision","index","getId","flightMetrics","flight_id","time_index","spData","lociData","values","popupProps","status","placement","lineSeg","closePopup","title","popup","renderNewPopup","visibleStyle","image","radius","outterHTM","document","createElement","body","appendChild","render","setAttribute","isPinned","element","getElementById","showMap","lociSubmissionData","set","y","request","id_token","user_id","coordinates","point","trackingPoint","setId","itinerary","flight_phases","takeoff_style","approach_style","stop","approach","takeoff","startOfApproach","endOfApproach","startOfTakeoff","endOfTakeoff","phase","description","nMap","phaseLayer","flightState","nanOffset","values_","setAvailableLayers","getLayers","on","line","setGeometry","outlineLayer","extent","getSource","getExtent","fit","getSize","pathVisibile","flights","updateParentState","tags","oldProps","newProps","buttonClasses","lastButtonClasses","styleButton","firstCellClasses","cellClasses","startTime","startDateTime","endTime","endDateTime","globeClasses","traceDisabled","globeTooltip","tagTooltip","hasCoords","visitedAirports","inArray","airport","itineraryRow","flightColorChange","eventsRow","tagsRow","addTag","removeTag","deleteTag","getUnassociatedTags","associateTag","clearTags","editTag","tracesRow","showPlot","tagPills","tag","backgroundColor","marginRight","lineHeight","opacity","page","tooltip","flexBasis","flexShrink","flexGrow","tailNumber","systemId","airframeName","utc","diff","format","join","exclamationClicked","tagClicked","mapClicked","plotClicked","cesiumClicked","replayClicked","downloadClicked"],"sources":["/ngafid/ngafid2.0/src/main/javascript/flight_component.js"],"sourcesContent":["import 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\nimport { MapPopup } from \"./map_popup.js\";\n\nimport { map, styles, layers, Colors } from \"./map.js\";\n\nimport {fromLonLat, toLonLat} from 'ol/proj.js';\nimport Overlay from 'ol/Overlay';\nimport {Vector as VectorSource} from 'ol/source.js';\nimport {Group, Vector as VectorLayer} from 'ol/layer.js';\nimport {Circle, Fill, Icon, Stroke, Style} from 'ol/style.js';\nimport Feature from 'ol/Feature.js';\nimport LineString from 'ol/geom/LineString.js';\nimport Point from 'ol/geom/Point.js';\n\nimport { Itinerary } from './itinerary_component.js';\nimport { TraceButtons } from './trace_buttons_component.js';\nimport { Tags } from './tags_component.js';\nimport { Events } from './events_component.js';\nimport { selectAircraftModal } from './select_acft_modal.js';\nimport {generateLOCILayer, generateStallLayer} from './map_utils.js';\n\nimport Plotly from 'plotly.js';\nimport {cesiumFlightsSelected, updateCesiumButtonState} from \"./cesium_buttons\";\n\nvar moment = require('moment');\n\n\nclass Flight extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let color = Colors.randomValue();\n        console.log(color);\n\n        this.state = {\n            pathVisible : false,\n            pageIndex : props.pageIndex,\n            mapLoaded : false,\n            eventsLoaded : false,\n            tagsLoaded : false,\n            commonTraceNames : null,\n            uncommonTraceNames : null,\n            traceIndex : [],\n            traceVisibility : [],\n            traceNamesVisible : false,\n            eventsVisible : false,\n            tagsVisible : false,\n            itineraryVisible : false,\n            points : [],\n            parent : props.parent,\n            selectedPlot : null,\n            color : color,\n            mapPopups : [],\n            seriesData : new Map(),\n\n            eventsMapped : [],                              // Bool list to toggle event icons on map flightpath\n            eventPoints : [],                               // list of event Features\n            eventLayer : null,\n            itineraryLayer : null,\n            eventOutlines : [],\n            eventOutlineLayer : null,\n            replayToggled: cesiumFlightsSelected.includes(this.props.flightInfo.id),\n        }\n\n        this.submitXPlanePath = this.submitXPlanePath.bind(this);\n        this.displayParameters = this.displayParameters.bind(this);\n        this.closeParamDisplay = this.closeParamDisplay.bind(this);\n        this.zoomChanged = this.zoomChanged.bind(this);\n    }\n\n    fetchEvents() {\n        var thisFlight = this;\n\n        var submissionData = {\n            flightId : this.props.flightInfo.id,\n            eventDefinitionsLoaded : global.eventDefinitionsLoaded\n        };\n\n        $.ajax({\n            type: 'POST',\n            url: '/protected/events',\n            data : submissionData,\n            dataType : 'json',\n            success : function(response) {\n                console.log(\"received response: \");\n                console.log(response);\n\n                if (!global.eventDefinitionsLoaded) {\n                    global.eventDefinitions = response.definitions;\n                    global.eventDefinitionsLoaded = true;\n                }\n\n                var events = response.events;\n                for (let i = 0; i < events.length; i++) {\n                    for (let j = 0; j < global.eventDefinitions.length; j++) {\n\n                        if (events[i].eventDefinitionId == global.eventDefinitions[j].id) {\n                            events[i].eventDefinition = global.eventDefinitions[j];\n                            console.log(\"set events[\" + i + \"].eventDefinition to:\");\n                            console.log(events[i].eventDefinition);\n                        }\n                    }\n                }\n\n                thisFlight.state.events = events;\n            },\n            error : function(jqXHR, textStatus, errorThrown) {\n                thisFlight.state.mapLoaded = false;\n                thisFlight.setState(thisFlight.state);\n\n                errorModal.show(\"Error Loading Flight Events\", errorThrown);\n            },\n            async: false\n        });\n    }\n\n    getActiveLayers() {\n        let activeLayers = [];\n        if (this.state.layers != null) {\n            for (var i = 0; i < this.state.layers.length; i++) {\n                let layer = this.state.layers[i];\n                if (layer.getVisible()) {\n                    activeLayers.push(layer);\n                }\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        console.log(\"unmounting:\");\n        console.log(this.props.flightInfo);\n\n        if (this.props.flightInfo.has_coords === \"0\") return;\n\n        console.log(\"hiding flight path\");\n        this.state.pathVisible = false;\n        this.state.itineraryVisible = false;\n        if (this.getActiveLayers()) {\n            for (var layer in this.getActiveLayers()) {\n                layer.setVisible(false);\n            }\n        }\n\n        // hiding events\n        if (this.state.eventLayer) {\n            // map\n            this.state.eventLayer.setVisible(false);\n            this.state.eventOutlineLayer.setVisible(false);\n\n            // plot\n            let shapes = global.plotlyLayout.shapes;\n            shapes.length = 0;\n        }\n        \n        // hiding phases\n        if (this.state.itineraryLayer) {\n            this.state.itineraryLayer.setVisible(false);\n        }\n\n\n        console.log(\"hiding plots\");\n        if (this.state.commonTraceNames) {\n            let visible = false;\n\n            for (let i = 0; i < this.state.commonTraceNames.length; i++) {\n                let seriesName = this.state.commonTraceNames[i];\n\n                if (seriesName in this.state.traceIndex) {\n\n                    //this will make make a trace visible if it was formly set to visible and the plot button this flight is clicked on\n                    //otherwise it will hide them\n                    Plotly.restyle('plot', { visible: (visible && this.state.traceVisibility[seriesName]) }, [ this.state.traceIndex[seriesName] ])\n                }\n            }\n\n            for (let i = 0; i < this.state.uncommonTraceNames.length; i++) {\n                let seriesName = this.state.uncommonTraceNames[i];\n\n                if (seriesName in this.state.traceIndex) {\n\n                    //this will make make a trace visible if it was formly set to visible and the plot button this flight is clicked on\n                    //otherwise it will hide them\n                    Plotly.restyle('plot', { visible: (visible && this.state.traceVisibility[seriesName]) }, [ this.state.traceIndex[seriesName] ])\n                }\n            }\n        }\n        this.state.traceNamesVisible = false;\n    }\n\n    plotClicked() {\n        if (this.state.commonTraceNames == null) {\n            var thisFlight = this;\n\n            var submissionData = {\n                flightId : this.props.flightInfo.id\n            };\n\n            $.ajax({\n                type: 'POST',\n                url: '/protected/double_series_names',\n                data : submissionData,\n                dataType : 'json',\n                success : function(response) {\n                    console.log(\"received response: \");\n                    console.log(response);\n\n                    var names = response.names;\n\n                    /*\n                     * Do these common trace parameters first:\n                     * Altitiude AGL\n                     * Altitude MSL\n                     * E1 MAP\n                     * E2 MAP\n                     * E1 RPM\n                     * E2 RPM\n                     * IAS\n                     * Normal Acceleration\n                     * Pitch\n                     * Roll\n                     * Vertical Speed\n                     * LOC-I Index\n                     * Stall Index\n                     */\n                    var preferredNames = [\"AltAGL\", \"AltMSL\", \"E1 MAP\", \"E2 MAP\", \"E1 RPM\", \"E2 RPM\", \"IAS\", \"NormAc\", \"Pitch\", \"Roll\", \"VSpd\", \"LOC-I Index\", \"Stall Index\"];\n                    var commonTraceNames = [];\n                    var uncommonTraceNames = [];\n\n                    for (let i = 0; i < response.names.length; i++) {\n                        let name = response.names[i];\n\n                        //console.log(name);\n                        if (preferredNames.includes(name)) {\n                            commonTraceNames.push(name);\n                        } else {\n                            uncommonTraceNames.push(name);\n                        }\n                    }\n\n                    //set the trace number for this series\n                    thisFlight.state.commonTraceNames = commonTraceNames;\n                    thisFlight.state.uncommonTraceNames = uncommonTraceNames;\n                    thisFlight.state.traceNamesVisible = true;\n                    thisFlight.setState(thisFlight.state);\n                },\n                error : function(jqXHR, textStatus, errorThrown) {\n                    this.state.commonTraceNames = null;\n                    this.state.uncommonTraceNames = null;\n                    errorModal.show(\"Error Getting Potential Plot Parameters\", errorThrown);\n                },\n                async: true\n            });\n        } else {\n            let visible = !this.state.traceNamesVisible;\n\n            for (let i = 0; i < this.state.commonTraceNames.length; i++) {\n                let seriesName = this.state.commonTraceNames[i];\n\n                //check and see if this series was loaded in the past\n                if (seriesName in this.state.traceIndex) {\n\n                    //this will make make a trace visible if it was formly set to visible and the plot button this flight is clicked on\n                    //otherwise it will hide them\n                    Plotly.restyle('plot', { visible: (visible && this.state.traceVisibility[seriesName]) }, [ this.state.traceIndex[seriesName] ])\n                }\n            }\n\n            for (let i = 0; i < this.state.uncommonTraceNames.length; i++) {\n                let seriesName = this.state.uncommonTraceNames[i];\n\n                //check and see if this series was loaded in the past\n                if (seriesName in this.state.traceIndex) {\n\n                    //this will make make a trace visible if it was formly set to visible and the plot button this flight is clicked on\n                    //otherwise it will hide them\n                    Plotly.restyle('plot', { visible: (visible && this.state.traceVisibility[seriesName]) }, [ this.state.traceIndex[seriesName] ])\n                }\n            }\n\n\n            this.state.traceNamesVisible = !this.state.traceNamesVisible;\n            this.setState(this.state);\n        }\n    }\n\n    flightColorChange(target, event) {\n        console.log(\"trace color changed!\");\n        console.log(event);\n        console.log(event.target);\n        console.log(event.target.value);\n\n        target.state.baseLayer.setStyle(new Style({\n            stroke: new Stroke({\n                color: event.target.value,\n                width: 3\n            })\n        }));\n\n        for (let i = 0; i < target.state.layers.length; i++) {\n            let layer = target.state.layers[i];\n            if (layer.get('nMap')) {\n                layer.setStyle(new Style({\n                        stroke: new Stroke({\n                            color: event.target.value,\n                            width: 12,\n                        })\n                    })\n                );\n            }\n        }\n\n\n        target.setState({color : event.target.value}); \n    }\n\n    downloadClicked() {\n        window.open(\"/protected/get_kml?flight_id=\" + this.props.flightInfo.id);\n    }\n\n    exclamationClicked() {\n        console.log (\"exclamation clicked!\");\n\n        if (!this.state.eventsLoaded) {\n            console.log(\"loading events!\");\n\n            this.state.eventsLoaded = true;\n            this.state.eventsVisible = true;\n\n            this.fetchEvents();\n\n\n            console.log(\"got events\");\n            console.log(this.state.events);\n\n            let events = this.state.events;\n\n            // create list of event Features to display on map //\n            for (let i = 0; i < events.length; i++) {\n                var points;\n                var eventPoint;\n                var eventOutline;\n                let event = events[i];\n\n                // Create Feature for event\n                if (!this.state.mapLoaded){              // if points (coordinates) have not been fetched\n                    // create eventPoint with placeholder coordinates\n                    eventPoint = new Feature({\n                        geometry : new LineString( [0,0] ),\n                        name: 'Event'\n                    });\n\n                    // create outlines\n                    eventOutline = new Feature({\n                        geometry : new LineString( [0,0] ),\n                        name: 'EventOutline'\n                    });\n\n                } else {\n                    // create eventPoint with preloaded coordinates\n                    points = this.state.points;\n                    eventPoint = new Feature({\n                         geometry: new LineString(points.slice(event.startLine, event.endLine + 2)),\n                         name: 'Event'\n                    });\n\n                    // create outlines\n                    eventOutline = new Feature({\n                         geometry: new LineString(points.slice(event.startLine, event.endLine + 2)),\n                         name: 'EventOutline'\n                    });\n                }\n\n                // add eventPoint to flight\n                this.state.eventsMapped.push(false);\n                this.state.eventPoints.push(eventPoint);\n                this.state.eventOutlines.push(eventOutline);\n            }\n\n            // create eventLayer & add eventPoints\n            this.state.eventLayer = new VectorLayer({\n                style: new Style({\n                    stroke: new Stroke({\n                        color: [0,0,0,0],\n                        width: 3\n                    })\n                }),\n\n                source : new VectorSource({\n                    features: this.state.eventPoints\n                })\n            });\n\n            // create eventLayer & add eventPoints\n            this.state.eventOutlineLayer = new VectorLayer({\n                style: new Style({\n                    stroke: new Stroke({\n                        color: [0,0,0,0],\n                        width: 4\n                    })\n                }),\n\n                source : new VectorSource({\n                    features: this.state.eventOutlines\n                })\n            });\n\n            //this.state.eventLayer.flightState = this;\n            this.state.eventOutlineLayer.setVisible(true);\n            this.state.eventLayer.setVisible(true);\n\n            // add to map only if flightPath loaded\n            if (this.state.mapLoaded){\n                map.addLayer(this.state.eventOutlineLayer);\n                map.addLayer(this.state.eventLayer);\n            }\n\n            this.setState(this.state);\n\n        } else {\n            console.log(\"events already loaded!\");\n\n            //toggle visibility if already loaded\n            this.state.eventsVisible = !this.state.eventsVisible;\n            this.state.eventLayer.setVisible(this.state.eventsVisible);\n            this.state.eventOutlineLayer.setVisible(this.state.eventsVisible);\n\n            if(!this.state.eventsVisible) {\n                console.log(\"clearing plotly\");\n                global.plotlyLayout.shapes = [];\n                Plotly.relayout('plot', global.plotlyLayout);\n            }\n\n            console.log(global.plotlyLayout);\n            this.setState(this.state);\n        }\n    }\n\n    /**\n     * Handles when the download button was clicked\n     * @param type which type of download (xplane, csv etc)\n     */\n    downloadClicked(type) {\n        if (type === 'KML') {\n            window.open(\"/protected/get_kml?flight_id=\" + this.props.flightInfo.id);\n        } else if (type === 'XPL10') {\n            selectAircraftModal.show('10', this.submitXPlanePath, this.props.flightInfo.id);    \n        } else if (type === 'XPL11') {\n            selectAircraftModal.show('11', this.submitXPlanePath, this.props.flightInfo.id);    \n        } else if(type === 'CSV-IMP') {\n            window.open(\"/protected/get_csv?flight_id=\" + this.props.flightInfo.id + \"&generated=false\");\n        } else if(type === 'CSV-GEN') {\n            window.open(\"/protected/get_csv?flight_id=\" + this.props.flightInfo.id + \"&generated=true\");\n        }\n\n    }\n\n    /**\n     * Gets the aircraft path from the submit aircraft modal\n     * @param type the xplane version\n     * @param path the selected path\n     * @param flightId the flightId\n     **/\n    submitXPlanePath(type, path, useMSL){\n        console.log(\"submitting the xplane path to server\"+type+\" \"+path+\" \"+useMSL);\n        console.log(this.props);\n        window.open(\"/protected/get_xplane?flight_id=\" + this.props.flightInfo.id + \"&version=\" + type + \"&acft_path=\" + path + \"&use_msl=\" + useMSL);\n    }\n\n    cesiumClicked() {\n        let flightStoreIndex = cesiumFlightsSelected.indexOf(this.props.flightInfo.id);\n\n        if (flightStoreIndex === -1) {\n            cesiumFlightsSelected.push(this.props.flightInfo.id)\n        } else {\n            cesiumFlightsSelected.splice(flightStoreIndex, 1);\n        }\n\n        updateCesiumButtonState();\n\n        console.log(cesiumFlightsSelected);\n    }\n\n    replayClicked() {\n        let URL = \"/protected/ngafid_cesium?flight_id=\" + (this.props.flightInfo.id).toString();\n\n        window.open(URL);\n    }\n\n    closeParamDisplay() {\n        console.log(\"popup closed!\");\n    }\n\n    zoomChanged(oldZoom) {\n        let currZoom = map.getView().getZoom();\n        console.log(\"old zoom: \" + oldZoom);\n        console.log(\"current zoom: \" + currZoom);\n\n        for(let i = 0; i < this.state.mapPopups.length; i++) {\n            this.state.mapPopups[i].close();\n        }\n    }\n\n    displayParameters(event){\n        var pixel = event.pixel;\n        var features = [];\n\n        map.forEachFeatureAtPixel(pixel, function(feature, layer) {\n            features.push(feature)\n        });\n\n        let target = features[0];\n        console.log(\"populating new popup for metrics\");\n\n        if (target.get('name') === 'Event' && features[2] != null) {\n            target = features[2];\n        }\n\n        console.log(this.state.events);\n            \n\n        var lociInfo = new Array(), info = null, precision = 0;\n\n        if (target != null && (target.parent === \"LOC-I Index\" || target.parent === \"Stall Index\")) {\n            let index = target.getId();\n            console.log(\"target info:\");\n            console.log(index);\n            console.log(target);    \n\n            console.log(this.state.flightMetrics);\n            let submissionData = {\n                flight_id : this.props.flightInfo.id,\n                time_index : index\n            }\n\n            lociInfo.push(index);\n\n            let spData = this.state.seriesData.get('Stall Index');\n            let lociData = this.state.seriesData.get('LOC-I Index');\n\n            lociInfo.push(spData[index]); //All flights should have SI data\n            if (lociData == null) {\n                lociInfo.push(null);\n            } else {\n                lociInfo.push(lociData[index]);\n            }\n\n            $.ajax({\n                type: 'POST',\n                url: '/protected/loci_metrics',\n                data : submissionData,\n                dataType : 'json',\n                success : function(response) {\n                    console.log(\"got loci_metrics response\");\n                    console.log(response);\n                    info = response.values;\n                    precision = response.precision;\n                },\n                error : function(jqXHR, textStatus, errorThrown) {\n                    console.log(\"Error getting upset data:\");\n                    console.log(errorThrown);\n                },   \n                async: false \n            });  \n\n            var popupProps = {\n                pixel : pixel,\n                status : '',\n                events : this.state.events,\n                info : info,\n                lociData : lociInfo,\n                placement : pixel,\n                precision : precision,\n                lineSeg : target,\n                closePopup : this.closeParamDisplay(),\n                title : 'title'\n            };\n\n            var popup = this.renderNewPopup(this.state.mapPopups.length - 1, popupProps);\n            var visibleStyle = new Style({\n                stroke: new Stroke({\n                        color: this.state.color,\n                        width: 1.5\n                    }),\n                    image: new Circle({\n                        radius: 5,\n                        stroke: new Stroke({\n                            color: this.state.color,\n                            width: 2\n                        })\n                    })\n                });\n\n            if (target != null) {\n                //console.log(\"need to draw point at: \" + this.state.points[index]);\n                //this.state.trackingPoint.setStyle(visibleStyle);\n                //this.state.trackingPoint.getGeometry().setCoordinates(index);\n            }\n\n        } else {\n            console.log(\"wont render popup\");\n        }\n    }\n\n    /**\n     * Recursively find a vacant (unpinned) popup or create a new one\n     */\n    renderNewPopup(index, props) {\n        if (index < 0 || this.state.mapPopups[index] == null) {\n            // if we reach the bottom of the stack, we must allocate memory for a new popup component\n            var outterHTM = document.createElement('div');\n            document.body.appendChild(outterHTM);\n            var popup = ReactDOM.render(React.createElement(MapPopup, props), outterHTM);\n            outterHTM.setAttribute(\"id\", \"popover\" + this.state.mapPopups.length);\n            this.state.mapPopups.push(popup);\n            return popup;\n        } else if (this.state.mapPopups[index].isPinned()) {\n            // skip reallocating an existing popup if it is pinned\n            return this.renderNewPopup(index - 1, props);\n        } else {\n            console.log(\"using existing popup to render!\");\n            let element = \"popover\" + index;\n            var popup = ReactDOM.render(React.createElement(MapPopup, props), document.getElementById(element));\n            popup.show(); // we must call show in case the popup was closed before\n            return popup;\n        }\n\n    }\n\n    tagClicked() {\n        this.state.tagsVisible = !this.state.tagsVisible;\n        this.setState(this.state);\n    }\n\n    mapClicked() {\n        if (this.props.flightInfo.has_coords === \"0\") return;\n\n        if (!this.state.mapLoaded) {\n            this.props.showMap();\n            this.state.mapLoaded = true;\n\n            var thisFlight = this;\n            \n            this.fetchEvents();\n            console.log(\"events fetched\");\n            console.log(this.state.events);\n\n            var lociSubmissionData = {\n                seriesName : \"LOC-I Index\",\n                flightId : this.props.flightInfo.id\n            };\n\n            //TODO: get upset probability data here\n\n            console.log(\"getting upset probabilities\");\n\n            var names = [\n                \"Stall Index\",\n                \"LOC-I Index\",\n            ];\n\n            for (let i = 0; i < names.length; i++) {\n                const name = names[i];\n                console.log(name);\n\n                var submissionData = {\n                    seriesName : name,\n                    flightId : this.props.flightInfo.id\n                };\n\n                $.ajax({\n                    type: 'POST',\n                    url: '/protected/double_series',\n                    data : submissionData,\n                    dataType : 'json',\n                    success : function(response) {\n                        console.log(\"got double_series response\");\n                        console.log(thisFlight.state.seriesData);\n                        thisFlight.state.seriesData.set(name, response.y);\n                    },\n                    error : function(jqXHR, textStatus, errorThrown) {\n                        console.log(\"Error getting upset data:\");\n                        console.log(errorThrown);\n                    },   \n                    async: false \n                });  \n            }\n\n            var submissionData = {\n                request : \"GET_COORDINATES\",\n                id_token : \"TEST_ID_TOKEN\",\n                //id_token : id_token,\n                //user_id : user_id\n                user_id : 1,\n                flightId : this.props.flightInfo.id,\n            };\n\n            $.ajax({\n                type: 'POST',\n                url: '/protected/coordinates',\n                data : submissionData,\n                dataType : 'json',\n                success : function(response) {\n                    //console.log(\"received response: \");\n                    //console.log(response);\n\n                    var coordinates = response.coordinates;\n\n                    let points = thisFlight.state.points;\n                    for (var i = 0; i < coordinates.length; i++) {\n                        var point = fromLonLat(coordinates[i]);\n                        points.push(point);\n                    }\n\n                    var color = thisFlight.state.color;\n                    //console.log(color);\n\n                    thisFlight.state.trackingPoint = new Feature({\n                                    geometry : new Point(points[0]),\n                                    name: 'TrackingPoint'\n                                });\n\n                    thisFlight.state.trackingPoint.setId(points[0]);\n\n                    thisFlight.state.layers = new Array();\n                    let layers = thisFlight.state.layers;\n\n\n                    // adding itinerary (approaches and takeoffs) to flightpath \n                    var itinerary = thisFlight.props.flightInfo.itinerary;\n                    var flight_phases = [];\n\n                    // Create flight phase styles\n                    var takeoff_style = new Style({\n                                stroke: new Stroke({\n                                    color: \"#34eb52\",\n                                    width: 3\n                                })\n                            });\n\n                    var approach_style = new Style({\n                                stroke: new Stroke({\n                                    color: \"#347deb\",\n                                    width: 3\n                                })\n                            });\n\n                    // create and add Features to flight_phases for each flight phase in itinerary\n                    for (let i = 0; i < itinerary.length; i++) {\n                        var stop = itinerary[i];\n                        var approach = null;\n                        var takeoff = null;\n\n                        // creating Linestrings\n                        if (stop.startOfApproach != -1 && stop.endOfApproach != -1) {\n                            approach = new LineString( points.slice( stop.startOfApproach, stop.endOfApproach ) );\n                        }\n                        if (stop.startOfTakeoff != -1 && stop.endOfTakeoff != -1) {\n                            takeoff = new LineString( points.slice( stop.startOfTakeoff, stop.endOfTakeoff ) );\n                        }\n\n                        // set styles and add phases to flight_phases list\n                        if (approach != null) {\n                            let phase = new Feature({\n                                             geometry: approach,\n                                             name: 'Approach'\n                                         });\n                            phase.setStyle(approach_style);\n                            flight_phases.push( phase );\n                        }\n                        if (takeoff != null) {\n                            let phase = new Feature({\n                                             geometry: takeoff,\n                                             name: 'Takeoff'\n                                         });\n                            phase.setStyle(takeoff_style);\n                            flight_phases.push( phase );\n                        }\n                    }\n\n                    thisFlight.state.baseLayer = new VectorLayer({\n                        name : 'Itinerary' ,\n                        description : 'Itinerary with Phases',\n                        nMap : false,\n                        style: new Style({\n                            stroke: new Stroke({\n                                color: color,\n                                width: 3\n                            }),\n                            image: new Circle({\n                                radius: 5,\n                                //fill: new Fill({color: [0, 0, 0, 255]}),\n                                stroke: new Stroke({\n                                    color: [0, 0, 0, 0],\n                                    width: 2\n                                })\n                            })\n                        }),\n\n                        source : new VectorSource({\n                            features: [\n                                new Feature({\n                                    geometry: new LineString(points),\n                                    name: 'Line'\n                                }),\n                                thisFlight.state.trackingPoint,\n                            ]\n                        })\n                    });\n\n                    let phaseLayer = new VectorLayer({\n                        name : 'Itinerary Phases',\n                        nMap : true,\n                        style: new Style({\n                            stroke: new Stroke({\n                                color: [1,1,1,1],\n                                width: 3\n                            })\n                        }),\n\n                        source : new VectorSource({\n                            features: flight_phases\n                        })\n                    }); \n\n                    let baseLayer = thisFlight.state.baseLayer;\n\n                    baseLayer.flightState = thisFlight;\n\n                    thisFlight.state.pathVisible = true;\n                    thisFlight.state.itineraryVisible = true;\n                    thisFlight.state.nanOffset = response.nanOffset;\n                    thisFlight.state.coordinates = response.coordinates;\n                    thisFlight.state.points = points;\n\n                    // toggle visibility of itinerary\n                    layers.push(baseLayer, phaseLayer);\n                    \n                    const lociData = thisFlight.state.seriesData.get('LOC-I Index');\n                    const spData = thisFlight.state.seriesData.get('Stall Index');\n\n                    generateStallLayer(spData, layers, thisFlight);\n                    generateLOCILayer(lociData, layers, thisFlight);\n                    \n                    console.log(\"adding layers!\");\n                    for(let i = 0; i < layers.length; i++){\n                        let layer = layers[i];\n                        console.log(layer);\n                        if(layer.get('name').includes('Itinerary')) {\n                            //Itinerary will be the default layer\n                            thisFlight.state.selectedPlot = layer.values_.name;\n                            layer.setVisible(true);\n                        } else {\n                            layer.setVisible(false);\n                        }\n                        map.addLayer(layer);\n                    }\n\n                    console.log(layers);\n                    thisFlight.props.setAvailableLayers(layers);\n\n                    console.log(\"added layers\");\n                    console.log(map.getLayers());\n                    map.on('click', thisFlight.displayParameters); \n\n                    var currZoom = map.getView().getZoom();\n                    map.on('moveend', () => thisFlight.zoomChanged(currZoom));\n                    // adding coordinates to events, if needed //\n                    var events = [];\n                    var eventPoints = [];\n                    var eventOutlines = [];\n                    if (thisFlight.state.eventsLoaded) {\n                        events = thisFlight.state.events;\n                        eventPoints = thisFlight.state.eventPoints;\n                        eventOutlines = thisFlight.state.eventOutlines;\n                        for (let i = 0; i < events.length; i++){\n                            let line = new LineString(points.slice(events[i].startLine -1, events[i].endLine + 1));\n                            eventPoints[i].setGeometry(line);                   // set geometry of eventPoint Features\n                            eventOutlines[i].setGeometry(line);\n                        }\n\n                        // add eventLayer to front of map\n                        let eventLayer = thisFlight.state.eventLayer;\n                        let outlineLayer = thisFlight.state.eventOutlineLayer;\n                        map.addLayer(outlineLayer);\n                        map.addLayer(eventLayer);\n                    }\n\n                    let extent = baseLayer.getSource().getExtent();\n                    console.log(extent);\n                    map.getView().fit(extent, map.getSize());\n\n                    thisFlight.setState(thisFlight.state);\n                },   \n                error : function(jqXHR, textStatus, errorThrown) {\n                    thisFlight.state.mapLoaded = false;\n                    thisFlight.setState(thisFlight.state);\n\n                    errorModal.show(\"Error Loading Flight Coordinates\", errorThrown);\n                },   \n                async: true \n            });  \n        } else {\n            //toggle visibility if already loaded\n            this.state.pathVisible = !this.state.pathVisible;\n            this.state.itineraryVisible = !this.state.itineraryVisible;\n\n            console.log(\"already rendered\");\n            console.log(this.state.layers);\n\n            for (let i = 0; i < this.state.layers.length; i++) {\n                let layer = this.state.layers[i];\n                console.log(layer);\n                if (layer.values_.visible && !this.state.pathVisible) {\n                    this.state.selectedPlot = layer.values_.name;\n                    layer.setVisible(false);\n                } else if (layer.values_.name === this.state.selectedPlot && this.state.pathVisible) {\n                    layer.setVisible(true);\n                }\n            }\n\n            // toggle visibility of events\n            if (this.state.eventLayer != null) {\n                this.state.eventLayer.setVisible(!this.state.eventLayer.getVisible());\n                this.state.eventOutlineLayer.setVisible(!this.state.eventOutlineLayer.getVisible());\n            }\n\n            if (this.state.pathVisibile) {\n                this.props.showMap();\n            }\n\n            this.setState(this.state);\n\n            if (this.state.pathVisible) {\n                let extent = this.state.baseLayer.getSource().getExtent();\n                console.log(extent);\n                map.getView().fit(extent, map.getSize());\n            }\n        }\n    }\n\n    /**\n     * Changes all the flights on a given page by calling the parent function\n     */\n    updateFlights(flights){\n        this.props.updateParentState(flights);\n    }\n\n    /**\n     * Changes the tags associated with this flight\n     */\n    invokeUpdate(tags){\n        this.state.tags = tags;\n        this.setState(this.state);\n    }\n\n    /**\n     * Called when props are updated\n     * changes state if props have in fact changed\n     * @param oldProps the old props before the update\n     */\n    componentDidUpdate(oldProps) {\n        console.log(\"props updated\");\n        const newProps = this.props;\n          if(oldProps.tags !== newProps.tags) {\n            this.state.tags = this.props.tags;\n            this.setState(this.state);\n          }\n    }\n\n    render() {\n        let buttonClasses = \"p-1 mr-1 expand-import-button btn btn-outline-secondary\";\n        let lastButtonClasses = \"p-1 expand-import-button btn btn-outline-secondary\";\n        const styleButton = { };\n\n        let firstCellClasses = \"p-1 card mr-1\"\n        let cellClasses = \"p-1 card mr-1\"\n\n        let flightInfo = this.props.flightInfo;\n\n        let startTime = moment(flightInfo.startDateTime);\n        let endTime = moment(flightInfo.endDateTime);\n\n        let globeClasses = \"\";\n        let traceDisabled = false;\n        let globeTooltip = \"\";\n\n        let tagTooltip = \"Click to tag a flight for future queries and grouping\";\n\n        //console.log(flightInfo);\n        if (!flightInfo.hasCoords) {\n            //console.log(\"flight \" + flightInfo.id + \" doesn't have coords!\");\n            globeClasses += \" disabled\";\n            globeTooltip = \"Cannot display flight on the map because the flight data did not have latitude/longitude.\";\n            traceDisabled = true;\n        } else {\n            globeTooltip = \"Click the globe to display the flight on the map.\";\n        }\n\n        let visitedAirports = [];\n        for (let i = 0; i < flightInfo.itinerary.length; i++) {\n            if ($.inArray(flightInfo.itinerary[i].airport, visitedAirports) < 0) {\n                visitedAirports.push(flightInfo.itinerary[i].airport);\n            }\n        }\n\n        let itineraryRow = \"\";\n        if (this.state.itineraryVisible) {\n            itineraryRow = (\n                <Itinerary showMap={() => {this.props.showMap();}} layers={this.state.layers} itinerary={flightInfo.itinerary} color={this.state.color} coordinates={this.state.coordinates} nanOffset={this.state.nanOffset} parent={this} flightColorChange={this.flightColorChange}/>\n            );\n        }\n\n        let eventsRow = \"\";\n        if (this.state.eventsVisible) {\n            eventsRow = (\n                <Events events={this.state.events} parent={this} />\n            );\n        }\n\n        let tagsRow = \"\";\n        if (this.state.tagsVisible) {\n            tagsRow = (\n                    <Tags flight={this.props.flightInfo} flightIndex={this.state.pageIndex} flightId={flightInfo.id} parent={this} addTag={this.props.addTag} removeTag={this.props.removeTag} \n                        deleteTag={this.props.deleteTag} getUnassociatedTags={this.props.getUnassociatedTags} associateTag={this.props.associateTag} clearTags={this.props.clearTags} editTag={this.props.editTag}/>\n            );\n        }\n\n        let tracesRow = \"\";\n        if (this.state.traceNamesVisible) {\n            tracesRow = \n                (\n                    <TraceButtons showPlot={() => {this.props.showPlot();}} parentFlight={this} flightId={flightInfo.id}/>\n                );\n        }\n\n        let tagPills = \"\";\n        if (this.props.flightInfo.tags != null && this.props.flightInfo.tags.length > 0) {\n            tagPills = \n            this.props.flightInfo.tags.map((tag, index) => {\n                let style = {\n                    backgroundColor : tag.color,\n                    marginRight : '4px',\n                    lineHeight : '2',\n                    opacity : '75%'\n                }\n                return(\n                    <span key={index} className=\"badge badge-primary\" style={{lineHeight : '1.5', marginRight : '4px', backgroundColor : '#e3e3e3', color : '#000000'}} title={tag.description}>\n                        <span className=\"badge badge-pill badge-primary\" style={style} page={this.state.page}>\n                            <i className=\"fa fa-tag\" aria-hidden=\"true\"></i>\n                        </span>   {tag.name}\n                    </span>\n                );\n            });\n        }\n\n        $(function () {\n            $('[data-toggle=\"tooltip\"]').tooltip()\n        })\n\n        return (\n            <div className=\"card mb-1\">\n                <div className=\"card-body m-0 p-0\">\n                    <div className=\"d-flex flex-row p-1\">\n                        <div className={firstCellClasses} style={{flexBasis:\"100px\", flexShrink:0, flexGrow:0}}>\n                            <i className=\"fa fa-plane p-1\"> <a href={'/protected/flight?flight_id=' + flightInfo.id}>{flightInfo.id}</a></i>\n                        </div>\n\n                        <div className={cellClasses} style={{flexBasis:\"100px\", flexShrink:0, flexGrow:0}}>\n                            {flightInfo.tailNumber}\n                        </div>\n\n                        <div className={cellClasses} style={{flexBasis:\"100px\", flexShrink:0, flexGrow:0}}>\n                            {flightInfo.systemId}\n                        </div>\n\n\n                        <div className={cellClasses} style={{flexBasis:\"120px\", flexShrink:0, flexGrow:0}}>\n\n                            {flightInfo.airframeName}\n                        </div>\n\n                        <div className={cellClasses} style={{flexBasis:\"200px\", flexShrink:0, flexGrow:0}}>\n\n                            {flightInfo.startDateTime}\n                        </div>\n\n                        <div className={cellClasses} style={{flexBasis:\"200px\", flexShrink:0, flexGrow:0}}>\n\n                            {flightInfo.endDateTime}\n                        </div>\n\n                        <div className={cellClasses} style={{flexBasis:\"80px\", flexShrink:0, flexGrow:0}}>\n\n                            {moment.utc(endTime.diff(startTime)).format(\"HH:mm:ss\")}\n                        </div>\n\n                        <div className={cellClasses} style={{flexBasis:\"200px\", flexShrink:0, flexGrow:0}}>\n                            {visitedAirports.join(\", \")}\n                        </div>\n\n                        <div className={cellClasses} style={{\n                            flexGrow:1,\n                            //textShadow: '-1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000'\n                        }}>\n\n                            <div>\n                                {tagPills}\n                            </div>\n                        </div>\n\n                        <div className=\"p-0\">\n                            <button className={buttonClasses} data-toggle=\"button\" aria-pressed=\"false\" style={styleButton} onClick={() => this.exclamationClicked()}>\n                                <i className=\"fa fa-exclamation p-1\"></i>\n                            </button>\n\n                            <button className={buttonClasses} data-toggle=\"button\" title={tagTooltip} aria-pressed=\"false\" style={styleButton} onClick={() => this.tagClicked()}>\n                                <i className=\"fa fa-tag p-1\"></i>\n                            </button>\n\n                            <button className={buttonClasses + globeClasses} data-toggle=\"button\" title={globeTooltip} aria-pressed=\"false\" style={styleButton} onClick={() => this.mapClicked()}>\n                                <i className=\"fa fa-map-o p-1\"></i>\n                            </button>\n\n                            <button className={buttonClasses} style={styleButton} data-toggle=\"button\" aria-pressed=\"false\" onClick={() => this.plotClicked()}>\n                                <i className=\"fa fa-area-chart p-1\"></i>\n                            </button>\n\n                            <button className={buttonClasses + globeClasses} id={\"cesiumToggled\" + this.props.flightInfo.id} data-toggle=\"button\" aria-pressed={this.state.replayToggled} style={styleButton} onClick={() => this.cesiumClicked()}>\n                                <i className=\"fa fa-globe p-1\"></i>\n                            </button>\n\n                            <button className={buttonClasses} style={styleButton} onClick={() => this.replayClicked()}>\n                                <i className=\"fa fa-video-camera p-1\"></i>\n                            </button>\n\n                            <button className={buttonClasses} type=\"button\" id=\"dropdownMenu2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                                <i className=\"fa fa-download p-1\"></i>\n                            </button>\n\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu2\">\n                                <button className=\"dropdown-item\" type=\"button\" onClick={() => this.downloadClicked('CSV-IMP')}>\n                                    Export to CSV (Original)\n                                    <i className=\"ml-1 fa fa-question-circle\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"The NGAFID stores original CSV files from the aircraft's flight data recorder. Select this option if you wish to view this flight's original CSV file.\"></i>\n                                </button>\n                                <button className=\"dropdown-item\" type=\"button\" onClick={() => this.downloadClicked('CSV-GEN')}>\n                                    Export to CSV (Generated)\n                                    <i className=\"ml-1 fa fa-question-circle\" data-toggle=\"tooltip\" data-placement=\"top\" title=\"The NGAFID adds additional calculated parameters for further flight analysis, such as angle of attack. Select this option if you wish for the CSV file to contain such parameters.\"></i>\n                                </button>\n                                <button className=\"dropdown-item\" type=\"button\" onClick={() => this.downloadClicked('KML')}>Export to KML</button>\n                                <button className=\"dropdown-item\" type=\"button\" onClick={() => this.downloadClicked('XPL10')}>Export to X-Plane 10</button>\n                                <button className=\"dropdown-item\" type=\"button\" onClick={() => this.downloadClicked('XPL11')}>Export to X-Plane 11</button>\n                           </div>\n\n                        </div>\n                    </div>\n\n                    {itineraryRow}\n\n                    {tagsRow}\n\n                    {eventsRow}\n\n                    {tracesRow}\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport { Flight };\n"],"mappings":"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"}]}