{"remainingRequest":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/ngafid/ngafid2.0/src/main/javascript/select_acft_modal.js","dependencies":[{"path":"/ngafid/ngafid2.0/src/main/javascript/select_acft_modal.js","mtime":1664810261290},{"path":"/ngafid/ngafid2.0/.babelrc","mtime":1664810261182},{"path":"/ngafid/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":1664910647113},{"path":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":1664910647213}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { helpModal } from './help_modal.js';\nimport $ from 'jquery';\nwindow.jQuery = $;\nwindow.$ = $;\n\nvar SelectAircraftModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(SelectAircraftModal, _React$Component);\n\n  var _super = _createSuper(SelectAircraftModal);\n\n  function SelectAircraftModal(props) {\n    var _this;\n\n    _classCallCheck(this, SelectAircraftModal);\n\n    _this = _super.call(this);\n    _this.state = {\n      paths: [],\n      activeId: 0\n    };\n\n    _this.getSimAircraft();\n\n    _this.reOpen = _this.reOpen.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(SelectAircraftModal, [{\n    key: \"show\",\n    value: function show(type, submitMethod) {\n      //this.state.submitMethod = submitMethod;\n      this.setState({\n        version: type,\n        submitMethod: submitMethod\n      });\n      $(\"#select_aircraft-modal\").modal('show');\n    }\n  }, {\n    key: \"reOpen\",\n    value: function reOpen() {\n      this.show(this.state.version, this.state.submitMethod, this.state.flightId);\n    }\n  }, {\n    key: \"modalClicked\",\n    value: function modalClicked() {\n      var selectedPath = this.state.paths[this.state.activeId - 1];\n      var useMSL = $('#altCheck').is(':checked');\n      console.log(\"will use msl: \" + useMSL);\n\n      if (this.state.activeId == 0) {\n        selectedPath = $('#cust_path').val();\n\n        if (selectedPath == null || selectedPath.match(/^ *$/) !== null) {\n          console.log(\"selected path is not formatted correctly!\");\n          var title = \"Format Error\";\n          var message = \"Please make sure there is a path selected or there is a correctly formatted path in the custom path box. Press help for more information\";\n          helpModal.show(title, message, this.reOpen);\n          return;\n        }\n\n        this.addFile(selectedPath); //cache the filepath in the server\n      }\n\n      console.log(\"modal submit clicked!\");\n      this.state.submitMethod(this.state.version, selectedPath, useMSL);\n    }\n  }, {\n    key: \"selectPathId\",\n    value: function selectPathId(pathId) {\n      this.state.activeId = pathId;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"helpClicked\",\n    value: function helpClicked() {\n      var title = \"X-Plane Aircraft Selector Help\";\n      var message = \"The paths in the list are filepaths to aircraft from previous exports. To add a new aircraft, use the text \" + \"field at the top of the list. The path should follow the format (no quotes): \\\"Aircraft/Laminar Research/Cessna 172SP/Cessna172SP.acf\\\".\" + \" It is very important to exclude the leading '/' from the filepath right before the 'Aircraft' directory.\";\n      helpModal.show(title, message, this.reOpen);\n    }\n  }, {\n    key: \"getSimAircraft\",\n    value: function getSimAircraft() {\n      var thisModal = this;\n      $.ajax({\n        type: 'GET',\n        url: '/protected/sim_acft',\n        dataType: 'json',\n        success: function success(response) {\n          console.log(\"received response: \");\n          console.log(response);\n          thisModal.state.paths = response;\n\n          if (thisModal.state.paths != null & thisModal.state.paths.length > 0) {\n            thisModal.state.selectedPath = thisModal.state.paths[0];\n          }\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {},\n        async: true\n      });\n    }\n  }, {\n    key: \"addFile\",\n    value: function addFile(filepath) {\n      var thisModal = this;\n      var submissionData = {\n        \"type\": \"cache\",\n        \"path\": filepath\n      };\n      $.ajax({\n        type: 'POST',\n        url: '/protected/sim_acft',\n        data: submissionData,\n        dataType: 'json',\n        success: function success(response) {\n          console.log(\"received response: \");\n          console.log(response);\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {},\n        async: true\n      });\n    }\n  }, {\n    key: \"removeFile\",\n    value: function removeFile(index) {\n      var thisModal = this;\n      var submissionData = {\n        \"type\": \"rmcache\",\n        \"path\": this.state.paths[index]\n      };\n      $.ajax({\n        type: 'POST',\n        url: '/protected/sim_acft',\n        data: submissionData,\n        dataType: 'json',\n        success: function success(response) {\n          console.log(\"received response: \");\n          console.log(response);\n          thisModal.state.paths = response;\n          thisModal.setState(thisModal.state);\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {},\n        async: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var styleButtonSq = {\n        flex: \"right\",\n        \"float\": \"auto\"\n      };\n      var listStyle = {\n        maxHeight: \"400px\",\n        overflowY: \"scroll\"\n      };\n      console.log(\"rendering select aircraft (xplane) modal\");\n      console.log(this.state.paths);\n      var paths = this.state.paths;\n      var selectRow = /*#__PURE__*/React.createElement(ListGroup, {\n        id: \"listgrp\",\n        defaultActiveKey: \"#custom\",\n        style: listStyle\n      }, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        active: this.state.activeId == 0,\n        onClick: function onClick() {\n          return _this2.selectPathId(0);\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"cust_path\",\n        className: \"form-control\",\n        placeholder: \"Enter a new or custom path to a *.acf file\"\n      })), paths != null && paths.length > 0 && paths.map(function (path, index) {\n        var relIndex = index + 1;\n        var isActive = _this2.state.activeId - 1 == index;\n        return /*#__PURE__*/React.createElement(ListGroup.Item, {\n          active: isActive,\n          key: index,\n          onClick: function onClick() {\n            return _this2.selectPathId(relIndex);\n          }\n        }, /*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Row, {\n          className: \"justify-content-md-center\"\n        }, /*#__PURE__*/React.createElement(Col, {\n          xs: true,\n          lg: \"11\"\n        }, path), /*#__PURE__*/React.createElement(Col, {\n          xs: true,\n          lg: \"1\"\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"m-1 btn btn-outline-secondary align-right\",\n          style: styleButtonSq,\n          onClick: function onClick() {\n            return _this2.removeFile(index);\n          },\n          title: \"Permanently delete this cached aircraft\"\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fa fa-trash\",\n          \"aria-hidden\": \"true\"\n        }))))));\n      })); //have to use a plaintext form for the filepath here\n      // see https://stackoverflow.com/questions/3489133/full-path-from-file-input-using-jquery\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-content\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-header\"\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        id: \"confirm-modal-title\",\n        className: \"modal-title\"\n      }, \"Select Aircraft Filepath for X-Plane\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\"\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, \"\\xD7\"))), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"confirm-modal-body\",\n        className: \"modal-body\"\n      }, /*#__PURE__*/React.createElement(\"h4\", null, \"Select *.acf filepath for X-Plane\"), \"Please select (or add) a filepath for the *.acf file that matches the aircraft in your X-Plane library that you would like simulated.\", /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row p-2\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\"\n      }, selectRow))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row p-3\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-check\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-check-input\",\n        type: \"checkbox\",\n        id: \"altCheck\"\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        className: \"form-check-label\",\n        htmlFor: \"defaultCheck1\"\n      }, \"Use altMSL instead of altAGL\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"modal-footer\"\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        \"data-dismiss\": \"modal\",\n        onClick: function onClick() {\n          return _this2.modalClicked();\n        }\n      }, \"Submit\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success\",\n        \"data-dismiss\": \"modal\",\n        onClick: function onClick() {\n          return _this2.helpClicked();\n        }\n      }, \"Help\"), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        \"data-dismiss\": \"modal\"\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return SelectAircraftModal;\n}(React.Component);\n\nvar selectAircraftModal = ReactDOM.render( /*#__PURE__*/React.createElement(SelectAircraftModal, {\n  backdrop: \"static\"\n}), document.querySelector(\"#select_aircraft-modal-content\"));\nexport { selectAircraftModal };",{"version":3,"names":["React","Component","ReactDOM","errorModal","ListGroup","Container","Col","Row","helpModal","$","window","jQuery","SelectAircraftModal","props","state","paths","activeId","getSimAircraft","reOpen","bind","type","submitMethod","setState","version","modal","show","flightId","selectedPath","useMSL","is","console","log","val","match","title","message","addFile","pathId","thisModal","ajax","url","dataType","success","response","length","error","jqXHR","textStatus","errorThrown","async","filepath","submissionData","data","index","styleButtonSq","flex","listStyle","maxHeight","overflowY","selectRow","selectPathId","map","path","relIndex","isActive","removeFile","modalClicked","helpClicked","selectAircraftModal","render","document","querySelector"],"sources":["/ngafid/ngafid2.0/src/main/javascript/select_acft_modal.js"],"sourcesContent":["import 'bootstrap';\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\n\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nimport { helpModal } from './help_modal.js';\n\nimport $ from 'jquery';\nwindow.jQuery = $;\nwindow.$ = $;\n\n\nclass SelectAircraftModal extends React.Component {\n    constructor(props) {\n        super();\n        this.state = {\n            paths : [],\n            activeId : 0\n        }\n        this.getSimAircraft();\n        this.reOpen = this.reOpen.bind(this);\n    }\n\n    show(type, submitMethod) {\n        //this.state.submitMethod = submitMethod;\n        this.setState({\n            version : type,\n            submitMethod : submitMethod\n        });\n\n        $(\"#select_aircraft-modal\").modal('show');\n    }\n\n    reOpen(){\n        this.show(this.state.version, this.state.submitMethod, this.state.flightId);\n    }\n\n    modalClicked() {\n        var selectedPath = this.state.paths[this.state.activeId - 1];\n        var useMSL = $('#altCheck').is(':checked');\n        console.log(\"will use msl: \"+useMSL);\n\n        if(this.state.activeId == 0){\n            selectedPath = $('#cust_path').val();\n            if(selectedPath == null || selectedPath.match(/^ *$/) !== null){\n                console.log(\"selected path is not formatted correctly!\");\n                let title = \"Format Error\";\n                let message = \"Please make sure there is a path selected or there is a correctly formatted path in the custom path box. Press help for more information\";\n                helpModal.show(title, message, this.reOpen);\n                return;\n            }\n            this.addFile(selectedPath); //cache the filepath in the server\n        }\n            \n        console.log(\"modal submit clicked!\");\n        this.state.submitMethod(this.state.version, selectedPath, useMSL);\n    }\n\n    selectPathId(pathId){\n        this.state.activeId = pathId;\n        this.setState(this.state);\n    }\n\n    helpClicked(){\n        let title = \"X-Plane Aircraft Selector Help\";\n        let message = \"The paths in the list are filepaths to aircraft from previous exports. To add a new aircraft, use the text \"+\n                      \"field at the top of the list. The path should follow the format (no quotes): \\\"Aircraft/Laminar Research/Cessna 172SP/Cessna172SP.acf\\\".\"+\n                      \" It is very important to exclude the leading '/' from the filepath right before the 'Aircraft' directory.\";\n        helpModal.show(title, message, this.reOpen);\n    }\n\n    getSimAircraft(){\n        let thisModal = this;\n\n        $.ajax({\n            type: 'GET',\n            url: '/protected/sim_acft',\n            dataType : 'json',\n            success : function(response) {\n                console.log(\"received response: \");\n                console.log(response);\n                \n                thisModal.state.paths = response;\n                if(thisModal.state.paths != null & thisModal.state.paths.length > 0){\n                    thisModal.state.selectedPath = thisModal.state.paths[0];\n                }\n            },   \n            error : function(jqXHR, textStatus, errorThrown) {\n            },   \n            async: true \n        });  \n    }\n\n    addFile(filepath){\n        let thisModal = this;\n\n        let submissionData = {\n            \"type\" : \"cache\",\n            \"path\" : filepath\n        };\n\n        $.ajax({\n            type: 'POST',\n            url: '/protected/sim_acft',\n            data : submissionData,\n            dataType : 'json',\n            success : function(response) {\n                console.log(\"received response: \");\n                console.log(response);\n            },   \n            error : function(jqXHR, textStatus, errorThrown) {\n            },   \n            async: true \n        });  \n    }\n\n    removeFile(index){\n        let thisModal = this;\n\n        let submissionData = {\n            \"type\" : \"rmcache\",\n            \"path\" : this.state.paths[index]\n        };\n\n        $.ajax({\n            type: 'POST',\n            url: '/protected/sim_acft',\n            data : submissionData,\n            dataType : 'json',\n            success : function(response) {\n                console.log(\"received response: \");\n                console.log(response);\n                thisModal.state.paths = response;\n                thisModal.setState(thisModal.state);\n            },   \n            error : function(jqXHR, textStatus, errorThrown) {\n            },   \n            async: true \n        });  \n    }\n\n\n    render() {\n        let styleButtonSq = {\n            flex : \"right\",\n            float : \"auto\"\n        };\n\n        let listStyle = {\n            maxHeight: \"400px\",\n            overflowY: \"scroll\"\n        }\n\n        console.log(\"rendering select aircraft (xplane) modal\");\n        console.log(this.state.paths);\n        let paths = this.state.paths;\n\n        let selectRow = (\n            <ListGroup id=\"listgrp\" defaultActiveKey=\"#custom\" style={listStyle}>\n            <ListGroup.Item active={this.state.activeId == 0} onClick={() => this.selectPathId(0)}>\n              <input type=\"text\" id=\"cust_path\" className=\"form-control\" placeholder=\"Enter a new or custom path to a *.acf file\"/>\n            </ListGroup.Item>\n            {paths != null && paths.length > 0 &&\n                paths.map((path, index) => {\n                    let relIndex = index + 1;\n                    let isActive = (this.state.activeId - 1 == index);\n                    return(\n                        <ListGroup.Item active={isActive} key={index} onClick={() => this.selectPathId(relIndex)}>\n                            <Container>\n                                <Row className=\"justify-content-md-center\">\n                                    <Col xs lg=\"11\">\n                                        {path}\n                                    </Col>\n                                    <Col xs lg=\"1\">\n                                        <button className=\"m-1 btn btn-outline-secondary align-right\" style={styleButtonSq} onClick={() => this.removeFile(index)} title=\"Permanently delete this cached aircraft\">\n                                            <i className=\"fa fa-trash\" aria-hidden=\"true\"></i>\n                                        </button>\n                                    </Col>\n                                  </Row>\n                            </Container>\n                        </ListGroup.Item>\n                    );\n                })\n            }\n            </ListGroup>\n        );\n\n\n        //have to use a plaintext form for the filepath here\n        // see https://stackoverflow.com/questions/3489133/full-path-from-file-input-using-jquery\n        return (\n            <div className='modal-content'>\n\n                <div className='modal-header'>\n                    <h5 id='confirm-modal-title' className='modal-title'>Select Aircraft Filepath for X-Plane</h5>\n                    <button type='button' className='close' data-dismiss='modal' aria-label='Close'>\n                        <span aria-hidden='true'>&times;</span>\n                    </button>\n                </div>\n\n                <div id='confirm-modal-body' className='modal-body'>\n                    <h4>Select *.acf filepath for X-Plane</h4>\n                        Please select (or add) a filepath for the *.acf file that matches the aircraft in your X-Plane library that you would like simulated.\n\n                    <div className=\"row p-2\">\n                        <div className=\"col\">\n                            {selectRow}\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"row p-3\">\n                    <div className=\"col\">\n                         <div className=\"form-check\">\n                            <input className=\"form-check-input\" type=\"checkbox\" id=\"altCheck\"></input>\n                              <label className=\"form-check-label\" htmlFor=\"defaultCheck1\">\n                                  Use altMSL instead of altAGL\n                            </label>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='modal-footer'>\n                    <button type='button' className='btn btn-primary' data-dismiss='modal' onClick={() => this.modalClicked()}>Submit</button>\n                    <button type='button' className='btn btn-success' data-dismiss='modal' onClick={() => this.helpClicked()}>Help</button>\n                    <button type='button' className='btn btn-secondary' data-dismiss='modal'>Cancel</button>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nvar selectAircraftModal = ReactDOM.render(\n    <SelectAircraftModal backdrop=\"static\" />,\n    document.querySelector(\"#select_aircraft-modal-content\")\n);\n\nexport { selectAircraftModal };\n"],"mappings":"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"}]}