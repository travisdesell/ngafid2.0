{"remainingRequest":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/ngafid/ngafid2.0/src/main/javascript/uploads.js","dependencies":[{"path":"/ngafid/ngafid2.0/src/main/javascript/uploads.js","mtime":1664810261290},{"path":"/ngafid/ngafid2.0/.babelrc","mtime":1664810261182},{"path":"/ngafid/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":1664910647113},{"path":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":1664910647213}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport { confirmModal } from \"./confirm_modal.js\";\nimport { errorModal } from \"./error_modal.js\";\nimport SignedInNavbar from \"./signed_in_navbar.js\";\nimport { Paginator } from \"./paginator_component.js\";\nimport SparkMD5 from \"spark-md5\";\nvar paused = [];\nvar chunkSize = 2 * 1024 * 1024; //2MB\n\nvar Upload = /*#__PURE__*/function (_React$Component) {\n  _inherits(Upload, _React$Component);\n\n  var _super = _createSuper(Upload);\n\n  function Upload(props) {\n    _classCallCheck(this, Upload);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(Upload, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {//console.log(\"upload did mount for filename: '\" + this.props.uploadInfo.filename + \"'\");\n    }\n  }, {\n    key: \"removeUpload\",\n    value: function removeUpload() {\n      $(\"#loading\").show();\n      var submissionData = {\n        uploadId: this.props.uploadInfo.id,\n        md5Hash: this.props.uploadInfo.md5Hash\n      };\n      var thisUpload = this;\n      console.log(\"removing upload:\");\n      console.log(submissionData);\n      $.ajax({\n        type: 'POST',\n        url: '/protected/remove_upload',\n        data: submissionData,\n        dataType: 'json',\n        success: function success(response) {\n          console.log(\"received response: \");\n          console.log(response);\n          $(\"#loading\").hide();\n\n          if (response.errorTitle) {\n            console.log(\"displaying error modal!\");\n            errorModal.show(response.errorTitle, response.errorMessage);\n            return false;\n          }\n\n          thisUpload.props.removeUpload(thisUpload.props.uploadInfo);\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          $(\"#loading\").hide();\n          errorModal.show(\"Error removing upload\", errorThrown);\n        },\n        async: true\n      });\n    }\n  }, {\n    key: \"confirmRemoveUpload\",\n    value: function confirmRemoveUpload() {\n      var _this = this;\n\n      console.log(\"attempting to remove upload!\");\n      console.log(this.props);\n      confirmModal.show(\"Confirm Delete: '\" + this.props.uploadInfo.filename + \"'\", \"Are you sure you wish to delete this upload?\\n\\nThis operation will remove it from the server along with all flights and other information from the database. A backup of this upload is not stored on the server and if you wish to retrieve it you will have to re-upload it.\", function () {\n        _this.removeUpload();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var uploadInfo = this.props.uploadInfo;\n      var progressSize = uploadInfo.progressSize;\n      var totalSize = uploadInfo.totalSize;\n      if (progressSize == undefined) progressSize = uploadInfo.bytesUploaded;\n      if (totalSize == undefined) totalSize = uploadInfo.sizeBytes;\n      var width = (progressSize / totalSize * 100).toFixed(2);\n      var sizeText = (progressSize / 1000).toFixed(2).toLocaleString() + \"/\" + (totalSize / 1000).toFixed(2).toLocaleString() + \" kB (\" + width + \"%)\";\n      var statusText = \"\";\n      var progressBarClasses = \"progress-bar\";\n      var statusClasses = \"p-1 pl-2 pr-2 ml-1 card bg-light\";\n      var status = uploadInfo.status;\n\n      if (status == \"HASHING\") {\n        statusText = \"Hashing\";\n        progressBarClasses += \" bg-warning\";\n        statusClasses += \" border-warning text-warning\";\n      } else if (status == \"UPLOADED\") {\n        statusText = \"Uploaded\";\n        progressBarClasses += \" bg-primary\";\n        statusClasses += \" border-primary text-primary\";\n      } else if (status == \"UPLOADING\") {\n        statusText = \"Uploading\";\n      } else if (status == \"UPLOAD INCOMPLETE\") {\n        statusText = \"Upload Incomplete\";\n        progressBarClasses += \" bg-warning\";\n        statusClasses += \" border-warning text-warning\";\n      } else if (status == \"ERROR\") {\n        statusText = \"Import Failed\";\n        progressBarClasses += \" bg-danger\";\n        statusClasses += \" border-danger text-danger\";\n      } else if (status == \"IMPORTED\") {\n        if (uploadInfo.errorFlights == 0 && uploadInfo.warningFlights == 0) {\n          statusText = \"Imported\";\n          progressBarClasses += \" bg-success\";\n          statusClasses += \" border-success text-success\";\n        } else if (uploadInfo.errorFlights != 0 && uploadInfo.errorFlights != 0) {\n          statusText = \"Imported With Errors and Warnings\";\n          progressBarClasses += \" bg-danger\";\n          statusClasses += \" border-danger text-danger \";\n        } else if (uploadInfo.errorFlights != 0) {\n          statusText = \"Imported With Errors\";\n          progressBarClasses += \" bg-danger\";\n          statusClasses += \" border-danger text-danger \";\n        } else if (uploadInfo.warningFlights != 0) {\n          statusText = \"Imported With Warnings\";\n          progressBarClasses += \" bg-warning\";\n          statusClasses += \" border-warning text-warning \";\n        }\n      }\n\n      var progressSizeStyle = {\n        width: width + \"%\",\n        height: \"34px\",\n        textAlign: \"left\",\n        whiteSpace: \"nowrap\"\n      };\n      console.log(\"uploadInfo:\");\n      console.log(uploadInfo);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"m-1\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex flex-row\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-1 mr-1 card border-light bg-light\",\n        style: {\n          flex: \"0 0 15em\"\n        }\n      }, uploadInfo.filename), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-1 mr-1 card border-light bg-light\",\n        style: {\n          flex: \"0 0 15em\"\n        }\n      }, uploadInfo.startTime), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex-fill card progress\",\n        style: {\n          height: \"34px\",\n          padding: \"0 0 0 0\"\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: progressBarClasses,\n        role: \"progressbar\",\n        style: progressSizeStyle,\n        \"aria-valuenow\": width,\n        \"aria-valuemin\": \"0\",\n        \"aria-valuemax\": \"100\"\n      }, \"\\xA0 \", sizeText)), /*#__PURE__*/React.createElement(\"div\", {\n        className: statusClasses,\n        style: {\n          flex: \"0 0 18em\"\n        }\n      }, statusText), /*#__PURE__*/React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-danger btn-sm\",\n        style: {\n          width: \"34px\",\n          marginLeft: \"4px\",\n          padding: \"2 4 4 4\"\n        }\n      }, \" \", /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-times\",\n        \"aria-hidden\": \"true\",\n        style: {\n          padding: \"4 4 3 4\"\n        },\n        onClick: function onClick() {\n          return _this2.confirmRemoveUpload();\n        }\n      }), \" \")));\n    }\n  }]);\n\n  return Upload;\n}(React.Component);\n\nfunction getUploadeIdentifier(filename, size) {\n  return size + '-' + filename.replace(/[^0-9a-zA-Z_-]/img, '');\n}\n\nvar UploadsPage = /*#__PURE__*/function (_React$Component2) {\n  _inherits(UploadsPage, _React$Component2);\n\n  var _super2 = _createSuper(UploadsPage);\n\n  function UploadsPage(props) {\n    var _this3;\n\n    _classCallCheck(this, UploadsPage);\n\n    _this3 = _super2.call(this, props);\n    _this3.state = {\n      uploads: _this3.props.uploads,\n      pending_uploads: _this3.props.pending_uploads,\n      //needed for paginator\n      currentPage: _this3.props.currentPage,\n      numberPages: _this3.props.numberPages,\n      //this will be set globally in the javascript\n      pageSize: 10\n    };\n    return _this3;\n  }\n\n  _createClass(UploadsPage, [{\n    key: \"getMD5Hash\",\n    value: function getMD5Hash(file, onFinish, uploadsPage) {\n      var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,\n          chunkSize = 2097152,\n          // Read in chunks of 2MB\n      chunks = Math.ceil(file.size / chunkSize),\n          currentChunk = 0,\n          spark = new SparkMD5.ArrayBuffer(),\n          fileReader = new FileReader();\n\n      fileReader.onload = function (e) {\n        console.log('read chunk nr', currentChunk + 1, 'of', chunks);\n        spark.append(e.target.result); // Append array buffer\n\n        currentChunk++;\n\n        if (currentChunk % 5 == 0) {\n          //var percent = (currentChunk / chunks) * 100.0;\n          var state = uploadsPage.state;\n          console.log(\"inside onload function!\");\n          console.log(state);\n          console.log(file);\n          state.pending_uploads[file.position].progressSize = currentChunk * chunkSize;\n          uploadsPage.setState(state); //set_progressbar_percent(file.identifier, percent);\n        }\n\n        if (currentChunk < chunks) {\n          loadNext();\n        } else {\n          //reset progress bar for uploading\n          var _state = uploadsPage.state;\n          _state.pending_uploads[file.position].progressSize = 0;\n          _state.pending_uploads[file.position].status = \"UPLOADING\";\n          uploadsPage.setState(_state);\n          onFinish(spark.end());\n        }\n      };\n\n      fileReader.onerror = function () {\n        errorModal.show(\"File Upload Error\", \"Could not upload file because of an error generating it's MD5 hash. Please reload the page and try again.\");\n      };\n\n      function loadNext() {\n        var start = currentChunk * chunkSize,\n            end = start + chunkSize >= file.size ? file.size : start + chunkSize;\n        fileReader.readAsArrayBuffer(blobSlice.call(file, start, end));\n      }\n\n      loadNext();\n    }\n  }, {\n    key: \"startUpload\",\n    value: function startUpload(file) {\n      //different versions of firefox have different field names\n      var filename = file.webkitRelativePath || file.fileName || file.name;\n      var identifier = file.identifier;\n      var position = file.position;\n      paused[identifier] = false;\n      var numberChunks = Math.ceil(file.size / chunkSize);\n      var uploadInfo = {};\n      uploadInfo.identifier = identifier;\n      uploadInfo.filename = filename;\n      uploadInfo.uploadedChunks = 0;\n      uploadInfo.numberChunks = numberChunks;\n      uploadInfo.sizeBytes = file.size;\n      uploadInfo.bytesUploaded = 0;\n      uploadInfo.status = 'HASHING';\n      var uploadsPage = this;\n\n      function onFinish(md5Hash) {\n        file.md5Hash = md5Hash;\n        console.log(\"got md5Hash: '\" + md5Hash + \"'\");\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', '/protected/new_upload');\n\n        xhr.onload = function () {\n          console.log(\"New upload response: \" + xhr.responseText);\n          var response = JSON.parse(xhr.responseText);\n          var filename = file.webkitRelativePath || file.fileName || file.name; //check and see if there was an error in the response!\n\n          if (response.errorTitle !== undefined) {\n            errorModal.show(response.errorTitle, response.errorMessage + \"<br>On file: '\" + filename + \"'\");\n            uploadsPage.removePendingUpload(file);\n          } else {\n            var uploadInfo = response;\n            uploadInfo.file = file; //set the file in the response uploadInfo so it can be used later\n\n            uploadInfo.identifier = identifier;\n            uploadInfo.position = position;\n            uploadsPage.updateUpload(uploadInfo);\n          }\n        };\n\n        var formData = new FormData();\n        formData.append(\"request\", \"NEW_UPLOAD\");\n        formData.append(\"filename\", filename);\n        formData.append(\"identifier\", identifier);\n        formData.append(\"numberChunks\", numberChunks);\n        formData.append(\"sizeBytes\", file.size);\n        formData.append(\"md5Hash\", md5Hash);\n        xhr.send(formData);\n      }\n\n      var md5Hash = this.getMD5Hash(file, onFinish, this);\n    }\n  }, {\n    key: \"addUpload\",\n    value: function addUpload(file) {\n      var filename = file.webkitRelativePath || file.fileName || file.name;\n      var progressSize = 0;\n      var status = \"HASHING\";\n      var totalSize = file.size;\n      console.log(\"adding filename: '\" + filename + \"'\");\n      var pending_uploads = this.state.pending_uploads;\n      var identifier = getUploadeIdentifier(filename, totalSize);\n      console.log(\"CREATED IDENTIFIER: \" + identifier);\n      file.identifier = identifier;\n      file.position = 0;\n      var alreadyExists = false;\n\n      for (var i = 0; i < pending_uploads.length; i++) {\n        if (pending_uploads[i].identifier == identifier) {\n          if (pending_uploads[i].status == \"UPLOAD INCOMPLETE\") {\n            //upload already exists in the list but is incomplete, so we need to restart it\n            alreadyExists = true;\n            file.position = i;\n          } else {\n            console.log(\"file already exists, not adding!\");\n            return;\n          }\n        }\n      }\n\n      if (!alreadyExists) {\n        pending_uploads.unshift({\n          identifier: identifier,\n          filename: filename,\n          status: status,\n          totalSize: totalSize,\n          progressSize: progressSize\n        });\n      }\n\n      var state = this.state;\n      state.pending_uploads = pending_uploads;\n\n      if (this.state.numberPages == 0) {\n        this.state.numberPages = 1;\n        this.state.currentPage = 0;\n      }\n\n      this.setState(state);\n      this.startUpload(file);\n    }\n  }, {\n    key: \"removePendingUpload\",\n    value: function removePendingUpload(file) {\n      if (file.position < pending_uploads.length) {\n        var _pending_uploads = this.state.pending_uploads;\n\n        _pending_uploads.splice(file.position, 1);\n\n        for (var i = 0; i < _pending_uploads.length; i++) {\n          _pending_uploads[i].position = i;\n        }\n\n        var state = this.state;\n        state.pending_uploads = _pending_uploads;\n        this.setState(state);\n      }\n    }\n  }, {\n    key: \"removeUpload\",\n    value: function removeUpload(file) {\n      if (file.position < uploads.length) {\n        var _uploads = this.state.uploads;\n\n        _uploads.splice(file.position, 1);\n\n        for (var i = 0; i < _uploads.length; i++) {\n          _uploads[i].position = i;\n        }\n\n        var state = this.state;\n        state.uploads = _uploads;\n        this.setState(state);\n      }\n    }\n  }, {\n    key: \"updateUpload\",\n    value: function updateUpload(uploadInfo) {\n      var file = uploadInfo.file;\n      var position = uploadInfo.position;\n      var numberChunks = parseInt(uploadInfo.numberChunks);\n      var filename = uploadInfo.filename;\n      var identifier = uploadInfo.identifier;\n      var chunkStatus = uploadInfo.chunkStatus;\n      var chunkNumber = chunkStatus.indexOf(\"0\"); //console.log(\"chunk status: '\" + chunkStatus + \"'\");\n\n      console.log(\"next chunk: \" + chunkNumber + \" of \" + numberChunks);\n      uploadInfo.progressSize = uploadInfo.bytesUploaded;\n      uploadInfo.totalSize = uploadInfo.sizeBytes;\n      var pending_uploads = this.state.pending_uploads;\n      pending_uploads[uploadInfo.position] = uploadInfo;\n      var state = this.state;\n      this.setState(state);\n      var uploadsPage = this;\n      var fileReader = new FileReader();\n      var startByte = parseInt(chunkNumber) * parseInt(chunkSize);\n      var endByte = Math.min(parseInt(startByte) + parseInt(chunkSize), file.size); //console.log(\"startByte: \" + startByte + \", endByte: \" + endByte + \", chunkSize: \" + chunkSize);\n\n      var func = file.slice ? 'slice' : file.mozSlice ? 'mozSlice' : file.webkitSlice ? 'webkitSlice' : 'slice';\n      var bytes = file[func](startByte, endByte, void 0); //console.log(bytes);\n\n      var xhr = new XMLHttpRequest();\n      xhr.open('POST', '/protected/upload'); //xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n\n      xhr.onload = function () {\n        console.log(\"Upload response: \" + xhr.responseText);\n        var response = JSON.parse(xhr.responseText);\n\n        if (response.errorTitle !== undefined) {\n          errorModal.show(response.errorTitle, response.errorMessage + \"<br>On file: '\" + filename + \"'\");\n        } else {\n          var uploadInfo = response;\n          uploadInfo.file = file; //set the fileObject so we can use it for restarts\n\n          uploadInfo.position = position;\n          var numberChunks = Math.ceil(file.size / chunkSize);\n          console.log(\"uploaded chunk \" + chunkNumber + \" of \" + numberChunks);\n          var chunkStatus = uploadInfo.chunkStatus;\n          chunkNumber = chunkStatus.indexOf(\"0\"); //console.log(\"chunk status: '\" + chunkStatus + \"'\");\n          //console.log(\"next chunk: \" + chunkNumber);\n          //chunkNumber = chunkNumber + 1;\n\n          if (chunkNumber > -1) {\n            console.log(\"uploading next chunk with response:\");\n            console.log(response);\n            console.log(\"uploadInfo:\");\n            console.log(uploadInfo);\n            uploadsPage.updateUpload(uploadInfo);\n          } else {\n            console.log(\"Should be finished upload!\");\n            var _pending_uploads2 = uploadsPage.state.pending_uploads;\n            _pending_uploads2[uploadInfo.position] = uploadInfo;\n            var _state2 = uploadsPage.state;\n            uploadsPage.setState(_state2);\n          }\n        }\n      };\n\n      console.log(\"appending identifier: \" + file.identifier);\n      var formData = new FormData();\n      formData.append(\"request\", \"UPLOAD\");\n      formData.append(\"chunkNumber\", chunkNumber);\n      formData.append(\"identifier\", file.identifier);\n      formData.append(\"md5Hash\", file.md5Hash);\n      formData.append(\"chunk\", bytes, file.fileName);\n      xhr.send(formData);\n    }\n  }, {\n    key: \"submitFilter\",\n    value: function submitFilter() {\n      //prep data\n      var uploadsPage = this;\n      var submissionData = {\n        currentPage: this.state.currentPage,\n        pageSize: this.state.pageSize\n      };\n      console.log(submissionData);\n      $.ajax({\n        type: 'POST',\n        url: '/protected/uploads',\n        data: submissionData,\n        dataType: 'json',\n        success: function success(response) {\n          console.log(response);\n          $(\"#loading\").hide();\n\n          if (response.errorTitle) {\n            console.log(\"displaying error modal!\");\n            errorModal.show(response.errorTitle, response.errorMessage);\n            return false;\n          }\n\n          console.log(\"got response: \" + response + \" \" + response.sizeAll);\n          uploadsPage.setState({\n            uploads: response.uploads,\n            numberPages: response.numberPages\n          });\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          errorModal.show(\"Error Loading Uploads\", errorThrown);\n        },\n        async: true\n      });\n    }\n  }, {\n    key: \"triggerInput\",\n    value: function triggerInput() {\n      console.log(\"input triggered!\");\n      var uploadsPage = this;\n      $('#upload-file-input').trigger('click');\n      $('#upload-file-input:not(.bound)').addClass('bound').change(function () {\n        console.log(\"number files selected: \" + this.files.length);\n        console.log(this.files);\n\n        if (this.files.length > 0) {\n          var file = this.files[0];\n          var filename = file.webkitRelativePath || file.fileName || file.name;\n          var isZip = file['type'].includes(\"zip\");\n          console.log(\"isZip: \" + isZip);\n\n          if (!filename.match(/^[a-zA-Z0-9_.-]*$/)) {\n            errorModal.show(\"Malformed Filename\", \"The filename was malformed. Filenames must only contain letters, numbers, dashes ('-'), underscores ('_') and periods.\");\n          } else if (!isZip) {\n            errorModal.show(\"Malformed Filename\", \"Uploaded files must be zip files. The zip file should contain directories which contain flight logs (csv files). The directories should be named for the tail number of the airfraft that generated the flight logs within them.\");\n          } else {\n            uploadsPage.addUpload(file);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      console.log(\"rendering uploads!\");\n      var hiddenStyle = {\n        display: \"none\"\n      };\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(SignedInNavbar, {\n        activePage: \"uploads\",\n        waitingUserCount: waitingUserCount,\n        fleetManager: fleetManager,\n        unconfirmedTailsCount: unconfirmedTailsCount,\n        modifyTailsAccess: modifyTailsAccess,\n        plotMapHidden: plotMapHidden\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-1\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: \"upload-file-input\",\n        type: \"file\",\n        style: hiddenStyle\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mb-1 border-secondary\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\"\n      }, this.state.pending_uploads.length > 0 ? /*#__PURE__*/React.createElement(\"button\", {\n        className: \"btn btn-sm btn-info pr-2\",\n        disabled: true\n      }, \"Pending Uploads\") : \"\", /*#__PURE__*/React.createElement(\"button\", {\n        id: \"upload-flights-button\",\n        className: \"btn btn-primary btn-sm float-right\",\n        onClick: function onClick() {\n          return _this4.triggerInput();\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fa fa-upload\"\n      }), \" Upload Flights\"))), this.state.pending_uploads.map(function (uploadInfo, index) {\n        uploadInfo.position = index;\n        return /*#__PURE__*/React.createElement(Upload, {\n          uploadInfo: uploadInfo,\n          key: uploadInfo.identifier,\n          removeUpload: function removeUpload(uploadInfo) {\n            _this4.removePendingUpload(uploadInfo);\n          }\n        });\n      }), /*#__PURE__*/React.createElement(Paginator, {\n        submitFilter: function submitFilter() {\n          _this4.submitFilter();\n        },\n        items: this.state.uploads,\n        itemName: \"uploads\",\n        currentPage: this.state.currentPage,\n        numberPages: this.state.numberPages,\n        pageSize: this.state.pageSize,\n        updateCurrentPage: function updateCurrentPage(currentPage) {\n          _this4.state.currentPage = currentPage;\n        },\n        updateItemsPerPage: function updateItemsPerPage(pageSize) {\n          _this4.state.pageSize = pageSize;\n        }\n      }), this.state.uploads.map(function (uploadInfo, index) {\n        uploadInfo.position = index;\n        return /*#__PURE__*/React.createElement(Upload, {\n          uploadInfo: uploadInfo,\n          key: uploadInfo.identifier,\n          removeUpload: function removeUpload(uploadInfo) {\n            _this4.removeUpload(uploadInfo);\n          }\n        });\n      }), /*#__PURE__*/React.createElement(Paginator, {\n        submitFilter: function submitFilter() {\n          _this4.submitFilter();\n        },\n        items: this.state.uploads,\n        itemName: \"uploads\",\n        currentPage: this.state.currentPage,\n        numberPages: this.state.numberPages,\n        pageSize: this.state.pageSize,\n        updateCurrentPage: function updateCurrentPage(currentPage) {\n          _this4.state.currentPage = currentPage;\n        },\n        updateItemsPerPage: function updateItemsPerPage(pageSize) {\n          _this4.state.pageSize = pageSize;\n        }\n      })));\n    }\n  }]);\n\n  return UploadsPage;\n}(React.Component);\n\nvar uploadsPage = ReactDOM.render( /*#__PURE__*/React.createElement(UploadsPage, {\n  uploads: uploads,\n  pending_uploads: pending_uploads,\n  numberPages: numberPages,\n  currentPage: currentPage\n}), document.querySelector('#uploads-page'));",{"version":3,"names":["React","Component","ReactDOM","Dropdown","DropdownButton","confirmModal","errorModal","SignedInNavbar","Paginator","SparkMD5","paused","chunkSize","Upload","props","$","show","submissionData","uploadId","uploadInfo","id","md5Hash","thisUpload","console","log","ajax","type","url","data","dataType","success","response","hide","errorTitle","errorMessage","removeUpload","error","jqXHR","textStatus","errorThrown","async","filename","progressSize","totalSize","undefined","bytesUploaded","sizeBytes","width","toFixed","sizeText","toLocaleString","statusText","progressBarClasses","statusClasses","status","errorFlights","warningFlights","progressSizeStyle","height","textAlign","whiteSpace","flex","startTime","padding","marginLeft","confirmRemoveUpload","getUploadeIdentifier","size","replace","UploadsPage","state","uploads","pending_uploads","currentPage","numberPages","pageSize","file","onFinish","uploadsPage","blobSlice","File","prototype","slice","mozSlice","webkitSlice","chunks","Math","ceil","currentChunk","spark","ArrayBuffer","fileReader","FileReader","onload","e","append","target","result","position","setState","loadNext","end","onerror","start","readAsArrayBuffer","call","webkitRelativePath","fileName","name","identifier","numberChunks","uploadedChunks","xhr","XMLHttpRequest","open","responseText","JSON","parse","removePendingUpload","updateUpload","formData","FormData","send","getMD5Hash","alreadyExists","i","length","unshift","startUpload","splice","parseInt","chunkStatus","chunkNumber","indexOf","startByte","endByte","min","func","bytes","sizeAll","trigger","addClass","change","files","isZip","includes","match","addUpload","hiddenStyle","display","waitingUserCount","fleetManager","unconfirmedTailsCount","modifyTailsAccess","plotMapHidden","triggerInput","map","index","submitFilter","render","document","querySelector"],"sources":["/ngafid/ngafid2.0/src/main/javascript/uploads.js"],"sourcesContent":["import 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport { confirmModal } from \"./confirm_modal.js\";\nimport { errorModal } from \"./error_modal.js\";\nimport SignedInNavbar from \"./signed_in_navbar.js\";\nimport { Paginator } from \"./paginator_component.js\";\n\nimport SparkMD5 from \"spark-md5\";\n\n\nvar paused = [];\n\nvar chunkSize = 2 * 1024 * 1024; //2MB\n\nclass Upload extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n        //console.log(\"upload did mount for filename: '\" + this.props.uploadInfo.filename + \"'\");\n    }\n\n\n    removeUpload() {\n        $(\"#loading\").show();\n\n        var submissionData = {\n            uploadId : this.props.uploadInfo.id,\n            md5Hash : this.props.uploadInfo.md5Hash\n        };   \n\n        let thisUpload = this;\n\n        console.log(\"removing upload:\");\n        console.log(submissionData);\n\n        $.ajax({\n            type: 'POST',\n            url: '/protected/remove_upload',\n            data : submissionData,\n            dataType : 'json',\n            success : function(response) {\n                console.log(\"received response: \");\n                console.log(response);\n\n                $(\"#loading\").hide();\n\n                if (response.errorTitle) {\n                    console.log(\"displaying error modal!\");\n                    errorModal.show(response.errorTitle, response.errorMessage);\n                    return false;\n                }\n\n                thisUpload.props.removeUpload(thisUpload.props.uploadInfo);\n            },   \n            error : function(jqXHR, textStatus, errorThrown) {\n                $(\"#loading\").hide();\n                errorModal.show(\"Error removing upload\", errorThrown);\n            },   \n            async: true \n        });  \n    }\n\n    confirmRemoveUpload() {\n        console.log(\"attempting to remove upload!\");\n        console.log(this.props);\n\n        confirmModal.show(\"Confirm Delete: '\" + this.props.uploadInfo.filename + \"'\",\n            \"Are you sure you wish to delete this upload?\\n\\nThis operation will remove it from the server along with all flights and other information from the database. A backup of this upload is not stored on the server and if you wish to retrieve it you will have to re-upload it.\",\n            () => {this.removeUpload()}\n        );\n    }\n\n    render() {\n        let uploadInfo = this.props.uploadInfo;\n\n        let progressSize = uploadInfo.progressSize;\n        let totalSize = uploadInfo.totalSize;\n\n        if (progressSize == undefined) progressSize = uploadInfo.bytesUploaded;\n        if (totalSize == undefined) totalSize = uploadInfo.sizeBytes;\n\n        const width = ((progressSize / totalSize) * 100).toFixed(2);\n        const sizeText = (progressSize/1000).toFixed(2).toLocaleString() + \"/\" + (totalSize/1000).toFixed(2).toLocaleString()  + \" kB (\" + width + \"%)\";\n\n        let statusText = \"\";\n\n        let progressBarClasses = \"progress-bar\";\n        let statusClasses = \"p-1 pl-2 pr-2 ml-1 card bg-light\";\n        let status = uploadInfo.status;\n        if (status == \"HASHING\") {\n            statusText = \"Hashing\";\n            progressBarClasses += \" bg-warning\";\n            statusClasses += \" border-warning text-warning\";\n        } else if (status == \"UPLOADED\") {\n            statusText = \"Uploaded\";\n            progressBarClasses += \" bg-primary\";\n            statusClasses += \" border-primary text-primary\";\n        } else if (status == \"UPLOADING\") {\n            statusText = \"Uploading\";\n        } else if (status == \"UPLOAD INCOMPLETE\") {\n            statusText = \"Upload Incomplete\";\n            progressBarClasses += \" bg-warning\";\n            statusClasses += \" border-warning text-warning\";\n        } else if (status == \"ERROR\") {\n            statusText = \"Import Failed\";\n            progressBarClasses += \" bg-danger\";\n            statusClasses += \" border-danger text-danger\";\n        } else if (status == \"IMPORTED\") {\n            if (uploadInfo.errorFlights == 0 && uploadInfo.warningFlights == 0) {\n                statusText = \"Imported\";\n                progressBarClasses += \" bg-success\";\n                statusClasses += \" border-success text-success\";\n\n            } else if (uploadInfo.errorFlights != 0 && uploadInfo.errorFlights != 0) {\n                statusText = \"Imported With Errors and Warnings\";\n                progressBarClasses += \" bg-danger\";\n                statusClasses += \" border-danger text-danger \";\n\n            } else if (uploadInfo.errorFlights != 0) {\n                statusText = \"Imported With Errors\";\n                progressBarClasses += \" bg-danger\";\n                statusClasses += \" border-danger text-danger \";\n\n            } else if (uploadInfo.warningFlights != 0) {\n                statusText = \"Imported With Warnings\";\n                progressBarClasses += \" bg-warning\";\n                statusClasses += \" border-warning text-warning \";\n            }\n        }\n\n        const progressSizeStyle = {\n            width : width + \"%\",\n            height : \"34px\",\n            textAlign : \"left\",\n            whiteSpace : \"nowrap\"\n        };\n\n        console.log(\"uploadInfo:\");\n        console.log(uploadInfo);\n\n        return (\n            <div className=\"m-1\">\n                <div className=\"d-flex flex-row\">\n                    <div className=\"p-1 mr-1 card border-light bg-light\" style={{flex:\"0 0 15em\"}}>{uploadInfo.filename}</div>\n                    <div className=\"p-1 mr-1 card border-light bg-light\" style={{flex:\"0 0 15em\"}}>{uploadInfo.startTime}</div>\n                    <div className=\"flex-fill card progress\" style={{height:\"34px\", padding: \"0 0 0 0\"}}>\n                        <div className={progressBarClasses} role=\"progressbar\" style={progressSizeStyle} aria-valuenow={width} aria-valuemin=\"0\" aria-valuemax=\"100\">&nbsp; {sizeText}</div>\n                    </div>\n                    <div className={statusClasses} style={{flex:\"0 0 18em\"}}>{statusText}</div>\n\n                    <button type=\"button\" className={\"btn btn-danger btn-sm\"} style={{width:\"34px\", marginLeft:\"4px\", padding:\"2 4 4 4\"}}> <i className=\"fa fa-times\" aria-hidden=\"true\" style={{padding: \"4 4 3 4\"}} onClick={() => this.confirmRemoveUpload()}></i> </button>\n\n                </div>\n            </div>\n        );\n\n    }\n}\n\nfunction getUploadeIdentifier(filename, size) {\n    return(size + '-' + filename.replace(/[^0-9a-zA-Z_-]/img, ''));\n}\n\n\nclass UploadsPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uploads : this.props.uploads,\n            pending_uploads : this.props.pending_uploads,\n\n            //needed for paginator\n            currentPage : this.props.currentPage,\n            numberPages : this.props.numberPages, //this will be set globally in the javascript\n            pageSize : 10\n        };\n    }\n\n    getMD5Hash(file, onFinish, uploadsPage) {\n        var blobSlice = File.prototype.slice || File.prototype.mozSlice || File.prototype.webkitSlice,\n            chunkSize = 2097152,                             // Read in chunks of 2MB\n            chunks = Math.ceil(file.size / chunkSize),\n            currentChunk = 0,\n            spark = new SparkMD5.ArrayBuffer(),\n            fileReader = new FileReader();\n\n        fileReader.onload = function (e) {\n            console.log('read chunk nr', currentChunk + 1, 'of', chunks);\n            spark.append(e.target.result);                   // Append array buffer\n            currentChunk++;\n\n            if (currentChunk % 5 == 0) {\n                //var percent = (currentChunk / chunks) * 100.0;\n\n                let state = uploadsPage.state;\n                console.log(\"inside onload function!\");\n                console.log(state);\n                console.log(file);\n                state.pending_uploads[file.position].progressSize = currentChunk * chunkSize;\n\n                uploadsPage.setState(state);\n\n                //set_progressbar_percent(file.identifier, percent);\n            }\n\n            if (currentChunk < chunks) {\n                loadNext();\n            } else {\n                //reset progress bar for uploading\n                let state = uploadsPage.state;\n                state.pending_uploads[file.position].progressSize = 0;\n                state.pending_uploads[file.position].status = \"UPLOADING\";\n                uploadsPage.setState(state);\n\n                onFinish(spark.end());\n            }\n        };\n\n        fileReader.onerror = function () {\n            errorModal.show(\"File Upload Error\", \"Could not upload file because of an error generating it's MD5 hash. Please reload the page and try again.\");\n        };\n\n        function loadNext() {\n            var start = currentChunk * chunkSize,\n                end = ((start + chunkSize) >= file.size) ? file.size : start + chunkSize;\n\n            fileReader.readAsArrayBuffer(blobSlice.call(file, start, end));\n        }\n\n        loadNext();\n    }\n\n    startUpload(file) {\n        //different versions of firefox have different field names\n        var filename = file.webkitRelativePath || file.fileName || file.name;\n        var identifier = file.identifier;\n        var position = file.position;\n\n        paused[identifier] = false;\n\n        var numberChunks = Math.ceil(file.size / chunkSize);\n\n        var uploadInfo = {};\n        uploadInfo.identifier = identifier;\n        uploadInfo.filename = filename;\n        uploadInfo.uploadedChunks = 0;\n        uploadInfo.numberChunks = numberChunks;\n        uploadInfo.sizeBytes = file.size;\n        uploadInfo.bytesUploaded = 0;\n        uploadInfo.status = 'HASHING';\n\n        var uploadsPage = this;\n\n        function onFinish(md5Hash) {\n            file.md5Hash = md5Hash;\n            console.log(\"got md5Hash: '\" + md5Hash + \"'\");\n            var xhr = new XMLHttpRequest();\n\n            xhr.open('POST', '/protected/new_upload');\n            xhr.onload = function() {\n                console.log(\"New upload response: \" + xhr.responseText);\n                var response = JSON.parse(xhr.responseText);\n\n                var filename = file.webkitRelativePath || file.fileName || file.name;\n\n                //check and see if there was an error in the response!\n                if (response.errorTitle !== undefined) {\n                    errorModal.show(response.errorTitle, response.errorMessage + \"<br>On file: '\" + filename + \"'\");\n                    uploadsPage.removePendingUpload(file);\n\n                } else {\n                    var uploadInfo = response;\n                    uploadInfo.file = file; //set the file in the response uploadInfo so it can be used later\n                    uploadInfo.identifier = identifier;\n                    uploadInfo.position = position;\n                    uploadsPage.updateUpload(uploadInfo);\n                }\n            };\n\n            var formData = new FormData();\n            formData.append(\"request\", \"NEW_UPLOAD\");\n            formData.append(\"filename\", filename);\n            formData.append(\"identifier\", identifier);\n            formData.append(\"numberChunks\", numberChunks);\n            formData.append(\"sizeBytes\", file.size);\n            formData.append(\"md5Hash\", md5Hash);\n            xhr.send(formData);\n        }\n\n        var md5Hash = this.getMD5Hash(file, onFinish, this);\n    }\n\n\n    addUpload(file) {\n        const filename = file.webkitRelativePath || file.fileName || file.name;\n        const progressSize = 0;\n        const status = \"HASHING\";\n        const totalSize = file.size;\n        console.log(\"adding filename: '\" + filename + \"'\");\n\n        let pending_uploads = this.state.pending_uploads;\n\n        let identifier = getUploadeIdentifier(filename, totalSize);\n        console.log(\"CREATED IDENTIFIER: \" + identifier);\n        file.identifier = identifier;\n        file.position = 0;\n\n        let alreadyExists = false;\n        for (var i = 0; i < pending_uploads.length; i++) {\n            if (pending_uploads[i].identifier == identifier) {\n\n                if (pending_uploads[i].status == \"UPLOAD INCOMPLETE\") {\n                    //upload already exists in the list but is incomplete, so we need to restart it\n                    alreadyExists = true;\n                    file.position = i;\n                } else {\n                    console.log(\"file already exists, not adding!\");\n                    return;\n                }\n            }\n        }\n\n        if (!alreadyExists) {\n            pending_uploads.unshift({\n                identifier : identifier,\n                filename : filename,\n                status : status,\n                totalSize : totalSize,\n                progressSize : progressSize\n            });\n        }\n\n        let state = this.state;\n        state.pending_uploads = pending_uploads;\n\n        if (this.state.numberPages == 0) {\n            this.state.numberPages = 1;\n            this.state.currentPage = 0;\n        }\n\n        this.setState(state);\n        this.startUpload(file);\n    }\n\n    removePendingUpload(file) {\n        if (file.position < pending_uploads.length) {\n            let pending_uploads = this.state.pending_uploads;\n            pending_uploads.splice(file.position, 1);\n            for (var i = 0; i < pending_uploads.length; i++) {\n                pending_uploads[i].position = i;\n            }\n\n            let state = this.state;\n            state.pending_uploads = pending_uploads;\n            this.setState(state);\n        }\n    }\n\n\n    removeUpload(file) {\n        if (file.position < uploads.length) {\n            let uploads = this.state.uploads;\n            uploads.splice(file.position, 1);\n            for (var i = 0; i < uploads.length; i++) {\n                uploads[i].position = i;\n            }\n\n            let state = this.state;\n            state.uploads = uploads;\n            this.setState(state);\n        }\n    }\n\n    updateUpload(uploadInfo) {\n        var file = uploadInfo.file;\n        var position = uploadInfo.position;\n\n        var numberChunks = parseInt(uploadInfo.numberChunks); \n        var filename = uploadInfo.filename;\n        var identifier = uploadInfo.identifier;\n\n        var chunkStatus = uploadInfo.chunkStatus;\n        var chunkNumber = chunkStatus.indexOf(\"0\");\n        //console.log(\"chunk status: '\" + chunkStatus + \"'\");\n        console.log(\"next chunk: \" + chunkNumber + \" of \" + numberChunks);\n\n        uploadInfo.progressSize = uploadInfo.bytesUploaded;\n        uploadInfo.totalSize = uploadInfo.sizeBytes;\n\n        let pending_uploads = this.state.pending_uploads;\n        pending_uploads[uploadInfo.position] = uploadInfo;\n        let state = this.state;\n        this.setState(state);\n\n        var uploadsPage = this;\n\n        var fileReader = new FileReader();\n\n        var startByte = parseInt(chunkNumber) * parseInt(chunkSize);\n        var endByte = Math.min(parseInt(startByte) + parseInt(chunkSize), file.size);\n        //console.log(\"startByte: \" + startByte + \", endByte: \" + endByte + \", chunkSize: \" + chunkSize);\n\n        var func = (file.slice ? 'slice' : (file.mozSlice ? 'mozSlice' : (file.webkitSlice ? 'webkitSlice' : 'slice')));\n        var bytes = file[func](startByte, endByte, void 0);\n\n        //console.log(bytes);\n\n        var xhr = new XMLHttpRequest();\n        xhr.open('POST', '/protected/upload');\n        //xhr.setRequestHeader('Content-Type', 'application/octet-stream');\n        xhr.onload = function() {\n            console.log(\"Upload response: \" + xhr.responseText);\n\n            var response = JSON.parse(xhr.responseText);\n            if (response.errorTitle !== undefined) {\n                errorModal.show(response.errorTitle, response.errorMessage + \"<br>On file: '\" + filename + \"'\");\n\n            } else {\n                var uploadInfo = response;\n                uploadInfo.file = file; //set the fileObject so we can use it for restarts\n                uploadInfo.position = position;\n\n                var numberChunks = Math.ceil(file.size / chunkSize);\n                console.log(\"uploaded chunk \" + chunkNumber + \" of \" + numberChunks);\n\n                var chunkStatus = uploadInfo.chunkStatus;\n                chunkNumber = chunkStatus.indexOf(\"0\");\n                //console.log(\"chunk status: '\" + chunkStatus + \"'\");\n                //console.log(\"next chunk: \" + chunkNumber);\n                //chunkNumber = chunkNumber + 1;\n\n                if (chunkNumber > -1) {\n                    console.log(\"uploading next chunk with response:\");\n                    console.log(response);\n                    console.log(\"uploadInfo:\");\n                    console.log(uploadInfo);\n\n                    uploadsPage.updateUpload(uploadInfo);\n                } else {\n                    console.log(\"Should be finished upload!\");\n\n                    let pending_uploads = uploadsPage.state.pending_uploads;\n                    pending_uploads[uploadInfo.position] = uploadInfo;\n                    let state = uploadsPage.state;\n                    uploadsPage.setState(state);\n                }\n            }\n        };\n\n        console.log(\"appending identifier: \" + file.identifier);\n        var formData = new FormData();\n        formData.append(\"request\", \"UPLOAD\");\n        formData.append(\"chunkNumber\", chunkNumber);\n        formData.append(\"identifier\", file.identifier);\n        formData.append(\"md5Hash\", file.md5Hash);\n        formData.append(\"chunk\", bytes, file.fileName);\n        xhr.send(formData);\n    }\n\n    submitFilter() {\n        //prep data\n        var uploadsPage = this;\n\n        var submissionData = {\n            currentPage : this.state.currentPage,\n            pageSize : this.state.pageSize\n        };\n\n        console.log(submissionData);\n\n        $.ajax({\n            type: 'POST',\n            url: '/protected/uploads',\n            data : submissionData,\n            dataType : 'json',\n            success : function(response) {\n\n                console.log(response);\n\n                $(\"#loading\").hide();\n\n                if (response.errorTitle) {\n                    console.log(\"displaying error modal!\");\n                    errorModal.show(response.errorTitle, response.errorMessage);\n                    return false;\n                }\n\n                console.log(\"got response: \"+response+\" \"+response.sizeAll);\n\n                uploadsPage.setState({\n                    uploads : response.uploads,\n                    numberPages : response.numberPages\n                });\n            },\n            error : function(jqXHR, textStatus, errorThrown) {\n                errorModal.show(\"Error Loading Uploads\", errorThrown);\n            },\n            async: true\n        });\n    }\n\n    triggerInput() {\n        console.log(\"input triggered!\");\n\n        var uploadsPage = this;\n\n        $('#upload-file-input').trigger('click');\n\n        $('#upload-file-input:not(.bound)').addClass('bound').change(function() {\n            console.log(\"number files selected: \" + this.files.length);\n            console.log( this.files );\n\n            if (this.files.length > 0) { \n                var file = this.files[0];\n                var filename = file.webkitRelativePath || file.fileName || file.name;\n\n                const isZip = file['type'].includes(\"zip\");\n                console.log(\"isZip: \" + isZip);\n\n                if (!filename.match(/^[a-zA-Z0-9_.-]*$/)) {\n                    errorModal.show(\"Malformed Filename\", \"The filename was malformed. Filenames must only contain letters, numbers, dashes ('-'), underscores ('_') and periods.\");\n                } else if (!isZip) {\n                    errorModal.show(\"Malformed Filename\", \"Uploaded files must be zip files. The zip file should contain directories which contain flight logs (csv files). The directories should be named for the tail number of the airfraft that generated the flight logs within them.\");\n                } else {\n                    uploadsPage.addUpload(file);\n                }    \n            }    \n        });  \n    }\n\n    render() {\n        console.log(\"rendering uploads!\");\n\n        const hiddenStyle = {\n            display : \"none\"\n        };\n\n        return (\n\n            <div>\n                <SignedInNavbar activePage=\"uploads\" waitingUserCount={waitingUserCount} fleetManager={fleetManager} unconfirmedTailsCount={unconfirmedTailsCount} modifyTailsAccess={modifyTailsAccess} plotMapHidden={plotMapHidden}/>\n\n                <div className=\"p-1\">\n                    <input id =\"upload-file-input\" type=\"file\" style={hiddenStyle} />\n\n                    <div className=\"card mb-1 border-secondary\">\n                        <div className=\"p-2\">\n                            { \n                                this.state.pending_uploads.length > 0\n                                    ? ( <button className=\"btn btn-sm btn-info pr-2\" disabled>Pending Uploads</button> )\n                                    : \"\"\n                            }\n                            <button id=\"upload-flights-button\" className=\"btn btn-primary btn-sm float-right\" onClick={() => this.triggerInput()}>\n                                <i className=\"fa fa-upload\"></i> Upload Flights\n                            </button>\n                        </div>\n                    </div>\n\n                    {\n                        this.state.pending_uploads.map((uploadInfo, index) => {\n                            uploadInfo.position = index;\n                            return (\n                                <Upload uploadInfo={uploadInfo} key={uploadInfo.identifier} removeUpload={(uploadInfo) => {this.removePendingUpload(uploadInfo);}} />\n                            );\n                        })\n                    }\n\n                    <Paginator\n                        submitFilter={() => {this.submitFilter();}}\n                        items={this.state.uploads}\n                        itemName=\"uploads\"\n                        currentPage={this.state.currentPage}\n                        numberPages={this.state.numberPages}\n                        pageSize={this.state.pageSize}\n                        updateCurrentPage={(currentPage) => {\n                            this.state.currentPage = currentPage;\n                        }}\n                        updateItemsPerPage={(pageSize) => {\n                            this.state.pageSize = pageSize;\n                        }}\n                    />\n\n                    {\n                        this.state.uploads.map((uploadInfo, index) => {\n                            uploadInfo.position = index;\n                            return (\n                                <Upload uploadInfo={uploadInfo} key={uploadInfo.identifier} removeUpload={(uploadInfo) => {this.removeUpload(uploadInfo);}} />\n                            );\n                        })\n                    }\n\n                    <Paginator\n                        submitFilter={() => {this.submitFilter();}}\n                        items={this.state.uploads}\n                        itemName=\"uploads\"\n                        currentPage={this.state.currentPage}\n                        numberPages={this.state.numberPages}\n                        pageSize={this.state.pageSize}\n                        updateCurrentPage={(currentPage) => {\n                            this.state.currentPage = currentPage;\n                        }}\n                        updateItemsPerPage={(pageSize) => {\n                            this.state.pageSize = pageSize;\n                        }}\n                    />\n\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\nvar uploadsPage = ReactDOM.render(\n    <UploadsPage uploads={uploads} pending_uploads={pending_uploads} numberPages={numberPages} currentPage={currentPage}/>,\n    document.querySelector('#uploads-page')\n);\n"],"mappings":"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"}]}