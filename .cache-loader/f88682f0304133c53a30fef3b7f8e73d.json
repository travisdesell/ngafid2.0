{"remainingRequest":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js??ref--4-1!/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/login.js","dependencies":[{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/login.js","mtime":1589665823133},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/.babelrc","mtime":1589665823083},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\nimport $ from 'jquery';\nwindow.jQuery = $;\nwindow.$ = $;\n\nvar LoginModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginModal, _React$Component);\n\n  function LoginModal(props) {\n    var _this;\n\n    _classCallCheck(this, LoginModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginModal).call(this, props));\n    _this.state = {\n      valid: {\n        email: false,\n        emailEmpty: true,\n        passwordEmpty: true,\n        loginMessage: false\n      },\n      errorMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(LoginModal, [{\n    key: \"show\",\n    value: function show() {\n      this.validateEmail();\n      this.validatePassword();\n      $(\"#login-modal\").modal('show');\n    }\n  }, {\n    key: \"submitLogin\",\n    value: function submitLogin() {\n      var valid = true;\n\n      for (var property in this.state.valid) {\n        console.log(property);\n\n        if (property == false) {\n          valid = false;\n          break;\n        }\n      }\n\n      if (!valid) return;\n      console.log(\"Submitting login!\");\n      $(\"#login-modal\").modal('show');\n      $(\"#loading\").show();\n      var submissionData = {\n        email: $(\"#loginEmail\").val(),\n        password: $(\"#loginPassword\").val()\n      };\n      $.ajax({\n        type: 'POST',\n        url: './login',\n        data: submissionData,\n        dataType: 'json',\n        success: function success(response) {\n          $(\"#loginPassword\").val(\"\");\n          $(\"#loading\").hide();\n\n          if (response.loggedOut) {\n            console.log(\"user was logged out\");\n            loginModal.state.valid.errorMessage = true;\n            loginModal.state.errorMessage = response.message;\n            loginModal.setState(loginModal.state);\n            navbar.logOut();\n            return false;\n          } //login was successful or had a server error, we can hide the modal\n\n\n          $(\"#login-modal\").modal('hide');\n\n          if (response.errorTitle) {\n            console.log(\"displaying error modal!\");\n            errorModal.show(response.errorTitle, response.errorMessage);\n            return false;\n          }\n\n          if (response.waiting || response.denied) {\n            //redirect to the waiting page\n            window.location.replace(\"/protected/waiting\");\n          } else {\n            //redirect to the dashboard page\n            window.location.replace(\"/protected/dashboard\");\n          }\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          $(\"#loading\").hide();\n          errorModal.show(\"Error Submitting Account Information\", errorThrown);\n        },\n        async: true\n      });\n    }\n  }, {\n    key: \"validateEmail\",\n    value: function validateEmail() {\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      var email = $(\"#loginEmail\").val();\n      this.state.valid.email = re.test(String(email).toLowerCase());\n      this.state.valid.emailEmpty = email.length == 0; //reset the error message from the server as the user has modified the email/password\n\n      this.state.valid.errorMessage = false;\n      this.state.errorMessage = \"\";\n      this.setState(this.state);\n    }\n  }, {\n    key: \"validatePassword\",\n    value: function validatePassword() {\n      var password = $(\"#loginPassword\").val();\n      this.state.valid.passwordEmpty = password.length == 0; //reset the error message from the server as the user has modified the email/password\n\n      this.state.valid.errorMessage = false;\n      this.state.errorMessage = \"\";\n      this.setState(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hidden = this.props.hidden;\n      var formGroupStyle = {\n        marginBottom: '8px'\n      };\n      var formHeaderStyle = {\n        width: '150px',\n        flex: '0 0 150px'\n      };\n      var labelStyle = {\n        padding: '7 0 7 0',\n        margin: '0',\n        display: 'block',\n        textAlign: 'right'\n      };\n      var validationMessageStyle = {\n        padding: '7 0 7 0',\n        margin: '0',\n        display: 'block',\n        textAlign: 'left',\n        color: 'red'\n      };\n      var validationMessage = \"\";\n      var validationHidden = true;\n\n      if (this.state.valid.errorMessage) {\n        //show error messages from the server first\n        validationMessage = this.state.errorMessage;\n        validationHidden = false;\n      } else if (this.state.valid.emailEmpty) {\n        validationMessage = \"Please enter your email.\";\n        validationHidden = false;\n      } else if (!this.state.valid.email) {\n        validationMessage = \"Email was not valid.\";\n        validationHidden = false;\n      } else if (this.state.valid.passwordEmpty) {\n        validationMessage = \"Please enter a password.\";\n        validationHidden = false;\n      }\n\n      var submitDisabled = !validationHidden;\n      console.log(\"rendering login modal with validation message: '\" + validationMessage + \"' and validation visible: \" + validationHidden);\n      return React.createElement(\"div\", {\n        className: \"modal-content\"\n      }, React.createElement(\"div\", {\n        className: \"modal-header\"\n      }, React.createElement(\"h5\", {\n        id: \"login-modal-title\",\n        className: \"modal-title\"\n      }, \"Login\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\"\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        id: \"login-modal-body\",\n        className: \"modal-body\"\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, React.createElement(\"label\", {\n        htmlFor: \"loginEmail\",\n        style: labelStyle\n      }, \"Email address\")), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        className: \"form-control\",\n        id: \"loginEmail\",\n        \"aria-describedby\": \"emailHelp\",\n        placeholder: \"Enter email (required)\",\n        required: true,\n        onChange: function onChange() {\n          _this2.validateEmail();\n        }\n      })))), React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, React.createElement(\"label\", {\n        htmlFor: \"loginPassword\",\n        style: labelStyle\n      }, \"Password\")), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"loginPassword\",\n        placeholder: \"Password (required)\",\n        required: true,\n        onChange: function onChange() {\n          _this2.validatePassword();\n        }\n      })))), React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"span\", {\n        style: validationMessageStyle,\n        hidden: validationHidden\n      }, validationMessage)))), React.createElement(\"div\", {\n        className: \"modal-footer\"\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        \"data-dismiss\": \"modal\"\n      }, \"Close\"), React.createElement(\"button\", {\n        id: \"loginSubmitButton\",\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        onClick: function onClick() {\n          _this2.submitLogin();\n        },\n        disabled: submitDisabled\n      }, \"Submit\")));\n    }\n  }]);\n\n  return LoginModal;\n}(React.Component);\n\nvar loginModal = ReactDOM.render(React.createElement(LoginModal, null), document.querySelector(\"#login-modal-content\"));\nexport { loginModal };",null]}