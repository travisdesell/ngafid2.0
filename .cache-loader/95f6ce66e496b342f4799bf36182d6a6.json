{"remainingRequest":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js??ref--4-1!/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/dashboard.js","dependencies":[{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/dashboard.js","mtime":1589665823133},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/.babelrc","mtime":1589665823083},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\nimport { navbar } from \"./signed_in_navbar.js\";\n/*\nvar eventStats = [\n    {\n        airframeId : 0,\n        airframe : \"Generic\", \n        events : [\n            {\n                id : 0,\n                name : \"Pitch\",\n                totalFlights : 9039,\n                processedFlights : 7023,\n                monthStats : [\n                    { \n                        name : \"Current Month\",\n                        totalFlights : 1039,\n                        flightsWithEvent : 823,\n                        totalEvents : 132,\n                        avgDuration : 10.32,\n\n                        aggTotalFlights : 1039,\n                        aggFlightsWithEvent : 823,\n                        aggTotalEvents : 132,\n                        aggAvgDuration : 10.32\n                    },\n\n                    { \n                        name : \"Previous Month\",\n                        totalFlights : 1387,\n                        flightsWithEvent : 753,\n                        totalEvents : 192,\n                        avgDuration : 5.32,\n                        aggTotalFlights : 1039,\n                        aggFlightsWithEvent : 823,\n                        aggTotalEvents : 132,\n                        aggAvgDuration : 10.32\n                    },\n\n                    { \n                        name : \"Last 6 Months\",\n                        totalFlights : 2072,\n                        flightsWithEvent : 1123,\n                        totalEvents : 32,\n                        avgDuration : 15.12,\n                        aggTotalFlights : 1039,\n                        aggFlightsWithEvent : 823,\n                        aggTotalEvents : 132,\n                        aggAvgDuration : 10.32\n                    },\n\n                    { \n                        name : \"All Previous\",\n                        totalFlights : 23072,\n                        flightsWithEvent : 9123,\n                        totalEvents : 3322,\n                        avgDuration : 25.12,\n                        aggTotalFlights : 1039,\n                        aggFlightsWithEvent : 823,\n                        aggTotalEvents : 132,\n                        aggAvgDuration : 10.32\n                    }\n\n                ]\n            },\n\n            {\n                id : 1,\n                name : \"Roll\",\n                totalFlights : 9039,\n                processedFlights : 7023,\n                monthStats : [\n                    { \n                        name : \"Current Month\",\n                        totalFlights : 1039,\n                        flightsWithEvent : 823,\n                        totalEvents : 132,\n                        avgDuration : 10.32,\n                        aggTotalFlights : 1039,\n                        aggFlightsWithEvent : 823,\n                        aggTotalEvents : 132,\n                        aggAvgDuration : 10.32\n                    },\n\n                    { \n                        name : \"Previous Month\",\n                        totalFlights : 1387,\n                        flightsWithEvent : 753,\n                        totalEvents : 192,\n                        avgDuration : 5.32,\n                        aggTotalFlights : 1039,\n                        aggFlightsWithEvent : 823,\n                        aggTotalEvents : 132,\n                        aggAvgDuration : 10.32\n                    },\n\n                    { \n                        name : \"Last 6 Months\",\n                        totalFlights : 2072,\n                        flightsWithEvent : 1123,\n                        totalEvents : 32,\n                        avgDuration : 15.12,\n                        aggTotalFlights : 1039,\n                        aggFlightsWithEvent : 823,\n                        aggTotalEvents : 132,\n                        aggAvgDuration : 10.32\n                    },\n\n                    { \n                        name : \"All Previous\",\n                        totalFlights : 23072,\n                        flightsWithEvent : 9123,\n                        totalEvents : 3322,\n                        avgDuration : 25.12,\n                        aggTotalFlights : 1039,\n                        aggFlightsWithEvent : 823,\n                        aggTotalEvents : 132,\n                        aggAvgDuration : 10.32\n                    }\n\n                ]\n            }\n        ]\n\n    },\n\n    {\n        airframe_id : 1,\n        airframe : \"Cessna 172S\", \n        events : [\n            {\n                id : 0,\n                name : \"Pitch\",\n                totalFlights : 9039,\n                processedFlights : 5723,\n                monthStats : []\n            }\n        ]\n\n\n    },\n\n    {\n        airframe_id : 1,\n        airframe : \"PA-28-181\", \n        events : [\n            {\n                id : 0,\n                name : \"Pitch\",\n                totalFlights : 9039,\n                processedFlights : 5723,\n                monthStats : []\n            }\n        ]\n\n    }\n\n];\n*/\n\nvar DashboardCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(DashboardCard, _React$Component);\n\n  function DashboardCard(props) {\n    var _this;\n\n    _classCallCheck(this, DashboardCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DashboardCard).call(this, props));\n    _this.state = {\n      eventStats: eventStats\n    };\n    return _this;\n  }\n\n  _createClass(DashboardCard, [{\n    key: \"toggleEventInfo\",\n    value: function toggleEventInfo(eventInfo) {\n      console.log(\"eventInfo.infoHidden is: \" + eventInfo.infoHidden);\n      eventInfo.infoHidden = !eventInfo.infoHidden;\n      console.log(\"eventInfo.infoHidden changed to: \" + eventInfo.infoHidden);\n      this.setState(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(eventStats);\n      return React.createElement(\"div\", null, this.state.eventStats.map(function (airframeStats, airframeIndex) {\n        var marginTop = 4;\n\n        if (airframeIndex > 0) {\n          marginTop = 14;\n        }\n\n        return React.createElement(\"div\", {\n          key: airframeIndex,\n          style: {\n            marginTop: marginTop,\n            padding: \"0 5 0 5\"\n          }\n        }, React.createElement(\"div\", {\n          className: \"card mb-1 m-1\",\n          style: {\n            background: \"rgba(100,100,100,0.2)\",\n            padding: \"10 10 10 10\"\n          }\n        }, React.createElement(\"h5\", {\n          style: {\n            marginBottom: 0\n          }\n        }, airframeStats.airframeName + \" Events\")), React.createElement(\"div\", {\n          className: \"row\",\n          style: {\n            padding: \"0 15 0 15\"\n          }\n        }, airframeStats.events.map(function (eventInfo, eventIndex) {\n          var processedPercentage = (100.0 * parseFloat(eventInfo.processedFlights) / parseFloat(eventInfo.totalFlights)).toFixed(2);\n          if (typeof eventInfo.infoHidden == 'undefined') eventInfo.infoHidden = true;\n          return React.createElement(\"div\", {\n            className: \"col-sm-12\",\n            key: eventIndex,\n            style: {\n              padding: \"0 0 0 0\"\n            }\n          }, React.createElement(\"div\", {\n            className: \"card mb-1 m-1\",\n            style: {\n              background: \"rgba(248,259,250,0.8)\"\n            }\n          }, React.createElement(\"h5\", {\n            className: \"card-header\"\n          }, React.createElement(\"div\", {\n            className: \"d-flex\"\n          }, React.createElement(\"div\", {\n            style: {\n              flexBasis: \"30%\",\n              flexShrink: 0,\n              flexGrow: 0\n            }\n          }, eventInfo.eventName), React.createElement(\"button\", {\n            type: \"button\",\n            className: \"btn btn-outline-secondary\",\n            style: {\n              padding: \"3 8 3 8\",\n              marginRight: \"5\"\n            },\n            onClick: function onClick() {\n              _this2.toggleEventInfo(eventInfo);\n            }\n          }, React.createElement(\"i\", {\n            className: \"fa fa-info\"\n          })), React.createElement(\"div\", {\n            className: \"progress flex-fill\",\n            style: {\n              height: \"24px\",\n              background: \"rgba(183,186,199,1.0)\"\n            }\n          }, React.createElement(\"div\", {\n            className: \"progress-bar\",\n            role: \"progressbar\",\n            style: {\n              width: processedPercentage + \"%\"\n            },\n            \"aria-valuenow\": processedPercentage,\n            \"aria-valuemin\": \"0\",\n            \"aria-valuemax\": \"100\"\n          }, \" \\xA0 \", eventInfo.processedFlights + \" / \" + eventInfo.totalFlights + \" (\" + processedPercentage + \"%) flights processed\", \" \")))), React.createElement(\"div\", {\n            className: \"card-body\"\n          }, React.createElement(\"p\", {\n            hidden: eventInfo.infoHidden\n          }, eventInfo.humanReadable), React.createElement(\"table\", {\n            style: {\n              width: \"100%\"\n            }\n          }, React.createElement(\"thead\", null, React.createElement(\"tr\", null, React.createElement(\"th\", null), React.createElement(\"th\", {\n            style: {\n              textAlign: \"center\",\n              paddingRight: 25,\n              borderBottom: \"1px solid grey\",\n              borderRight: \"1px solid grey\"\n            },\n            colSpan: \"4\"\n          }, \"Your Fleet\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"center\",\n              borderBottom: \"1px solid grey\"\n            },\n            colSpan: \"4\"\n          }, \"Other Fleets\")), React.createElement(\"tr\", null, React.createElement(\"th\", null), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\"\n            }\n          }, \"Flights \"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\"\n            }\n          }, \"Total\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\"\n            }\n          }, \"Severity\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\",\n              paddingRight: 25,\n              borderRight: \"1px solid grey\"\n            }\n          }, \"Duration (s)\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\"\n            }\n          }, \"Flights \"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\"\n            }\n          }, \"Total \"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\"\n            }\n          }, \"Severity\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\"\n            }\n          }, \"Duration (s)\")), React.createElement(\"tr\", null, React.createElement(\"th\", null), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\",\n              borderBottom: \"1px solid grey\"\n            }\n          }, \"With Event\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\",\n              borderBottom: \"1px solid grey\"\n            }\n          }, \"Events\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\",\n              borderBottom: \"1px solid grey\"\n            }\n          }, \"(Min/Avg/Max)\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\",\n              paddingRight: 25,\n              borderBottom: \"1px solid grey\",\n              borderRight: \"1px solid grey\"\n            }\n          }, \"(Min/Avg/Max)\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\",\n              borderBottom: \"1px solid grey\"\n            }\n          }, \"With Event\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\",\n              borderBottom: \"1px solid grey\"\n            }\n          }, \"Events\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\",\n              borderBottom: \"1px solid grey\"\n            }\n          }, \"(Min/Avg/Max)\"), React.createElement(\"th\", {\n            style: {\n              textAlign: \"right\",\n              borderBottom: \"1px solid grey\"\n            }\n          }, \"(Min/avg/Max)\"))), React.createElement(\"tbody\", null, eventInfo.monthStats.map(function (stats, monthIndex) {\n            var eventPercentage = (100.0 * parseFloat(stats.flightsWithEvent) / parseFloat(stats.flightsWithoutError)).toFixed(2);\n            var flightsWithEventStr = stats.flightsWithEvent + \" / \" + stats.flightsWithoutError + \" (\" + eventPercentage + \"%)\";\n            var aggEventPercentage = (100.0 * parseFloat(stats.aggFlightsWithEvent) / parseFloat(stats.aggFlightsWithoutError)).toFixed(2);\n            var aggFlightsWithEventStr = stats.aggFlightsWithEvent + \" / \" + stats.aggFlightsWithoutError + \" (\" + aggEventPercentage + \"%)\";\n            return React.createElement(\"tr\", {\n              key: monthIndex\n            }, React.createElement(\"td\", null, stats.rowName), React.createElement(\"td\", {\n              style: {\n                textAlign: \"right\"\n              }\n            }, flightsWithEventStr), React.createElement(\"td\", {\n              style: {\n                textAlign: \"right\"\n              }\n            }, stats.totalEvents), React.createElement(\"td\", {\n              style: {\n                textAlign: \"right\"\n              }\n            }, stats.minSeverity.toFixed(2) + \" / \" + stats.avgSeverity.toFixed(2) + \" / \" + stats.maxSeverity.toFixed(2)), React.createElement(\"td\", {\n              style: {\n                textAlign: \"right\",\n                paddingRight: 25,\n                borderRight: \"1px solid grey\"\n              }\n            }, stats.minDuration.toFixed(2) + \" / \" + stats.avgDuration.toFixed(2) + \" / \" + stats.maxDuration.toFixed(2)), React.createElement(\"td\", {\n              style: {\n                textAlign: \"right\"\n              }\n            }, aggFlightsWithEventStr), React.createElement(\"td\", {\n              style: {\n                textAlign: \"right\"\n              }\n            }, stats.aggTotalEvents), React.createElement(\"td\", {\n              style: {\n                textAlign: \"right\"\n              }\n            }, stats.aggMinSeverity.toFixed(2) + \" / \" + stats.aggAvgSeverity.toFixed(2) + \" / \" + stats.aggMaxSeverity.toFixed(2)), React.createElement(\"td\", {\n              style: {\n                textAlign: \"right\"\n              }\n            }, stats.aggMinDuration.toFixed(2) + \" / \" + stats.aggAvgDuration.toFixed(2) + \" / \" + stats.aggMaxDuration.toFixed(2)));\n          }))))));\n        })));\n      }));\n    }\n  }]);\n\n  return DashboardCard;\n}(React.Component);\n\nvar profileCard = ReactDOM.render(React.createElement(DashboardCard, null), document.querySelector('#dashboard-card'));",null]}