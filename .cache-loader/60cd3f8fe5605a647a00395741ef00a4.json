{"remainingRequest":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/ngafid/ngafid2.0/src/main/javascript/update_event.js","dependencies":[{"path":"/ngafid/ngafid2.0/src/main/javascript/update_event.js","mtime":1664810261290},{"path":"/ngafid/ngafid2.0/.babelrc","mtime":1664810261182},{"path":"/ngafid/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":1664910647113},{"path":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":1664910647213}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\nimport SignedInNavbar from \"./signed_in_navbar.js\";\nimport { EventDefinitionCard } from './event_definition.js';\nvar navbar = ReactDOM.render( /*#__PURE__*/React.createElement(SignedInNavbar, {\n  activePage: \"update event\",\n  waitingUserCount: waitingUserCount,\n  fleetManager: fleetManager,\n  unconfirmedTailsCount: unconfirmedTailsCount,\n  modifyTailsAccess: modifyTailsAccess,\n  plotMapHidden: plotMapHidden\n}), document.querySelector('#navbar'));\nairframes.unshift(\"All Airframes\");\nairframeMap[0] = \"All Airframes\"; //remove the 'proximity' event because this can't be modified by this interface\n\neventDefinitions.splice(0, 1);\nvar rules = [];\n\nfor (var i = 0; i < doubleTimeSeriesNames.length; i++) {\n  rules.push({\n    name: doubleTimeSeriesNames[i],\n    conditions: [{\n      type: \"select\",\n      name: \"condition\",\n      options: [\"<=\", \"<\", \">\", \">=\"]\n    }, {\n      type: \"number\",\n      name: \"number\"\n    }]\n  });\n}\n\nvar UpdateEventCard = /*#__PURE__*/function (_React$Component) {\n  _inherits(UpdateEventCard, _React$Component);\n\n  var _super = _createSuper(UpdateEventCard);\n\n  function UpdateEventCard(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateEventCard);\n\n    _this = _super.call(this, props);\n    var eventDefinition = eventDefinitions[0];\n    _this.state = {\n      filterVisible: true,\n      eventIndex: 0,\n      eventId: eventDefinition.id,\n      eventName: eventDefinition.name,\n      airframe: airframeMap[eventDefinition.airframeNameId],\n      airframeNameId: eventDefinition.airframeNameId,\n      startBuffer: eventDefinition.startBuffer,\n      stopBuffer: eventDefinition.stopBuffer,\n      severityColumnNames: eventDefinition.severityColumnNames,\n      severityType: eventDefinition.severityType,\n      filters: eventDefinition.filter\n    };\n    return _this;\n  }\n\n  _createClass(UpdateEventCard, [{\n    key: \"validateEventName\",\n    value: function validateEventName(event) {\n      var eventName = event.target.value;\n      console.log(\"new event name: \" + eventName);\n      this.setState({\n        eventName: eventName\n      });\n    }\n  }, {\n    key: \"validateAirframe\",\n    value: function validateAirframe(event) {\n      var airframe = event.target.value;\n      console.log(\"new airframe: \" + airframe);\n      this.setState({\n        airframe: airframe\n      });\n    }\n  }, {\n    key: \"validateSeverityType\",\n    value: function validateSeverityType(event) {\n      var severityType = event.target.value;\n      console.log(\"new severity type: \" + severityType);\n      this.setState({\n        severityType: severityType\n      });\n    }\n  }, {\n    key: \"changeSeverityColumn\",\n    value: function changeSeverityColumn(event) {\n      var severityColumn = event.target.value;\n      console.log(\"new severity column: \" + severityColumn);\n      this.setState({\n        severityColumn: severityColumn\n      });\n    }\n  }, {\n    key: \"addSeverityColumn\",\n    value: function addSeverityColumn() {\n      console.log(\"adding severity column: \" + this.state.severityColumn);\n      var newSeverityColumns = this.state.severityColumnNames;\n\n      if (newSeverityColumns.indexOf(this.state.severityColumn) === -1) {\n        newSeverityColumns.push(this.state.severityColumn);\n      }\n\n      console.log(\"new severity columns array:\");\n      console.log(newSeverityColumns);\n      this.setState({\n        severityColumnNames: newSeverityColumns\n      });\n    }\n  }, {\n    key: \"removeSeverityColumn\",\n    value: function removeSeverityColumn(columnName) {\n      var newSeverityColumns = this.state.severityColumnNames;\n      var columnIndex = newSeverityColumns.indexOf(columnName);\n      newSeverityColumns.splice(columnIndex, 1);\n      console.log(\"new severity columns array:\");\n      console.log(newSeverityColumns);\n      this.setState({\n        severityColumnNames: newSeverityColumns\n      });\n    }\n  }, {\n    key: \"validateStartBuffer\",\n    value: function validateStartBuffer(event) {\n      var startBuffer = event.target.value;\n      console.log(\"new startBuffer: \" + startBuffer);\n      this.setState({\n        startBuffer: startBuffer\n      });\n    }\n  }, {\n    key: \"validateStopBuffer\",\n    value: function validateStopBuffer(event) {\n      var stopBuffer = event.target.value;\n      console.log(\"new stopBuffer: \" + stopBuffer);\n      this.setState({\n        stopBuffer: stopBuffer\n      });\n    }\n  }, {\n    key: \"changeSelectedEvent\",\n    value: function changeSelectedEvent(event) {\n      //the key will be the index of the event definition\n      var eventDefinition = eventDefinitions[event.target.value];\n      console.log(eventDefinition);\n      this.setState({\n        eventIndex: event.target.value,\n        eventId: eventDefinition.id,\n        eventName: eventDefinition.name,\n        airframe: airframeMap[eventDefinition.airframeNameId],\n        airframeNameId: eventDefinition.airframeNameId,\n        startBuffer: eventDefinition.startBuffer,\n        stopBuffer: eventDefinition.stopBuffer,\n        severityColumnNames: eventDefinition.severityColumnNames,\n        severityType: eventDefinition.severityType,\n        filters: eventDefinition.filter\n      });\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filter) {\n      this.setState({\n        filters: filter\n      });\n    }\n  }, {\n    key: \"submitFilter\",\n    value: function submitFilter() {\n      console.log(\"Submitting filters:\");\n      console.log(this.state.filters);\n      $(\"#loading\").show();\n      var submissionData = {\n        filterQuery: JSON.stringify(this.state.filters),\n        eventId: this.state.eventId,\n        eventName: this.state.eventName,\n        startBuffer: this.state.startBuffer,\n        stopBuffer: this.state.stopBuffer,\n        severityColumnNames: JSON.stringify(this.state.severityColumnNames),\n        severityType: this.state.severityType,\n        airframe: this.state.airframe\n      };\n      console.log(submissionData);\n      $.ajax({\n        type: 'POST',\n        url: '/protected/update_event',\n        data: submissionData,\n        dataType: 'json',\n        success: function success(response) {\n          console.log(\"received response: \");\n          console.log(response);\n          $(\"#loading\").hide();\n\n          if (response.errorTitle) {\n            console.log(\"displaying error modal!\");\n            errorModal.show(response.errorTitle, response.errorMessage);\n            return false;\n          } //createEventCard.setEvents(response);\n\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          errorModal.show(\"Error Loading Flights\", errorThrown);\n        },\n        async: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var style = {\n        padding: 5\n      };\n      var formGroupStyle = {\n        marginBottom: '0px',\n        padding: '0 4 0 4'\n      };\n      var formHeaderStyle = {\n        width: '200px',\n        flex: '0 0 200px'\n      };\n      var labelStyle = {\n        padding: '7 0 7 0',\n        margin: '0',\n        display: 'block',\n        textAlign: 'right'\n      };\n      var bgStyle = {\n        background: \"rgba(248,259,250,0.8)\",\n        margin: 0\n      };\n      var initialSelect = this.state.eventName + \" - \" + airframeMap[this.state.airframeNameId];\n      console.log(\"initial select: \" + initialSelect);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        style: style\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mb-1\",\n        style: bgStyle\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-header\"\n      }, \"Update Event\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"eventSelect\",\n        style: labelStyle\n      }, \"Select Event\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        id: \"eventSelect\",\n        className: \"form-control\",\n        onChange: function onChange(event) {\n          return _this2.changeSelectedEvent(event);\n        },\n        value: this.state.eventIndex\n      }, eventDefinitions.map(function (eventDefinition, index) {\n        var fullName = eventDefinition.name + \" - \" + airframeMap[eventDefinition.airframeNameId];\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: index,\n          value: index\n        }, fullName);\n      }))))), /*#__PURE__*/React.createElement(EventDefinitionCard, {\n        rules: rules,\n        airframes: airframes,\n        doubleTimeSeriesNames: doubleTimeSeriesNames,\n        eventNameHidden: true,\n        submitName: \"Update Event\",\n        eventName: this.state.eventName,\n        airframe: this.state.airframe,\n        startBuffer: this.state.startBuffer,\n        stopBuffer: this.state.stopBuffer,\n        severityColumn: this.state.severityColumn,\n        severityColumnNames: this.state.severityColumnNames,\n        severityType: this.state.severityType,\n        filters: this.state.filters,\n        getFilter: function getFilter() {\n          return _this2.state.filters;\n        },\n        setFilter: function setFilter(filter) {\n          return _this2.setFilter(filter);\n        },\n        submitFilter: function submitFilter() {\n          return _this2.submitFilter();\n        },\n        validateEventName: function validateEventName(event) {\n          return _this2.validateEventName(event);\n        },\n        validateAirframe: function validateAirframe(event) {\n          return _this2.validateAirframe(event);\n        },\n        validateSeverityType: function validateSeverityType(event) {\n          return _this2.validateSeverityType(event);\n        },\n        changeSeverityColumn: function changeSeverityColumn(event) {\n          return _this2.changeSeverityColumn(event);\n        },\n        addSeverityColumn: function addSeverityColumn() {\n          return _this2.addSeverityColumn();\n        },\n        removeSeverityColumn: function removeSeverityColumn(columnName) {\n          return _this2.removeSeverityColumn(columnName);\n        },\n        validateStartBuffer: function validateStartBuffer(event) {\n          return _this2.validateStartBuffer(event);\n        },\n        validateStopBuffer: function validateStopBuffer(event) {\n          return _this2.validateStopBuffer(event);\n        }\n      })));\n    }\n  }]);\n\n  return UpdateEventCard;\n}(React.Component);\n\nvar createEventCard = ReactDOM.render( /*#__PURE__*/React.createElement(UpdateEventCard, null), document.querySelector('#update-event-card'));",{"version":3,"names":["React","Component","ReactDOM","errorModal","SignedInNavbar","EventDefinitionCard","navbar","render","waitingUserCount","fleetManager","unconfirmedTailsCount","modifyTailsAccess","plotMapHidden","document","querySelector","airframes","unshift","airframeMap","eventDefinitions","splice","rules","i","doubleTimeSeriesNames","length","push","name","conditions","type","options","UpdateEventCard","props","eventDefinition","state","filterVisible","eventIndex","eventId","id","eventName","airframe","airframeNameId","startBuffer","stopBuffer","severityColumnNames","severityType","filters","filter","event","target","value","console","log","setState","severityColumn","newSeverityColumns","indexOf","columnName","columnIndex","$","show","submissionData","filterQuery","JSON","stringify","ajax","url","data","dataType","success","response","hide","errorTitle","errorMessage","error","jqXHR","textStatus","errorThrown","async","style","padding","formGroupStyle","marginBottom","formHeaderStyle","width","flex","labelStyle","margin","display","textAlign","bgStyle","background","initialSelect","changeSelectedEvent","map","index","fullName","setFilter","submitFilter","validateEventName","validateAirframe","validateSeverityType","changeSeverityColumn","addSeverityColumn","removeSeverityColumn","validateStartBuffer","validateStopBuffer","createEventCard"],"sources":["/ngafid/ngafid2.0/src/main/javascript/update_event.js"],"sourcesContent":["import 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { errorModal } from \"./error_modal.js\";\nimport SignedInNavbar from \"./signed_in_navbar.js\";\n\nimport { EventDefinitionCard } from './event_definition.js';\n\n\nvar navbar = ReactDOM.render(\n    <SignedInNavbar activePage=\"update event\" waitingUserCount={waitingUserCount} fleetManager={fleetManager} unconfirmedTailsCount={unconfirmedTailsCount} modifyTailsAccess={modifyTailsAccess} plotMapHidden={plotMapHidden}/>,\n    document.querySelector('#navbar')\n);\n\nairframes.unshift(\"All Airframes\");\n\nairframeMap[0] = \"All Airframes\";\n\n//remove the 'proximity' event because this can't be modified by this interface\neventDefinitions.splice(0,1);\n\nvar rules = [];\n\nfor (let i = 0; i < doubleTimeSeriesNames.length; i++) {\n    rules.push({\n        name : doubleTimeSeriesNames[i],\n        conditions : [\n            { \n                type : \"select\",\n                name : \"condition\",\n                options : [ \"<=\", \"<\", \">\", \">=\" ]\n            },\n            { \n                type : \"number\",\n                name : \"number\",\n            }\n        ]\n    });\n}\n\nclass UpdateEventCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let eventDefinition = eventDefinitions[0];\n\n        this.state = {\n            filterVisible : true,\n            eventIndex : 0,\n            eventId : eventDefinition.id,\n            eventName : eventDefinition.name,\n            airframe : airframeMap[eventDefinition.airframeNameId],\n            airframeNameId : eventDefinition.airframeNameId,\n            startBuffer : eventDefinition.startBuffer,\n            stopBuffer : eventDefinition.stopBuffer,\n            severityColumnNames : eventDefinition.severityColumnNames,\n            severityType : eventDefinition.severityType,\n            filters : eventDefinition.filter\n         }\n    }\n\n    validateEventName(event) {\n        let eventName = event.target.value;\n        console.log(\"new event name: \" + eventName);\n        this.setState({\n            eventName : eventName\n        });\n    }\n\n    validateAirframe(event) {\n        let airframe = event.target.value;\n        console.log(\"new airframe: \" + airframe);\n        this.setState({\n            airframe : airframe\n        });\n    }\n\n    validateSeverityType(event) {\n        let severityType = event.target.value;\n        console.log(\"new severity type: \" + severityType);\n        this.setState({\n            severityType : severityType\n        });\n    }\n\n    changeSeverityColumn(event) {\n        let severityColumn = event.target.value;\n        console.log(\"new severity column: \" + severityColumn);\n        this.setState({\n            severityColumn : severityColumn\n        });\n    }\n\n    addSeverityColumn() {\n        console.log(\"adding severity column: \" + this.state.severityColumn);\n        let newSeverityColumns = this.state.severityColumnNames;\n\n        if (newSeverityColumns.indexOf(this.state.severityColumn) === -1) {\n            newSeverityColumns.push(this.state.severityColumn);\n        }\n\n        console.log(\"new severity columns array:\");\n        console.log(newSeverityColumns);\n        this.setState({\n            severityColumnNames : newSeverityColumns\n        });\n    }\n\n    removeSeverityColumn(columnName) {\n        let newSeverityColumns = this.state.severityColumnNames;\n\n        let columnIndex = newSeverityColumns.indexOf(columnName);\n        newSeverityColumns.splice(columnIndex, 1);\n\n        console.log(\"new severity columns array:\");\n        console.log(newSeverityColumns);\n        this.setState({\n            severityColumnNames : newSeverityColumns\n        });\n    }\n\n    validateStartBuffer(event) {\n        let startBuffer = event.target.value;\n        console.log(\"new startBuffer: \" + startBuffer);\n        this.setState({\n            startBuffer : startBuffer\n        });\n    }\n\n    validateStopBuffer(event) {\n        let stopBuffer = event.target.value;\n        console.log(\"new stopBuffer: \" + stopBuffer);\n        this.setState({\n            stopBuffer : stopBuffer\n        });\n    }\n\n    changeSelectedEvent(event) {\n        //the key will be the index of the event definition\n        let eventDefinition = eventDefinitions[event.target.value];\n        console.log(eventDefinition);\n\n        this.setState({\n            eventIndex : event.target.value,\n            eventId : eventDefinition.id,\n            eventName : eventDefinition.name,\n            airframe : airframeMap[eventDefinition.airframeNameId],\n            airframeNameId : eventDefinition.airframeNameId,\n            startBuffer : eventDefinition.startBuffer,\n            stopBuffer : eventDefinition.stopBuffer,\n            severityColumnNames : eventDefinition.severityColumnNames,\n            severityType : eventDefinition.severityType,\n            filters : eventDefinition.filter\n        });\n    }\n\n    setFilter(filter) {\n        this.setState({\n            filters : filter\n        });\n    }\n\n    submitFilter() {\n        console.log(\"Submitting filters:\");\n        console.log( this.state.filters );\n\n        $(\"#loading\").show();\n\n        var submissionData = {\n            filterQuery : JSON.stringify(this.state.filters),\n            eventId : this.state.eventId,\n            eventName : this.state.eventName,\n            startBuffer : this.state.startBuffer,\n            stopBuffer : this.state.stopBuffer,\n            severityColumnNames : JSON.stringify(this.state.severityColumnNames),\n            severityType : this.state.severityType,\n            airframe : this.state.airframe\n        };   \n        console.log(submissionData);\n\n        $.ajax({\n            type: 'POST',\n            url: '/protected/update_event',\n            data : submissionData,\n            dataType : 'json',\n            success : function(response) {\n                console.log(\"received response: \");\n                console.log(response);\n\n                $(\"#loading\").hide();\n\n                if (response.errorTitle) {\n                    console.log(\"displaying error modal!\");\n                    errorModal.show(response.errorTitle, response.errorMessage);\n                    return false;\n                }\n\n                //createEventCard.setEvents(response);\n            },   \n            error : function(jqXHR, textStatus, errorThrown) {\n                errorModal.show(\"Error Loading Flights\", errorThrown);\n            },   \n            async: true \n        });  \n\n    }\n\n    render() {\n        let style = {\n            padding : 5\n        };\n\n        let formGroupStyle = {\n            marginBottom: '0px',\n            padding: '0 4 0 4'\n        };\n\n        let formHeaderStyle = {\n            width: '200px',\n            flex: '0 0 200px'\n        };\n\n        let labelStyle = {\n            padding : '7 0 7 0',\n            margin : '0',\n            display: 'block',\n            textAlign: 'right'\n        };\n\n        let bgStyle = {\n            background : \"rgba(248,259,250,0.8)\",\n            margin:0\n        };\n\n        let initialSelect = this.state.eventName + \" - \" + airframeMap[this.state.airframeNameId];\n        console.log(\"initial select: \" + initialSelect);\n\n        return (\n            <div className=\"card-body\" style={style}>\n\n                <div className=\"card mb-1\" style={bgStyle}>\n                    <h5 className=\"card-header\">\n                        Update Event\n                    </h5>\n\n                    <div className=\"form-group\" style={formGroupStyle}>\n                        <div className=\"d-flex\">\n                            <div className=\"p-2\" style={formHeaderStyle}>\n                                <label htmlFor=\"eventSelect\" style={labelStyle}>Select Event</label>\n                            </div>\n                            <div className=\"p-2 flex-fill\">\n\n                                <select id=\"eventSelect\" className=\"form-control\" onChange={(event) => this.changeSelectedEvent(event)} value={this.state.eventIndex}>\n                                    {\n                                        eventDefinitions.map((eventDefinition, index) => {\n                                            let fullName = eventDefinition.name + \" - \" + airframeMap[eventDefinition.airframeNameId];\n                                            return (\n                                                <option key={index} value={index}>{fullName}</option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n\n                    <EventDefinitionCard\n                        rules={rules}\n                        airframes={airframes}\n                        doubleTimeSeriesNames={doubleTimeSeriesNames}\n\n                        eventNameHidden={true}\n                        submitName={\"Update Event\"}\n                        eventName={this.state.eventName}\n                        airframe={this.state.airframe}\n                        startBuffer={this.state.startBuffer}\n                        stopBuffer={this.state.stopBuffer}\n                        severityColumn={this.state.severityColumn}\n                        severityColumnNames={this.state.severityColumnNames}\n                        severityType={this.state.severityType}\n                        filters={this.state.filters}\n\n                        getFilter={() => {return this.state.filters}}\n                        setFilter={(filter) => this.setFilter(filter)}\n\n                        submitFilter={() => this.submitFilter()}\n                        validateEventName={(event) => this.validateEventName(event)}\n                        validateAirframe={(event) => this.validateAirframe(event)}\n                        validateSeverityType={(event) => this.validateSeverityType(event)}\n                        changeSeverityColumn={(event) => this.changeSeverityColumn(event)}\n                        addSeverityColumn={() => this.addSeverityColumn()}\n                        removeSeverityColumn={(columnName) => this.removeSeverityColumn(columnName)}\n                        validateStartBuffer={(event) => this.validateStartBuffer(event)}\n                        validateStopBuffer={(event) => this.validateStopBuffer(event)}\n                    />\n\n                </div>\n            </div>\n        );\n    }\n}\n\nlet createEventCard = ReactDOM.render(\n    <UpdateEventCard />,\n    document.querySelector('#update-event-card')\n);\n"],"mappings":"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"}]}