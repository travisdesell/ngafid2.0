{"remainingRequest":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/ngafid/ngafid2.0/src/main/javascript/trace_buttons_component.js","dependencies":[{"path":"/ngafid/ngafid2.0/src/main/javascript/trace_buttons_component.js","mtime":1664810261290},{"path":"/ngafid/ngafid2.0/.babelrc","mtime":1664810261182},{"path":"/ngafid/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":1664910647113},{"path":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":1664910647213}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Plotly from 'plotly.js';\nimport { errorModal } from \"./error_modal.js\";\n\nvar TraceButtons = /*#__PURE__*/function (_React$Component) {\n  _inherits(TraceButtons, _React$Component);\n\n  var _super = _createSuper(TraceButtons);\n\n  function TraceButtons(props) {\n    var _this;\n\n    _classCallCheck(this, TraceButtons);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      parentFlight: _this.props.parentFlight\n    };\n    return _this;\n  }\n\n  _createClass(TraceButtons, [{\n    key: \"traceClicked\",\n    value: function traceClicked(seriesName) {\n      this.props.showPlot();\n      var parentFlight = this.state.parentFlight; //check to see if we've already loaded this time series\n\n      if (!(seriesName in parentFlight.state.traceIndex)) {\n        var thisTrace = this;\n        console.log(seriesName);\n        console.log(\"seriesName: \" + seriesName + \", flightId: \" + this.props.flightId);\n        var submissionData = {\n          flightId: this.props.flightId,\n          seriesName: seriesName\n        };\n        $.ajax({\n          type: 'POST',\n          url: '/protected/double_series',\n          data: submissionData,\n          dataType: 'json',\n          success: function success(response) {\n            console.log(\"received response: \");\n            console.log(response);\n            var trace = {\n              x: response.x,\n              y: response.y,\n              mode: \"lines\",\n              //marker : { size: 1},\n              name: thisTrace.props.flightId + \" - \" + seriesName\n            }; //set the trace number for this series\n\n            parentFlight.state.traceIndex[seriesName] = $(\"#plot\")[0].data.length;\n            parentFlight.state.traceVisibility[seriesName] = true;\n            parentFlight.setState(parentFlight.state);\n            Plotly.addTraces('plot', [trace]);\n          },\n          error: function error(jqXHR, textStatus, errorThrown) {\n            errorModal.show(\"Error Loading Flight Coordinates\", errorThrown);\n          },\n          async: true\n        });\n      } else {\n        //toggle visibility for this series\n        var visibility = !parentFlight.state.traceVisibility[seriesName];\n        parentFlight.state.traceVisibility[seriesName] = visibility;\n        parentFlight.setState(parentFlight.state);\n        console.log(\"toggled visibility to: \" + visibility);\n        Plotly.restyle('plot', {\n          visible: visibility\n        }, [parentFlight.state.traceIndex[seriesName]]);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var cellClasses = \"d-flex flex-row p-1\";\n      var cellStyle = {\n        \"overflowX\": \"auto\"\n      };\n      var buttonClasses = \"m-1 btn btn-outline-secondary\";\n      var styleButton = {\n        flex: \"0 0 10em\"\n      };\n      var parentFlight = this.state.parentFlight;\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"b\", {\n        className: \"p-1\",\n        style: {\n          marginBottom: \"0\"\n        }\n      }, \"Flight Parameters:\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: cellClasses,\n        style: cellStyle\n      }, parentFlight.state.commonTraceNames.map(function (traceName, index) {\n        var ariaPressed = parentFlight.state.traceVisibility[traceName];\n        var active = \"\";\n        if (ariaPressed) active = \" active\";\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: buttonClasses + active,\n          key: traceName,\n          style: styleButton,\n          \"data-toggle\": \"button\",\n          \"aria-pressed\": ariaPressed,\n          onClick: function onClick() {\n            return _this2.traceClicked(traceName);\n          }\n        }, traceName);\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: cellClasses,\n        style: cellStyle\n      }, parentFlight.state.uncommonTraceNames.map(function (traceName, index) {\n        var ariaPressed = parentFlight.state.traceVisibility[traceName];\n        var active = \"\";\n        if (ariaPressed) active = \" active\";\n        return /*#__PURE__*/React.createElement(\"button\", {\n          className: buttonClasses + active,\n          key: traceName,\n          style: styleButton,\n          \"data-toggle\": \"button\",\n          \"aria-pressed\": ariaPressed,\n          onClick: function onClick() {\n            return _this2.traceClicked(traceName);\n          }\n        }, traceName);\n      })));\n    }\n  }]);\n\n  return TraceButtons;\n}(React.Component);\n\nexport { TraceButtons };",{"version":3,"names":["React","Component","ReactDOM","Plotly","errorModal","TraceButtons","props","state","parentFlight","seriesName","showPlot","traceIndex","thisTrace","console","log","flightId","submissionData","$","ajax","type","url","data","dataType","success","response","trace","x","y","mode","name","length","traceVisibility","setState","addTraces","error","jqXHR","textStatus","errorThrown","show","async","visibility","restyle","visible","cellClasses","cellStyle","buttonClasses","styleButton","flex","marginBottom","commonTraceNames","map","traceName","index","ariaPressed","active","traceClicked","uncommonTraceNames"],"sources":["/ngafid/ngafid2.0/src/main/javascript/trace_buttons_component.js"],"sourcesContent":["import 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport Plotly from 'plotly.js';\nimport { errorModal } from \"./error_modal.js\";\n\nclass TraceButtons extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            parentFlight : this.props.parentFlight\n        };\n    }\n\n    traceClicked(seriesName) {\n        this.props.showPlot();\n\n        let parentFlight = this.state.parentFlight;\n\n        //check to see if we've already loaded this time series\n        if (!(seriesName in parentFlight.state.traceIndex)) {\n            var thisTrace = this;\n\n            console.log(seriesName);\n            console.log(\"seriesName: \" + seriesName + \", flightId: \" + this.props.flightId);\n\n            var submissionData = {\n                flightId : this.props.flightId,\n                seriesName : seriesName\n            };   \n\n            $.ajax({\n                type: 'POST',\n                url: '/protected/double_series',\n                data : submissionData,\n                dataType : 'json',\n                success : function(response) {\n                    console.log(\"received response: \");\n                    console.log(response);\n\n                    var trace = {\n                        x : response.x,\n                        y : response.y,\n                        mode : \"lines\",\n                        //marker : { size: 1},\n                        name : thisTrace.props.flightId + \" - \" + seriesName\n                    }\n\n                    //set the trace number for this series\n                    parentFlight.state.traceIndex[seriesName] = $(\"#plot\")[0].data.length;\n                    parentFlight.state.traceVisibility[seriesName] = true;\n                    parentFlight.setState(parentFlight.state);\n\n                    Plotly.addTraces('plot', [trace]);\n                },   \n                error : function(jqXHR, textStatus, errorThrown) {\n                    errorModal.show(\"Error Loading Flight Coordinates\", errorThrown);\n                },   \n                async: true \n            });  \n        } else {\n            //toggle visibility for this series\n            let visibility = !parentFlight.state.traceVisibility[seriesName];\n            parentFlight.state.traceVisibility[seriesName] = visibility;\n            parentFlight.setState(parentFlight.state);\n\n            console.log(\"toggled visibility to: \" + visibility);\n\n            Plotly.restyle('plot', { visible: visibility }, [ parentFlight.state.traceIndex[seriesName] ])\n        }\n    }\n\n    render() {\n        let cellClasses = \"d-flex flex-row p-1\";\n        let cellStyle = { \"overflowX\" : \"auto\" };\n        let buttonClasses = \"m-1 btn btn-outline-secondary\";\n        const styleButton = {\n            flex : \"0 0 10em\"\n        };\n\n        let parentFlight = this.state.parentFlight;\n\n        return (\n            <div>\n                <b className={\"p-1\"} style={{marginBottom:\"0\"}}>Flight Parameters:</b>\n                <div className={cellClasses} style={cellStyle}>\n                    {\n                        parentFlight.state.commonTraceNames.map((traceName, index) => {\n                            let ariaPressed = parentFlight.state.traceVisibility[traceName];\n                            let active = \"\";\n                            if (ariaPressed) active = \" active\";\n\n                            return (\n                                <button className={buttonClasses + active} key={traceName} style={styleButton} data-toggle=\"button\" aria-pressed={ariaPressed} onClick={() => this.traceClicked(traceName)}>\n                                    {traceName}\n                                </button>\n                            );\n                        })\n                    }\n                </div>\n                <div className={cellClasses} style={cellStyle}>\n                    {\n                        parentFlight.state.uncommonTraceNames.map((traceName, index) => {\n                            let ariaPressed = parentFlight.state.traceVisibility[traceName];\n                            let active = \"\";\n                            if (ariaPressed) active = \" active\";\n\n                            return (\n                                <button className={buttonClasses + active} key={traceName} style={styleButton} data-toggle=\"button\" aria-pressed={ariaPressed} onClick={() => this.traceClicked(traceName)}>\n                                    {traceName}\n                                </button>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport { TraceButtons };\n"],"mappings":"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"}]}