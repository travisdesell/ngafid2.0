{"remainingRequest":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js??ref--4-1!/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/update_profile.js","dependencies":[{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/src/main/javascript/update_profile.js","mtime":1589665823136},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/.babelrc","mtime":1589665823083},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/alabella/RIT/CSResearch/D2S2/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\nimport { navbar } from \"./signed_in_navbar.js\";\n\nvar ProfileCard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileCard, _React$Component);\n\n  function ProfileCard(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileCard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileCard).call(this, props));\n    _this.state = {\n      user: {\n        email: \"\"\n      },\n      valid: {\n        firstName: true,\n        lastName: true,\n        country: true,\n        state: true,\n        city: true,\n        address: true,\n        phone: true,\n        zip: true\n      }\n    };\n    _this.emailInput = React.createRef();\n    _this.firstNameInput = React.createRef();\n    _this.lastNameInput = React.createRef();\n    _this.countrySelect = React.createRef();\n    _this.stateSelect = React.createRef();\n    _this.cityInput = React.createRef();\n    _this.addressInput = React.createRef();\n    _this.phoneNumberInput = React.createRef();\n    _this.zipCodeInput = React.createRef();\n    return _this;\n  }\n\n  _createClass(ProfileCard, [{\n    key: \"setUser\",\n    value: function setUser(user) {\n      this.state.user = user;\n      this.emailInput.current.value = user.email;\n      this.firstNameInput.current.value = user.firstName;\n      this.lastNameInput.current.value = user.lastName;\n      this.countrySelect.current.value = user.country;\n      this.stateSelect.current.value = user.state;\n      this.cityInput.current.value = user.city;\n      this.addressInput.current.value = user.address;\n      this.phoneNumberInput.current.value = user.phoneNumber;\n      this.zipCodeInput.current.value = user.zipCode;\n      console.log(\"setting state!\");\n      this.setState(user);\n    }\n  }, {\n    key: \"submitAccount\",\n    value: function submitAccount(event) {\n      event.preventDefault();\n      var valid = true;\n\n      for (var property in this.state.valid) {\n        console.log(property);\n\n        if (property == false) {\n          valid = false;\n          break;\n        }\n      }\n\n      if (!valid) return;\n      var submissionData = {\n        email: this.emailInput.current.value,\n        firstName: this.firstNameInput.current.value,\n        lastName: this.lastNameInput.current.value,\n        country: this.countrySelect.current.value,\n        state: this.stateSelect.current.value,\n        city: this.cityInput.current.value,\n        address: this.addressInput.current.value,\n        phoneNumber: this.phoneNumberInput.current.value,\n        zipCode: this.zipCodeInput.current.value\n      };\n      $(\"#loading\").show();\n      $.ajax({\n        type: 'POST',\n        url: '/protected/update_profile',\n        data: submissionData,\n        dataType: 'json',\n        success: function success(response) {\n          console.log(\"received response: \");\n          console.log(response);\n          $(\"#loading\").hide();\n\n          if (response.errorTitle) {\n            console.log(\"displaying error modal!\");\n            errorModal.show(response.errorTitle, response.errorMessage);\n            return false;\n          }\n\n          profileCard.setUser(response.user);\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          errorModal.show(\"Error Submitting Account Information\", errorThrown);\n        },\n        async: true\n      });\n      console.log(\"submitting account!\");\n    }\n  }, {\n    key: \"validateFirstName\",\n    value: function validateFirstName() {\n      var firstName = this.firstNameInput.current.value;\n      this.state.valid.firstName = firstName.length < 64;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"validateLastName\",\n    value: function validateLastName() {\n      var lastName = this.lastNameInput.current.value;\n      this.state.valid.lastName = lastName.length < 64;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"validateCountry\",\n    value: function validateCountry() {\n      var country = this.countrySelect.current.value;\n      this.state.valid.country = country.length < 128;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"validateState\",\n    value: function validateState() {\n      var state = this.stateSelect.current.value;\n      this.state.valid.state = state.length < 64;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"validateCity\",\n    value: function validateCity() {\n      var city = this.cityInput.current.value;\n      this.state.valid.city = city.length < 64;\n      this.setState(this.city);\n    }\n  }, {\n    key: \"validateAddress\",\n    value: function validateAddress() {\n      var address = this.addressInput.current.value;\n      this.state.valid.address = address.length < 256;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"validatePhone\",\n    value: function validatePhone() {\n      var phone = this.phoneNumberInput.current.value;\n      console.log(\"phone: '\" + phone + \"'\");\n\n      if (phone == \"\") {\n        this.state.valid.phone = true;\n      } else {\n        var re = /^(\\+\\d{1,2}\\s)?\\(?\\d{3}\\)?[\\s.-]?\\d{3}[\\s.-]?\\d{4}$/;\n        this.state.valid.phone = re.test(phone) && phone.length < 24;\n      }\n\n      this.setState(this.state);\n    }\n  }, {\n    key: \"validateZip\",\n    value: function validateZip() {\n      var zip = this.zipCodeInput.current.value;\n      console.log(\"zip: '\" + zip + \"'\");\n\n      if (zip == \"\") {\n        this.state.valid.zip = true;\n      } else {\n        var re = /^\\d{5}(?:[-\\s]\\d{4})?$/;\n        this.state.valid.zip = re.test(zip) && zip.length < 16;\n      }\n\n      this.setState(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hidden = this.props.hidden;\n      var bgStyle = {\n        opacity: 0.8\n      };\n      var fgStyle = {\n        opacity: 1.0\n      };\n      var formGroupStyle = {\n        marginBottom: '8px'\n      };\n      var formHeaderStyle = {\n        width: '150px',\n        flex: '0 0 150px'\n      };\n      var labelStyle = {\n        padding: '7 0 7 0',\n        margin: '0',\n        display: 'block',\n        textAlign: 'right'\n      };\n      var validationMessageStyle = {\n        padding: '7 0 7 0',\n        margin: '0',\n        display: 'block',\n        textAlign: 'left',\n        color: 'red'\n      };\n      var profileValidationMessage = \"\";\n      var profileValidationHidden = true;\n      var updateProfileDisabled = true;\n      var firstNameVal = \"\";\n      if (this.firstNameInput.current != null) firstNameVal = this.firstNameInput.current.value;\n      var lastNameVal = \"\";\n      if (this.lastNameInput.current != null) lastNameVal = this.lastNameInput.current.value;\n      var countrySelectVal = \"\";\n      if (this.countrySelect.current != null) countrySelectVal = this.countrySelect.current.value;\n      var stateSelectVal = \"\";\n      if (this.stateSelect.current != null) stateSelectVal = this.stateSelect.current.value;\n      var cityInputVal = \"\";\n      if (this.cityInput.current != null) cityInputVal = this.cityInput.current.value;\n      var addressVal = \"\";\n      if (this.addressInput.current != null) addressVal = this.addressInput.current.value;\n      var zipCodeVal = \"\";\n      if (this.zipCodeInput.current != null) zipCodeVal = this.zipCodeInput.current.value;\n      var phoneNumberVal = \"\";\n      if (this.phoneNumberInput.current != null) phoneNumberVal = this.phoneNumberInput.current.value; //check and see if any fields have been modified\n\n      if (firstNameVal != this.state.user.firstName) {\n        console.log(\"first names different! '\" + firstNameVal + \"' vs '\" + this.state.user.firstName + \"'\");\n        updateProfileDisabled = false;\n      } else if (lastNameVal != this.state.user.lastName) {\n        console.log(\"last names different! '\" + lastNameVal + \"' vs '\" + this.state.user.lastName + \"'\");\n        updateProfileDisabled = false;\n      } else if (countrySelectVal != this.state.user.country) {\n        console.log(\"countries different!\");\n        updateProfileDisabled = false;\n      } else if (stateSelectVal != this.state.user.state) {\n        console.log(\"states different!\");\n        updateProfileDisabled = false;\n      } else if (cityInputVal != this.state.user.city) {\n        console.log(\"city different!\");\n        updateProfileDisabled = false;\n      } else if (addressVal != this.state.user.address) {\n        console.log(\"address different!\");\n        updateProfileDisabled = false;\n      } else if (zipCodeVal != this.state.user.zipCode) {\n        console.log(\"zip code different!\");\n        updateProfileDisabled = false;\n      } else if (phoneNumberVal != this.state.user.phoneNumber) {\n        console.log(\"phone number different!\");\n        updateProfileDisabled = false;\n      } //check to see if all entries are valid\n\n\n      if (!this.state.valid.firstName) {\n        profileValidationMessage = \"First name cannot be more than 64 characters.\";\n        profileValidationHidden = false;\n      } else if (!this.state.valid.lastName) {\n        profileValidationMessage = \"Last name cannot be more than 64 characters.\";\n        profileVvalidationHidden = false;\n      } else if (!this.state.valid.country) {\n        profileValidationMessage = \"Country cannot be more than 128 characters.\";\n        profileValidationHidden = false;\n      } else if (!this.state.valid.state) {\n        profileValidationMessage = \"State cannot be more than 64 characters.\";\n        profileValidationHidden = false;\n      } else if (!this.state.valid.city) {\n        profileValidationMessage = \"City cannot be more than 64 characters.\";\n        profileValidationHidden = false;\n      } else if (!this.state.valid.address) {\n        profileValidationMessage = \"Address cannot be more than 256 characters.\";\n        profileValidationHidden = false;\n      } else if (!this.state.valid.phone) {\n        profileValidationMessage = \"Phone number was not a valid phone number. Must include area code, with optional country code.\";\n        profileValidationHidden = false;\n      } else if (!this.state.valid.zip) {\n        profileValidationMessage = \"Zip code was not valid, please use either a #####, #####-#### or ##### #### format.\";\n        profileValidationHidden = false;\n      }\n\n      console.log(\"updateProfileDisabled: \" + updateProfileDisabled + \" || \" + !profileValidationHidden);\n      updateProfileDisabled = updateProfileDisabled || !profileValidationHidden;\n      console.log(\"rendering with profile validation message: '\" + profileValidationMessage + \"' and profile validation visible: \" + profileValidationHidden);\n      return React.createElement(\"div\", {\n        className: \"card-body\",\n        hidden: hidden\n      }, React.createElement(\"div\", {\n        className: \"card mb-1\",\n        style: bgStyle\n      }, React.createElement(\"h5\", {\n        className: \"card-header\",\n        style: fgStyle\n      }, \"Update Profile\"), React.createElement(\"div\", {\n        className: \"card-body\",\n        style: fgStyle\n      }, React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this2.submitAccount(event);\n        }\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, React.createElement(\"label\", {\n        htmlFor: \"createEmail\",\n        style: labelStyle\n      }, \"Email address\")), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"input\", {\n        type: \"email\",\n        ref: this.emailInput,\n        className: \"form-control\",\n        id: \"createEmail\",\n        \"aria-describedby\": \"emailHelp\",\n        readOnly: true,\n        value: this.state.user.email\n      })))), React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, React.createElement(\"label\", {\n        htmlFor: \"createFirstName\",\n        style: labelStyle\n      }, \"First Name\")), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: this.firstNameInput,\n        className: \"form-control\",\n        id: \"createFirstName\",\n        \"aria-describedby\": \"firstNameHelp\",\n        placeholder: \"Enter first name\",\n        onChange: function onChange() {\n          return _this2.validateFirstName();\n        }\n      })))), React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, React.createElement(\"label\", {\n        htmlFor: \"createLastName\",\n        style: labelStyle\n      }, \"Last Name\")), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: this.lastNameInput,\n        className: \"form-control\",\n        id: \"createLastName\",\n        \"aria-describedby\": \"lastNameHelp\",\n        placeholder: \"Enter last name\",\n        onChange: function onChange() {\n          return _this2.validateLastName();\n        }\n      })))), React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, React.createElement(\"label\", {\n        htmlFor: \"countrySelect\",\n        style: labelStyle\n      }, \"Country\")), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"select\", {\n        id: \"countrySelect\",\n        ref: this.countrySelect,\n        className: \"form-control\",\n        onChange: function onChange() {\n          return _this2.validateCountry();\n        }\n      }, React.createElement(\"option\", {\n        value: \"NONE\"\n      }), React.createElement(\"option\", {\n        value: \"AFG\"\n      }, \"Afghanistan\"), React.createElement(\"option\", {\n        value: \"ALA\"\n      }, \"\\xC5land Islands\"), React.createElement(\"option\", {\n        value: \"ALB\"\n      }, \"Albania\"), React.createElement(\"option\", {\n        value: \"DZA\"\n      }, \"Algeria\"), React.createElement(\"option\", {\n        value: \"ASM\"\n      }, \"American Samoa\"), React.createElement(\"option\", {\n        value: \"AND\"\n      }, \"Andorra\"), React.createElement(\"option\", {\n        value: \"AGO\"\n      }, \"Angola\"), React.createElement(\"option\", {\n        value: \"AIA\"\n      }, \"Anguilla\"), React.createElement(\"option\", {\n        value: \"ATA\"\n      }, \"Antarctica\"), React.createElement(\"option\", {\n        value: \"ATG\"\n      }, \"Antigua and Barbuda\"), React.createElement(\"option\", {\n        value: \"ARG\"\n      }, \"Argentina\"), React.createElement(\"option\", {\n        value: \"ARM\"\n      }, \"Armenia\"), React.createElement(\"option\", {\n        value: \"ABW\"\n      }, \"Aruba\"), React.createElement(\"option\", {\n        value: \"AUS\"\n      }, \"Australia\"), React.createElement(\"option\", {\n        value: \"AUT\"\n      }, \"Austria\"), React.createElement(\"option\", {\n        value: \"AZE\"\n      }, \"Azerbaijan\"), React.createElement(\"option\", {\n        value: \"BHS\"\n      }, \"Bahamas\"), React.createElement(\"option\", {\n        value: \"BHR\"\n      }, \"Bahrain\"), React.createElement(\"option\", {\n        value: \"BGD\"\n      }, \"Bangladesh\"), React.createElement(\"option\", {\n        value: \"BRB\"\n      }, \"Barbados\"), React.createElement(\"option\", {\n        value: \"BLR\"\n      }, \"Belarus\"), React.createElement(\"option\", {\n        value: \"BEL\"\n      }, \"Belgium\"), React.createElement(\"option\", {\n        value: \"BLZ\"\n      }, \"Belize\"), React.createElement(\"option\", {\n        value: \"BEN\"\n      }, \"Benin\"), React.createElement(\"option\", {\n        value: \"BMU\"\n      }, \"Bermuda\"), React.createElement(\"option\", {\n        value: \"BTN\"\n      }, \"Bhutan\"), React.createElement(\"option\", {\n        value: \"BOL\"\n      }, \"Bolivia, Plurinational State of\"), React.createElement(\"option\", {\n        value: \"BES\"\n      }, \"Bonaire, Sint Eustatius and Saba\"), React.createElement(\"option\", {\n        value: \"BIH\"\n      }, \"Bosnia and Herzegovina\"), React.createElement(\"option\", {\n        value: \"BWA\"\n      }, \"Botswana\"), React.createElement(\"option\", {\n        value: \"BVT\"\n      }, \"Bouvet Island\"), React.createElement(\"option\", {\n        value: \"BRA\"\n      }, \"Brazil\"), React.createElement(\"option\", {\n        value: \"IOT\"\n      }, \"British Indian Ocean Territory\"), React.createElement(\"option\", {\n        value: \"BRN\"\n      }, \"Brunei Darussalam\"), React.createElement(\"option\", {\n        value: \"BGR\"\n      }, \"Bulgaria\"), React.createElement(\"option\", {\n        value: \"BFA\"\n      }, \"Burkina Faso\"), React.createElement(\"option\", {\n        value: \"BDI\"\n      }, \"Burundi\"), React.createElement(\"option\", {\n        value: \"KHM\"\n      }, \"Cambodia\"), React.createElement(\"option\", {\n        value: \"CMR\"\n      }, \"Cameroon\"), React.createElement(\"option\", {\n        value: \"CAN\"\n      }, \"Canada\"), React.createElement(\"option\", {\n        value: \"CPV\"\n      }, \"Cape Verde\"), React.createElement(\"option\", {\n        value: \"CYM\"\n      }, \"Cayman Islands\"), React.createElement(\"option\", {\n        value: \"CAF\"\n      }, \"Central African Republic\"), React.createElement(\"option\", {\n        value: \"TCD\"\n      }, \"Chad\"), React.createElement(\"option\", {\n        value: \"CHL\"\n      }, \"Chile\"), React.createElement(\"option\", {\n        value: \"CHN\"\n      }, \"China\"), React.createElement(\"option\", {\n        value: \"CXR\"\n      }, \"Christmas Island\"), React.createElement(\"option\", {\n        value: \"CCK\"\n      }, \"Cocos (Keeling) Islands\"), React.createElement(\"option\", {\n        value: \"COL\"\n      }, \"Colombia\"), React.createElement(\"option\", {\n        value: \"COM\"\n      }, \"Comoros\"), React.createElement(\"option\", {\n        value: \"COG\"\n      }, \"Congo\"), React.createElement(\"option\", {\n        value: \"COD\"\n      }, \"Congo, the Democratic Republic of the\"), React.createElement(\"option\", {\n        value: \"COK\"\n      }, \"Cook Islands\"), React.createElement(\"option\", {\n        value: \"CRI\"\n      }, \"Costa Rica\"), React.createElement(\"option\", {\n        value: \"CIV\"\n      }, \"C\\xF4te d'Ivoire\"), React.createElement(\"option\", {\n        value: \"HRV\"\n      }, \"Croatia\"), React.createElement(\"option\", {\n        value: \"CUB\"\n      }, \"Cuba\"), React.createElement(\"option\", {\n        value: \"CUW\"\n      }, \"Cura\\xE7ao\"), React.createElement(\"option\", {\n        value: \"CYP\"\n      }, \"Cyprus\"), React.createElement(\"option\", {\n        value: \"CZE\"\n      }, \"Czech Republic\"), React.createElement(\"option\", {\n        value: \"DNK\"\n      }, \"Denmark\"), React.createElement(\"option\", {\n        value: \"DJI\"\n      }, \"Djibouti\"), React.createElement(\"option\", {\n        value: \"DMA\"\n      }, \"Dominica\"), React.createElement(\"option\", {\n        value: \"DOM\"\n      }, \"Dominican Republic\"), React.createElement(\"option\", {\n        value: \"ECU\"\n      }, \"Ecuador\"), React.createElement(\"option\", {\n        value: \"EGY\"\n      }, \"Egypt\"), React.createElement(\"option\", {\n        value: \"SLV\"\n      }, \"El Salvador\"), React.createElement(\"option\", {\n        value: \"GNQ\"\n      }, \"Equatorial Guinea\"), React.createElement(\"option\", {\n        value: \"ERI\"\n      }, \"Eritrea\"), React.createElement(\"option\", {\n        value: \"EST\"\n      }, \"Estonia\"), React.createElement(\"option\", {\n        value: \"ETH\"\n      }, \"Ethiopia\"), React.createElement(\"option\", {\n        value: \"FLK\"\n      }, \"Falkland Islands (Malvinas)\"), React.createElement(\"option\", {\n        value: \"FRO\"\n      }, \"Faroe Islands\"), React.createElement(\"option\", {\n        value: \"FJI\"\n      }, \"Fiji\"), React.createElement(\"option\", {\n        value: \"FIN\"\n      }, \"Finland\"), React.createElement(\"option\", {\n        value: \"FRA\"\n      }, \"France\"), React.createElement(\"option\", {\n        value: \"GUF\"\n      }, \"French Guiana\"), React.createElement(\"option\", {\n        value: \"PYF\"\n      }, \"French Polynesia\"), React.createElement(\"option\", {\n        value: \"ATF\"\n      }, \"French Southern Territories\"), React.createElement(\"option\", {\n        value: \"GAB\"\n      }, \"Gabon\"), React.createElement(\"option\", {\n        value: \"GMB\"\n      }, \"Gambia\"), React.createElement(\"option\", {\n        value: \"GEO\"\n      }, \"Georgia\"), React.createElement(\"option\", {\n        value: \"DEU\"\n      }, \"Germany\"), React.createElement(\"option\", {\n        value: \"GHA\"\n      }, \"Ghana\"), React.createElement(\"option\", {\n        value: \"GIB\"\n      }, \"Gibraltar\"), React.createElement(\"option\", {\n        value: \"GRC\"\n      }, \"Greece\"), React.createElement(\"option\", {\n        value: \"GRL\"\n      }, \"Greenland\"), React.createElement(\"option\", {\n        value: \"GRD\"\n      }, \"Grenada\"), React.createElement(\"option\", {\n        value: \"GLP\"\n      }, \"Guadeloupe\"), React.createElement(\"option\", {\n        value: \"GUM\"\n      }, \"Guam\"), React.createElement(\"option\", {\n        value: \"GTM\"\n      }, \"Guatemala\"), React.createElement(\"option\", {\n        value: \"GGY\"\n      }, \"Guernsey\"), React.createElement(\"option\", {\n        value: \"GIN\"\n      }, \"Guinea\"), React.createElement(\"option\", {\n        value: \"GNB\"\n      }, \"Guinea-Bissau\"), React.createElement(\"option\", {\n        value: \"GUY\"\n      }, \"Guyana\"), React.createElement(\"option\", {\n        value: \"HTI\"\n      }, \"Haiti\"), React.createElement(\"option\", {\n        value: \"HMD\"\n      }, \"Heard Island and McDonald Islands\"), React.createElement(\"option\", {\n        value: \"VAT\"\n      }, \"Holy See (Vatican City State)\"), React.createElement(\"option\", {\n        value: \"HND\"\n      }, \"Honduras\"), React.createElement(\"option\", {\n        value: \"HKG\"\n      }, \"Hong Kong\"), React.createElement(\"option\", {\n        value: \"HUN\"\n      }, \"Hungary\"), React.createElement(\"option\", {\n        value: \"ISL\"\n      }, \"Iceland\"), React.createElement(\"option\", {\n        value: \"IND\"\n      }, \"India\"), React.createElement(\"option\", {\n        value: \"IDN\"\n      }, \"Indonesia\"), React.createElement(\"option\", {\n        value: \"IRN\"\n      }, \"Iran, Islamic Republic of\"), React.createElement(\"option\", {\n        value: \"IRQ\"\n      }, \"Iraq\"), React.createElement(\"option\", {\n        value: \"IRL\"\n      }, \"Ireland\"), React.createElement(\"option\", {\n        value: \"IMN\"\n      }, \"Isle of Man\"), React.createElement(\"option\", {\n        value: \"ISR\"\n      }, \"Israel\"), React.createElement(\"option\", {\n        value: \"ITA\"\n      }, \"Italy\"), React.createElement(\"option\", {\n        value: \"JAM\"\n      }, \"Jamaica\"), React.createElement(\"option\", {\n        value: \"JPN\"\n      }, \"Japan\"), React.createElement(\"option\", {\n        value: \"JEY\"\n      }, \"Jersey\"), React.createElement(\"option\", {\n        value: \"JOR\"\n      }, \"Jordan\"), React.createElement(\"option\", {\n        value: \"KAZ\"\n      }, \"Kazakhstan\"), React.createElement(\"option\", {\n        value: \"KEN\"\n      }, \"Kenya\"), React.createElement(\"option\", {\n        value: \"KIR\"\n      }, \"Kiribati\"), React.createElement(\"option\", {\n        value: \"PRK\"\n      }, \"Korea, Democratic People's Republic of\"), React.createElement(\"option\", {\n        value: \"KOR\"\n      }, \"Korea, Republic of\"), React.createElement(\"option\", {\n        value: \"KWT\"\n      }, \"Kuwait\"), React.createElement(\"option\", {\n        value: \"KGZ\"\n      }, \"Kyrgyzstan\"), React.createElement(\"option\", {\n        value: \"LAO\"\n      }, \"Lao People's Democratic Republic\"), React.createElement(\"option\", {\n        value: \"LVA\"\n      }, \"Latvia\"), React.createElement(\"option\", {\n        value: \"LBN\"\n      }, \"Lebanon\"), React.createElement(\"option\", {\n        value: \"LSO\"\n      }, \"Lesotho\"), React.createElement(\"option\", {\n        value: \"LBR\"\n      }, \"Liberia\"), React.createElement(\"option\", {\n        value: \"LBY\"\n      }, \"Libya\"), React.createElement(\"option\", {\n        value: \"LIE\"\n      }, \"Liechtenstein\"), React.createElement(\"option\", {\n        value: \"LTU\"\n      }, \"Lithuania\"), React.createElement(\"option\", {\n        value: \"LUX\"\n      }, \"Luxembourg\"), React.createElement(\"option\", {\n        value: \"MAC\"\n      }, \"Macao\"), React.createElement(\"option\", {\n        value: \"MKD\"\n      }, \"Macedonia, the former Yugoslav Republic of\"), React.createElement(\"option\", {\n        value: \"MDG\"\n      }, \"Madagascar\"), React.createElement(\"option\", {\n        value: \"MWI\"\n      }, \"Malawi\"), React.createElement(\"option\", {\n        value: \"MYS\"\n      }, \"Malaysia\"), React.createElement(\"option\", {\n        value: \"MDV\"\n      }, \"Maldives\"), React.createElement(\"option\", {\n        value: \"MLI\"\n      }, \"Mali\"), React.createElement(\"option\", {\n        value: \"MLT\"\n      }, \"Malta\"), React.createElement(\"option\", {\n        value: \"MHL\"\n      }, \"Marshall Islands\"), React.createElement(\"option\", {\n        value: \"MTQ\"\n      }, \"Martinique\"), React.createElement(\"option\", {\n        value: \"MRT\"\n      }, \"Mauritania\"), React.createElement(\"option\", {\n        value: \"MUS\"\n      }, \"Mauritius\"), React.createElement(\"option\", {\n        value: \"MYT\"\n      }, \"Mayotte\"), React.createElement(\"option\", {\n        value: \"MEX\"\n      }, \"Mexico\"), React.createElement(\"option\", {\n        value: \"FSM\"\n      }, \"Micronesia, Federated States of\"), React.createElement(\"option\", {\n        value: \"MDA\"\n      }, \"Moldova, Republic of\"), React.createElement(\"option\", {\n        value: \"MCO\"\n      }, \"Monaco\"), React.createElement(\"option\", {\n        value: \"MNG\"\n      }, \"Mongolia\"), React.createElement(\"option\", {\n        value: \"MNE\"\n      }, \"Montenegro\"), React.createElement(\"option\", {\n        value: \"MSR\"\n      }, \"Montserrat\"), React.createElement(\"option\", {\n        value: \"MAR\"\n      }, \"Morocco\"), React.createElement(\"option\", {\n        value: \"MOZ\"\n      }, \"Mozambique\"), React.createElement(\"option\", {\n        value: \"MMR\"\n      }, \"Myanmar\"), React.createElement(\"option\", {\n        value: \"NAM\"\n      }, \"Namibia\"), React.createElement(\"option\", {\n        value: \"NRU\"\n      }, \"Nauru\"), React.createElement(\"option\", {\n        value: \"NPL\"\n      }, \"Nepal\"), React.createElement(\"option\", {\n        value: \"NLD\"\n      }, \"Netherlands\"), React.createElement(\"option\", {\n        value: \"NCL\"\n      }, \"New Caledonia\"), React.createElement(\"option\", {\n        value: \"NZL\"\n      }, \"New Zealand\"), React.createElement(\"option\", {\n        value: \"NIC\"\n      }, \"Nicaragua\"), React.createElement(\"option\", {\n        value: \"NER\"\n      }, \"Niger\"), React.createElement(\"option\", {\n        value: \"NGA\"\n      }, \"Nigeria\"), React.createElement(\"option\", {\n        value: \"NIU\"\n      }, \"Niue\"), React.createElement(\"option\", {\n        value: \"NFK\"\n      }, \"Norfolk Island\"), React.createElement(\"option\", {\n        value: \"MNP\"\n      }, \"Northern Mariana Islands\"), React.createElement(\"option\", {\n        value: \"NOR\"\n      }, \"Norway\"), React.createElement(\"option\", {\n        value: \"OMN\"\n      }, \"Oman\"), React.createElement(\"option\", {\n        value: \"PAK\"\n      }, \"Pakistan\"), React.createElement(\"option\", {\n        value: \"PLW\"\n      }, \"Palau\"), React.createElement(\"option\", {\n        value: \"PSE\"\n      }, \"Palestinian Territory, Occupied\"), React.createElement(\"option\", {\n        value: \"PAN\"\n      }, \"Panama\"), React.createElement(\"option\", {\n        value: \"PNG\"\n      }, \"Papua New Guinea\"), React.createElement(\"option\", {\n        value: \"PRY\"\n      }, \"Paraguay\"), React.createElement(\"option\", {\n        value: \"PER\"\n      }, \"Peru\"), React.createElement(\"option\", {\n        value: \"PHL\"\n      }, \"Philippines\"), React.createElement(\"option\", {\n        value: \"PCN\"\n      }, \"Pitcairn\"), React.createElement(\"option\", {\n        value: \"POL\"\n      }, \"Poland\"), React.createElement(\"option\", {\n        value: \"PRT\"\n      }, \"Portugal\"), React.createElement(\"option\", {\n        value: \"PRI\"\n      }, \"Puerto Rico\"), React.createElement(\"option\", {\n        value: \"QAT\"\n      }, \"Qatar\"), React.createElement(\"option\", {\n        value: \"REU\"\n      }, \"R\\xE9union\"), React.createElement(\"option\", {\n        value: \"ROU\"\n      }, \"Romania\"), React.createElement(\"option\", {\n        value: \"RUS\"\n      }, \"Russian Federation\"), React.createElement(\"option\", {\n        value: \"RWA\"\n      }, \"Rwanda\"), React.createElement(\"option\", {\n        value: \"BLM\"\n      }, \"Saint Barth\\xE9lemy\"), React.createElement(\"option\", {\n        value: \"SHN\"\n      }, \"Saint Helena, Ascension and Tristan da Cunha\"), React.createElement(\"option\", {\n        value: \"KNA\"\n      }, \"Saint Kitts and Nevis\"), React.createElement(\"option\", {\n        value: \"LCA\"\n      }, \"Saint Lucia\"), React.createElement(\"option\", {\n        value: \"MAF\"\n      }, \"Saint Martin (French part)\"), React.createElement(\"option\", {\n        value: \"SPM\"\n      }, \"Saint Pierre and Miquelon\"), React.createElement(\"option\", {\n        value: \"VCT\"\n      }, \"Saint Vincent and the Grenadines\"), React.createElement(\"option\", {\n        value: \"WSM\"\n      }, \"Samoa\"), React.createElement(\"option\", {\n        value: \"SMR\"\n      }, \"San Marino\"), React.createElement(\"option\", {\n        value: \"STP\"\n      }, \"Sao Tome and Principe\"), React.createElement(\"option\", {\n        value: \"SAU\"\n      }, \"Saudi Arabia\"), React.createElement(\"option\", {\n        value: \"SEN\"\n      }, \"Senegal\"), React.createElement(\"option\", {\n        value: \"SRB\"\n      }, \"Serbia\"), React.createElement(\"option\", {\n        value: \"SYC\"\n      }, \"Seychelles\"), React.createElement(\"option\", {\n        value: \"SLE\"\n      }, \"Sierra Leone\"), React.createElement(\"option\", {\n        value: \"SGP\"\n      }, \"Singapore\"), React.createElement(\"option\", {\n        value: \"SXM\"\n      }, \"Sint Maarten (Dutch part)\"), React.createElement(\"option\", {\n        value: \"SVK\"\n      }, \"Slovakia\"), React.createElement(\"option\", {\n        value: \"SVN\"\n      }, \"Slovenia\"), React.createElement(\"option\", {\n        value: \"SLB\"\n      }, \"Solomon Islands\"), React.createElement(\"option\", {\n        value: \"SOM\"\n      }, \"Somalia\"), React.createElement(\"option\", {\n        value: \"ZAF\"\n      }, \"South Africa\"), React.createElement(\"option\", {\n        value: \"SGS\"\n      }, \"South Georgia and the South Sandwich Islands\"), React.createElement(\"option\", {\n        value: \"SSD\"\n      }, \"South Sudan\"), React.createElement(\"option\", {\n        value: \"ESP\"\n      }, \"Spain\"), React.createElement(\"option\", {\n        value: \"LKA\"\n      }, \"Sri Lanka\"), React.createElement(\"option\", {\n        value: \"SDN\"\n      }, \"Sudan\"), React.createElement(\"option\", {\n        value: \"SUR\"\n      }, \"Suriname\"), React.createElement(\"option\", {\n        value: \"SJM\"\n      }, \"Svalbard and Jan Mayen\"), React.createElement(\"option\", {\n        value: \"SWZ\"\n      }, \"Swaziland\"), React.createElement(\"option\", {\n        value: \"SWE\"\n      }, \"Sweden\"), React.createElement(\"option\", {\n        value: \"CHE\"\n      }, \"Switzerland\"), React.createElement(\"option\", {\n        value: \"SYR\"\n      }, \"Syrian Arab Republic\"), React.createElement(\"option\", {\n        value: \"TWN\"\n      }, \"Taiwan, Province of China\"), React.createElement(\"option\", {\n        value: \"TJK\"\n      }, \"Tajikistan\"), React.createElement(\"option\", {\n        value: \"TZA\"\n      }, \"Tanzania, United Republic of\"), React.createElement(\"option\", {\n        value: \"THA\"\n      }, \"Thailand\"), React.createElement(\"option\", {\n        value: \"TLS\"\n      }, \"Timor-Leste\"), React.createElement(\"option\", {\n        value: \"TGO\"\n      }, \"Togo\"), React.createElement(\"option\", {\n        value: \"TKL\"\n      }, \"Tokelau\"), React.createElement(\"option\", {\n        value: \"TON\"\n      }, \"Tonga\"), React.createElement(\"option\", {\n        value: \"TTO\"\n      }, \"Trinidad and Tobago\"), React.createElement(\"option\", {\n        value: \"TUN\"\n      }, \"Tunisia\"), React.createElement(\"option\", {\n        value: \"TUR\"\n      }, \"Turkey\"), React.createElement(\"option\", {\n        value: \"TKM\"\n      }, \"Turkmenistan\"), React.createElement(\"option\", {\n        value: \"TCA\"\n      }, \"Turks and Caicos Islands\"), React.createElement(\"option\", {\n        value: \"TUV\"\n      }, \"Tuvalu\"), React.createElement(\"option\", {\n        value: \"UGA\"\n      }, \"Uganda\"), React.createElement(\"option\", {\n        value: \"UKR\"\n      }, \"Ukraine\"), React.createElement(\"option\", {\n        value: \"ARE\"\n      }, \"United Arab Emirates\"), React.createElement(\"option\", {\n        value: \"GBR\"\n      }, \"United Kingdom\"), React.createElement(\"option\", {\n        value: \"USA\"\n      }, \"United States\"), React.createElement(\"option\", {\n        value: \"UMI\"\n      }, \"United States Minor Outlying Islands\"), React.createElement(\"option\", {\n        value: \"URY\"\n      }, \"Uruguay\"), React.createElement(\"option\", {\n        value: \"UZB\"\n      }, \"Uzbekistan\"), React.createElement(\"option\", {\n        value: \"VUT\"\n      }, \"Vanuatu\"), React.createElement(\"option\", {\n        value: \"VEN\"\n      }, \"Venezuela, Bolivarian Republic of\"), React.createElement(\"option\", {\n        value: \"VNM\"\n      }, \"Viet Nam\"), React.createElement(\"option\", {\n        value: \"VGB\"\n      }, \"Virgin Islands, British\"), React.createElement(\"option\", {\n        value: \"VIR\"\n      }, \"Virgin Islands, U.S.\"), React.createElement(\"option\", {\n        value: \"WLF\"\n      }, \"Wallis and Futuna\"), React.createElement(\"option\", {\n        value: \"ESH\"\n      }, \"Western Sahara\"), React.createElement(\"option\", {\n        value: \"YEM\"\n      }, \"Yemen\"), React.createElement(\"option\", {\n        value: \"ZMB\"\n      }, \"Zambia\"), React.createElement(\"option\", {\n        value: \"ZWE\"\n      }, \"Zimbabwe\"))))), React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, React.createElement(\"label\", {\n        htmlFor: \"stateSelect\",\n        style: labelStyle\n      }, \"State\")), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"select\", {\n        id: \"stateSelect\",\n        ref: this.stateSelect,\n        className: \"form-control\",\n        onChange: function onChange() {\n          return _this2.validateState();\n        }\n      }, React.createElement(\"option\", {\n        value: \"NONE\"\n      }), React.createElement(\"option\", {\n        value: \"AL\"\n      }, \"Alabama\"), React.createElement(\"option\", {\n        value: \"AK\"\n      }, \"Alaska\"), React.createElement(\"option\", {\n        value: \"AZ\"\n      }, \"Arizona\"), React.createElement(\"option\", {\n        value: \"AR\"\n      }, \"Arkansas\"), React.createElement(\"option\", {\n        value: \"CA\"\n      }, \"California\"), React.createElement(\"option\", {\n        value: \"CO\"\n      }, \"Colorado\"), React.createElement(\"option\", {\n        value: \"CT\"\n      }, \"Connecticut\"), React.createElement(\"option\", {\n        value: \"DE\"\n      }, \"Delaware\"), React.createElement(\"option\", {\n        value: \"DC\"\n      }, \"District Of Columbia\"), React.createElement(\"option\", {\n        value: \"FL\"\n      }, \"Florida\"), React.createElement(\"option\", {\n        value: \"GA\"\n      }, \"Georgia\"), React.createElement(\"option\", {\n        value: \"HI\"\n      }, \"Hawaii\"), React.createElement(\"option\", {\n        value: \"ID\"\n      }, \"Idaho\"), React.createElement(\"option\", {\n        value: \"IL\"\n      }, \"Illinois\"), React.createElement(\"option\", {\n        value: \"IN\"\n      }, \"Indiana\"), React.createElement(\"option\", {\n        value: \"IA\"\n      }, \"Iowa\"), React.createElement(\"option\", {\n        value: \"KS\"\n      }, \"Kansas\"), React.createElement(\"option\", {\n        value: \"KY\"\n      }, \"Kentucky\"), React.createElement(\"option\", {\n        value: \"LA\"\n      }, \"Louisiana\"), React.createElement(\"option\", {\n        value: \"ME\"\n      }, \"Maine\"), React.createElement(\"option\", {\n        value: \"MD\"\n      }, \"Maryland\"), React.createElement(\"option\", {\n        value: \"MA\"\n      }, \"Massachusetts\"), React.createElement(\"option\", {\n        value: \"MI\"\n      }, \"Michigan\"), React.createElement(\"option\", {\n        value: \"MN\"\n      }, \"Minnesota\"), React.createElement(\"option\", {\n        value: \"MS\"\n      }, \"Mississippi\"), React.createElement(\"option\", {\n        value: \"MO\"\n      }, \"Missouri\"), React.createElement(\"option\", {\n        value: \"MT\"\n      }, \"Montana\"), React.createElement(\"option\", {\n        value: \"NE\"\n      }, \"Nebraska\"), React.createElement(\"option\", {\n        value: \"NV\"\n      }, \"Nevada\"), React.createElement(\"option\", {\n        value: \"NH\"\n      }, \"New Hampshire\"), React.createElement(\"option\", {\n        value: \"NJ\"\n      }, \"New Jersey\"), React.createElement(\"option\", {\n        value: \"NM\"\n      }, \"New Mexico\"), React.createElement(\"option\", {\n        value: \"NY\"\n      }, \"New York\"), React.createElement(\"option\", {\n        value: \"NC\"\n      }, \"North Carolina\"), React.createElement(\"option\", {\n        value: \"ND\"\n      }, \"North Dakota\"), React.createElement(\"option\", {\n        value: \"OH\"\n      }, \"Ohio\"), React.createElement(\"option\", {\n        value: \"OK\"\n      }, \"Oklahoma\"), React.createElement(\"option\", {\n        value: \"OR\"\n      }, \"Oregon\"), React.createElement(\"option\", {\n        value: \"PA\"\n      }, \"Pennsylvania\"), React.createElement(\"option\", {\n        value: \"RI\"\n      }, \"Rhode Island\"), React.createElement(\"option\", {\n        value: \"SC\"\n      }, \"South Carolina\"), React.createElement(\"option\", {\n        value: \"SD\"\n      }, \"South Dakota\"), React.createElement(\"option\", {\n        value: \"TN\"\n      }, \"Tennessee\"), React.createElement(\"option\", {\n        value: \"TX\"\n      }, \"Texas\"), React.createElement(\"option\", {\n        value: \"UT\"\n      }, \"Utah\"), React.createElement(\"option\", {\n        value: \"VT\"\n      }, \"Vermont\"), React.createElement(\"option\", {\n        value: \"VA\"\n      }, \"Virginia\"), React.createElement(\"option\", {\n        value: \"WA\"\n      }, \"Washington\"), React.createElement(\"option\", {\n        value: \"WV\"\n      }, \"West Virginia\"), React.createElement(\"option\", {\n        value: \"WI\"\n      }, \"Wisconsin\"), React.createElement(\"option\", {\n        value: \"WY\"\n      }, \"Wyoming\"), React.createElement(\"option\", {\n        value: \"AS\"\n      }, \"American Samoa\"), React.createElement(\"option\", {\n        value: \"GU\"\n      }, \"Guam\"), React.createElement(\"option\", {\n        value: \"MP\"\n      }, \"Northern Mariana Islands\"), React.createElement(\"option\", {\n        value: \"PR\"\n      }, \"Puerto Rico\"), React.createElement(\"option\", {\n        value: \"UM\"\n      }, \"United States Minor Outlying Islands\"), React.createElement(\"option\", {\n        value: \"VI\"\n      }, \"Virgin Islands\"))))), React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, React.createElement(\"label\", {\n        htmlFor: \"createCity\",\n        style: labelStyle\n      }, \"City\")), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: this.cityInput,\n        className: \"form-control\",\n        id: \"createCity\",\n        \"aria-describedby\": \"cityHelp\",\n        placeholder: \"Enter city\",\n        onChange: function onChange() {\n          return _this2.validateCity();\n        }\n      })))), React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, React.createElement(\"label\", {\n        htmlFor: \"createAddress\",\n        style: labelStyle\n      }, \"Address\")), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: this.addressInput,\n        className: \"form-control\",\n        id: \"createAddress\",\n        \"aria-describedby\": \"addressHelp\",\n        placeholder: \"Enter address\",\n        onChange: function onChange() {\n          return _this2.validateAddress();\n        }\n      })))), React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, React.createElement(\"label\", {\n        htmlFor: \"createPhoneNumber\",\n        style: labelStyle\n      }, \"Phone Number\")), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: this.phoneNumberInput,\n        className: \"form-control\",\n        id: \"createPhoneNumber\",\n        \"aria-describedby\": \"phoneNumberHelp\",\n        placeholder: \"Enter phone number\",\n        onChange: function onChange() {\n          return _this2.validatePhone();\n        }\n      })))), React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, React.createElement(\"label\", {\n        htmlFor: \"createZipCode\",\n        style: labelStyle\n      }, \"Zip Code\")), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: this.zipCodeInput,\n        className: \"form-control\",\n        id: \"createZipCode\",\n        \"aria-describedby\": \"zipCodeHelp\",\n        placeholder: \"Enter zip code\",\n        onChange: function onChange() {\n          return _this2.validateZip();\n        }\n      })))), React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }), React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, React.createElement(\"span\", {\n        style: validationMessageStyle,\n        hidden: profileValidationHidden\n      }, profileValidationMessage)), React.createElement(\"div\", {\n        className: \"p-2\"\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary float-right\",\n        disabled: updateProfileDisabled\n      }, \"Update Profile\")))))));\n    }\n  }]);\n\n  return ProfileCard;\n}(React.Component);\n\nvar profileCard = ReactDOM.render(React.createElement(ProfileCard, null), document.querySelector('#profile-card'));\nprofileCard.setUser(user);",null]}