{"remainingRequest":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/ngafid/ngafid2.0/src/main/javascript/severities.js","dependencies":[{"path":"/ngafid/ngafid2.0/src/main/javascript/severities.js","mtime":1664810261290},{"path":"/ngafid/ngafid2.0/.babelrc","mtime":1664810261182},{"path":"/ngafid/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":1664910647113},{"path":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":1664910647213}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\nimport SignedInNavbar from \"./signed_in_navbar.js\";\nimport TimeHeader from \"./time_header.js\";\nimport GetDescription from \"./get_description.js\";\nimport Plotly from 'plotly.js';\nimport { OverlayTrigger } from \"react-bootstrap\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nairframes.unshift(\"All Airframes\");\nvar index = airframes.indexOf(\"Garmin Flight Display\");\nif (index !== -1) airframes.splice(index, 1);\neventNames.sort();\nconsole.log(eventNames);\n/*\nvar trace1 = {\n    name: 'test1',\n    x: [1, 2, 3, 4],\n    y: [10, 15, 13, 17],\n    type: 'scatter'\n};\n\nvar trace2 = {\n    name: 'test2',\n    x: [1, 2, 3, 4],\n    y: [16, 5, 11, 9],\n    type: 'scatter'\n};\n*/\n\nvar countData = [];\nvar percentData = [];\nvar eventSeverities = {};\nvar eventFleetPercents = {};\nvar eventNGAFIDPercents = {};\n\nvar SeveritiesPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(SeveritiesPage, _React$Component);\n\n  var _super = _createSuper(SeveritiesPage);\n\n  function SeveritiesPage(props) {\n    var _this;\n\n    _classCallCheck(this, SeveritiesPage);\n\n    _this = _super.call(this, props);\n    var eventChecked = {};\n\n    for (var i = 0; i < eventNames.length; i++) {\n      eventChecked[eventNames[i]] = false;\n    }\n\n    var date = new Date();\n    _this.state = {\n      airframe: \"All Airframes\",\n      startYear: 2020,\n      startMonth: 1,\n      endYear: date.getFullYear(),\n      endMonth: date.getMonth() + 1,\n      datesChanged: false,\n      eventChecked: eventChecked\n    };\n    return _this;\n  }\n\n  _createClass(SeveritiesPage, [{\n    key: \"exportCSV\",\n    value: function exportCSV() {\n      var selectedAirframe = this.state.airframe;\n      console.log(\"selected airframe: '\" + selectedAirframe + \"'\");\n      console.log(eventSeverities);\n      var filetext = \"Event Name,Airframe,Flight ID,Start Time,End Time,Start Line,End Line,Severity\\n\";\n      var needsComma = false;\n\n      for (var _i = 0, _Object$entries = Object.entries(eventSeverities); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            eventName = _Object$entries$_i[0],\n            countsMap = _Object$entries$_i[1];\n\n        //console.log(\"checking to plot event: '\" + eventName + \"', checked? '\" + this.state.eventChecked[eventName] + \"'\");\n        if (!this.state.eventChecked[eventName]) continue;\n\n        for (var _i2 = 0, _Object$entries2 = Object.entries(countsMap); _i2 < _Object$entries2.length; _i2++) {\n          var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n              airframe = _Object$entries2$_i[0],\n              counts = _Object$entries2$_i[1];\n\n          if (airframe === \"Garmin Flight Display\") continue;\n          if (selectedAirframe !== airframe && selectedAirframe !== \"All Airframes\") continue;\n\n          for (var i = 0; i < counts.length; i++) {\n            var count = counts[i];\n            filetext += eventName + \",\" + airframe + \",\" + count.flightId + \",\" + count.startTime + \",\" + count.endTime + \",\" + count.startLine + \",\" + count.endLine + \",\" + count.severity + \"\\n\";\n          }\n        }\n      }\n\n      var filename = \"event_severities.csv\";\n      console.log(\"exporting csv!\");\n      var element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(filetext));\n      element.setAttribute('download', filename);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    }\n  }, {\n    key: \"displayPlot\",\n    value: function displayPlot(selectedAirframe) {\n      console.log(\"displaying plots with airframe: '\" + selectedAirframe + \"'\");\n      var severityTraces = [];\n\n      for (var _i3 = 0, _Object$entries3 = Object.entries(eventSeverities); _i3 < _Object$entries3.length; _i3++) {\n        var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n            eventName = _Object$entries3$_i[0],\n            countsMap = _Object$entries3$_i[1];\n\n        //console.log(\"checking to plot event: '\" + eventName + \"', checked? '\" + this.state.eventChecked[eventName] + \"'\");\n        if (!this.state.eventChecked[eventName]) continue;\n\n        for (var _i4 = 0, _Object$entries4 = Object.entries(countsMap); _i4 < _Object$entries4.length; _i4++) {\n          var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i4], 2),\n              airframe = _Object$entries4$_i[0],\n              counts = _Object$entries4$_i[1];\n\n          if (airframe === \"Garmin Flight Display\") continue;\n          if (selectedAirframe !== airframe && selectedAirframe !== \"All Airframes\") continue;\n          var severityTrace = {\n            name: eventName + ' - ' + airframe,\n            type: 'scatter',\n            mode: 'markers',\n            hoverinfo: 'x+text',\n            hovertext: [],\n            y: [],\n            x: [],\n            flightIds: []\n          }; //console.log(\"events:\");\n\n          for (var i = 0; i < counts.length; i++) {\n            console.log(counts[i]);\n            severityTrace.y.push(counts[i].severity);\n            severityTrace.x.push(counts[i].startTime);\n\n            if (counts[i].eventDefinitionId == -1) {\n              severityTrace.flightIds.push(counts[i].flightId + \" \" + counts[i].otherFlightId);\n            } else {\n              severityTrace.flightIds.push(counts[i].flightId);\n            }\n\n            var hovertext = \"Flight #\" + counts[i].flightId + \", severity: \" + counts[i].severity + \", event start time: \" + counts[i].startTime + \", event end time: \" + counts[i].endTime;\n            if (counts[i].eventDefinitionId == -1) hovertext += \", Proximity Flight #\" + counts[i].otherFlightId;\n            severityTrace.hovertext.push(hovertext); //+ \", severity: \" + counts[i].severity);\n          }\n\n          severityTraces.push(severityTrace);\n        }\n      }\n\n      var severityLayout = {\n        title: 'Severity of Events',\n        hovermode: \"closest\",\n        //autosize: false,\n        //width: 500,\n        height: 700,\n        margin: {\n          l: 50,\n          r: 50,\n          b: 50,\n          t: 50,\n          pad: 4\n        }\n      };\n      var config = {\n        responsive: true\n      };\n      Plotly.newPlot('severities-plot', severityTraces, severityLayout, config);\n      var severitiesPlot = document.getElementById('severities-plot');\n      severitiesPlot.on('plotly_click', function (data) {\n        console.log(\"clicked on plot near point!\");\n        console.log(data);\n\n        for (var i = 0; i < data.points.length; i++) {\n          var _index = data.points[i].pointIndex;\n          var flightId = data.points[i].data.flightIds[_index];\n          var otherFlightId = null;\n\n          if (typeof flightId === 'string' && flightId.indexOf(' ') >= 0) {\n            var parts = flightId.split(' ');\n            flightId = parts[0];\n            otherFlightId = parts[1];\n          }\n\n          console.log(\"point index of clicked point is: \" + _index + \" with a flight id of: \" + flightId);\n\n          if (otherFlightId == null) {\n            window.open(\"/protected/flight?flight_id=\" + flightId);\n          } else {\n            window.open(\"/protected/flight?flight_id=\" + otherFlightId + \"&flight_id=\" + flightId);\n          } //might want to only open one tab if for some reason multiple points overlap (which shouldn't but might happen)\n          //break;\n\n        }\n      });\n    }\n  }, {\n    key: \"checkEvent\",\n    value: function checkEvent(eventName) {\n      console.log(\"checking event: '\" + eventName + \"'\");\n      this.state.eventChecked[eventName] = !this.state.eventChecked[eventName];\n      this.setState(this.state);\n      var startDate = this.state.startYear + \"-\";\n      var endDate = this.state.endYear + \"-\"; //0 pad the months on the front\n\n      if (parseInt(this.state.startMonth) < 10) startDate += \"0\" + parseInt(this.state.startMonth);else startDate += this.state.startMonth;\n      if (parseInt(this.state.endMonth) < 10) endDate += \"0\" + parseInt(this.state.endMonth);else endDate += this.state.endMonth;\n      var submission_data = {\n        startDate: startDate + \"-01\",\n        endDate: endDate + \"-28\",\n        eventName: eventName\n      };\n\n      if (eventName in eventSeverities) {\n        console.log(\"already loaded counts for event: '\" + eventName + \"'\");\n        severitiesPage.displayPlot(severitiesPage.state.airframe);\n      } else {\n        $('#loading').show();\n        console.log(\"showing loading spinner!\");\n\n        var _severitiesPage = this;\n\n        $.ajax({\n          type: 'POST',\n          url: '/protected/severities',\n          data: submission_data,\n          dataType: 'json',\n          success: function success(response) {\n            console.log(\"received response: \");\n            console.log(response);\n            $('#loading').hide();\n\n            if (response.err_msg) {\n              errorModal.show(response.err_title, response.err_msg);\n              return;\n            }\n\n            eventSeverities[eventName] = response;\n\n            _severitiesPage.displayPlot(_severitiesPage.state.airframe);\n          },\n          error: function error(jqXHR, textStatus, errorThrown) {\n            errorModal.show(\"Error Loading Uploads\", errorThrown);\n          },\n          async: true\n        });\n      }\n    }\n  }, {\n    key: \"updateStartYear\",\n    value: function updateStartYear(newStartYear) {\n      console.log(\"setting new start year to: \" + newStartYear);\n      this.setState({\n        startYear: newStartYear,\n        datesChanged: true\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"updateStartMonth\",\n    value: function updateStartMonth(newStartMonth) {\n      console.log(\"setting new start month to: \" + newStartMonth);\n      this.setState({\n        startMonth: newStartMonth,\n        datesChanged: true\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"updateEndYear\",\n    value: function updateEndYear(newEndYear) {\n      console.log(\"setting new end year to: \" + newEndYear);\n      this.setState({\n        endYear: newEndYear,\n        datesChanged: true\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"updateEndMonth\",\n    value: function updateEndMonth(newEndMonth) {\n      console.log(\"setting new end month to: \" + newEndMonth);\n      this.setState({\n        endMonth: newEndMonth,\n        datesChanged: true\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"dateChange\",\n    value: function dateChange() {\n      console.log(\"[severitiescard] notifying date change 2, startYear: '\" + this.state.startYear + \"', startMonth: '\" + this.state.startMonth + \", endYear: '\" + this.state.endYear + \"', endMonth: '\" + this.state.endMonth + \"'\");\n\n      for (var _i5 = 0, _Object$entries5 = Object.entries(this.state.eventChecked); _i5 < _Object$entries5.length; _i5++) {\n        var _Object$entries5$_i = _slicedToArray(_Object$entries5[_i5], 2),\n            eventName = _Object$entries5$_i[0],\n            value = _Object$entries5$_i[1];\n\n        this.state.eventChecked[eventName] = false;\n      }\n\n      this.state.datesChanged = false;\n      this.setState(this.state);\n      eventSeverities = {};\n      this.displayPlot(this.state.airframe);\n    }\n  }, {\n    key: \"airframeChange\",\n    value: function airframeChange(airframe) {\n      this.setState({\n        airframe: airframe\n      });\n      this.displayPlot(airframe);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //console.log(systemIds);\n      var numberOptions = {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      };\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(SignedInNavbar, {\n        activePage: \"severities\",\n        waitingUserCount: waitingUserCount,\n        fleetManager: fleetManager,\n        unconfirmedTailsCount: unconfirmedTailsCount,\n        modifyTailsAccess: modifyTailsAccess,\n        plotMapHidden: plotMapHidden\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mb-2 m-2\",\n        style: {\n          background: \"rgba(248,259,250,0.8)\"\n        }\n      }, /*#__PURE__*/React.createElement(TimeHeader, {\n        name: \"Event Severities\",\n        airframes: airframes,\n        airframe: this.state.airframe,\n        startYear: this.state.startYear,\n        startMonth: this.state.startMonth,\n        endYear: this.state.endYear,\n        endMonth: this.state.endMonth,\n        datesChanged: this.state.datesChanged,\n        dateChange: function dateChange() {\n          return _this2.dateChange();\n        },\n        airframeChange: function airframeChange(airframe) {\n          return _this2.airframeChange(airframe);\n        },\n        updateStartYear: function updateStartYear(newStartYear) {\n          return _this2.updateStartYear(newStartYear);\n        },\n        updateStartMonth: function updateStartMonth(newStartMonth) {\n          return _this2.updateStartMonth(newStartMonth);\n        },\n        updateEndYear: function updateEndYear(newEndYear) {\n          return _this2.updateEndYear(newEndYear);\n        },\n        updateEndMonth: function updateEndMonth(newEndMonth) {\n          return _this2.updateEndMonth(newEndMonth);\n        },\n        exportCSV: function exportCSV() {\n          return _this2.exportCSV();\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        style: {\n          padding: \"0\"\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          margin: \"0\"\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-2\",\n        style: {\n          padding: \"8 8 8 8\"\n        }\n      }, eventNames.map(function (eventName, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: \"form-check\"\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: \"\",\n          id: \"event-check-\" + index,\n          checked: _this2.state.eventChecked[eventName],\n          onChange: function onChange() {\n            return _this2.checkEvent(eventName);\n          }\n        }), /*#__PURE__*/React.createElement(OverlayTrigger, {\n          overlay: function overlay(props) {\n            return /*#__PURE__*/React.createElement(Tooltip, props, GetDescription(eventName));\n          },\n          placement: \"bottom\"\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"form-check-label\"\n        }, eventName)));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-10\",\n        style: {\n          padding: \"0 0 0 8\"\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"severities-plot\"\n      })))))))));\n    }\n  }]);\n\n  return SeveritiesPage;\n}(React.Component);\n\nvar severitiesPage = ReactDOM.render( /*#__PURE__*/React.createElement(SeveritiesPage, null), document.querySelector('#severities-page'));\nseveritiesPage.displayPlot(\"All Airframes\");",{"version":3,"names":["React","Component","ReactDOM","errorModal","SignedInNavbar","TimeHeader","GetDescription","Plotly","OverlayTrigger","Tooltip","airframes","unshift","index","indexOf","splice","eventNames","sort","console","log","countData","percentData","eventSeverities","eventFleetPercents","eventNGAFIDPercents","SeveritiesPage","props","eventChecked","i","length","date","Date","state","airframe","startYear","startMonth","endYear","getFullYear","endMonth","getMonth","datesChanged","selectedAirframe","filetext","needsComma","Object","entries","eventName","countsMap","counts","count","flightId","startTime","endTime","startLine","endLine","severity","filename","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","severityTraces","severityTrace","name","type","mode","hoverinfo","hovertext","y","x","flightIds","push","eventDefinitionId","otherFlightId","severityLayout","title","hovermode","height","margin","l","r","b","t","pad","config","responsive","newPlot","severitiesPlot","getElementById","on","data","points","pointIndex","parts","split","window","open","setState","startDate","endDate","parseInt","submission_data","severitiesPage","displayPlot","$","show","ajax","url","dataType","success","response","hide","err_msg","err_title","error","jqXHR","textStatus","errorThrown","async","newStartYear","newStartMonth","newEndYear","newEndMonth","value","numberOptions","minimumFractionDigits","maximumFractionDigits","waitingUserCount","fleetManager","unconfirmedTailsCount","modifyTailsAccess","plotMapHidden","background","dateChange","airframeChange","updateStartYear","updateStartMonth","updateEndYear","updateEndMonth","exportCSV","padding","map","checkEvent","render","querySelector"],"sources":["/ngafid/ngafid2.0/src/main/javascript/severities.js"],"sourcesContent":["import 'bootstrap';\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { errorModal } from \"./error_modal.js\";\nimport SignedInNavbar from \"./signed_in_navbar.js\";\n\nimport TimeHeader from \"./time_header.js\";\nimport GetDescription from \"./get_description.js\";\n\nimport Plotly from 'plotly.js';\nimport {OverlayTrigger} from \"react-bootstrap\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\n\n\nairframes.unshift(\"All Airframes\");\nvar index = airframes.indexOf(\"Garmin Flight Display\");\nif (index !== -1) airframes.splice(index, 1);\n\neventNames.sort();\n\nconsole.log(eventNames);\n\n/*\nvar trace1 = {\n    name: 'test1',\n    x: [1, 2, 3, 4],\n    y: [10, 15, 13, 17],\n    type: 'scatter'\n};\n\nvar trace2 = {\n    name: 'test2',\n    x: [1, 2, 3, 4],\n    y: [16, 5, 11, 9],\n    type: 'scatter'\n};\n*/\n\nvar countData = [];\nvar percentData = [];\n\nvar eventSeverities = {};\n\nvar eventFleetPercents = {};\nvar eventNGAFIDPercents = {};\n\nclass SeveritiesPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let eventChecked = {};\n        for (let i = 0; i < eventNames.length; i++) {\n            eventChecked[eventNames[i]] = false;\n        }\n\n        var date = new Date();\n        this.state = {\n            airframe : \"All Airframes\",\n            startYear : 2020,\n            startMonth : 1,\n            endYear : date.getFullYear(),\n            endMonth : date.getMonth() + 1,\n            datesChanged : false,\n\n            eventChecked : eventChecked\n        };\n    }\n\n    exportCSV() {\n        let selectedAirframe = this.state.airframe;\n\n        console.log(\"selected airframe: '\" + selectedAirframe + \"'\");\n\n        console.log(eventSeverities);\n\n\n        let filetext = \"Event Name,Airframe,Flight ID,Start Time,End Time,Start Line,End Line,Severity\\n\";\n\n        let needsComma = false;\n\n        for (let [eventName, countsMap] of Object.entries(eventSeverities)) {\n            //console.log(\"checking to plot event: '\" + eventName + \"', checked? '\" + this.state.eventChecked[eventName] + \"'\");\n            if (!this.state.eventChecked[eventName]) continue;\n\n            for (let [airframe, counts] of Object.entries(countsMap)) {\n                if (airframe === \"Garmin Flight Display\") continue;\n                if (selectedAirframe !== airframe && selectedAirframe !== \"All Airframes\") continue;\n\n\n                for (let i = 0; i < counts.length; i++) {\n                    let count = counts[i];\n                    filetext += eventName + \",\" + airframe + \",\" + count.flightId + \",\" + count.startTime +  \",\" + count.endTime + \",\" + count.startLine + \",\" + count.endLine + \",\" + count.severity + \"\\n\";\n                }\n            }\n        }\n\n\n        let filename = \"event_severities.csv\";\n\n        console.log(\"exporting csv!\");\n\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(filetext));\n        element.setAttribute('download', filename);\n\n        element.style.display = 'none';\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n\n    }\n\n    displayPlot(selectedAirframe) {\n        console.log(\"displaying plots with airframe: '\" + selectedAirframe + \"'\");\n\n        let severityTraces = [];\n\n        for (let [eventName, countsMap] of Object.entries(eventSeverities)) {\n            //console.log(\"checking to plot event: '\" + eventName + \"', checked? '\" + this.state.eventChecked[eventName] + \"'\");\n            if (!this.state.eventChecked[eventName]) continue;\n\n            for (let [airframe, counts] of Object.entries(countsMap)) {\n                if (airframe === \"Garmin Flight Display\") continue;\n                if (selectedAirframe !== airframe && selectedAirframe !== \"All Airframes\") continue;\n\n                let severityTrace = {\n                    name : eventName + ' - ' + airframe,\n                    type : 'scatter',\n                    mode : 'markers',\n                    hoverinfo : 'x+text',\n                    hovertext : [], \n                    y : [], \n                    x : [],\n                    flightIds : [],\n                };\n\n                //console.log(\"events:\");\n                for (let i = 0; i < counts.length; i++) {\n                    console.log(counts[i]);\n                    severityTrace.y.push( counts[i].severity );\n                    severityTrace.x.push( counts[i].startTime );\n\n                    if (counts[i].eventDefinitionId == -1) {\n                        severityTrace.flightIds.push( counts[i].flightId + \" \" + counts[i].otherFlightId);\n                    } else {\n                        severityTrace.flightIds.push( counts[i].flightId);\n                    }\n\n                    let hovertext = \"Flight #\" + counts[i].flightId + \", severity: \" + counts[i].severity + \", event start time: \" + counts[i].startTime + \", event end time: \" + counts[i].endTime;\n                    if (counts[i].eventDefinitionId == -1) hovertext += \", Proximity Flight #\" + counts[i].otherFlightId;\n\n                    severityTrace.hovertext.push(hovertext);\n                    //+ \", severity: \" + counts[i].severity);\n                }\n\n                severityTraces.push(severityTrace);\n            }\n        }\n\n        var severityLayout = {\n            title : 'Severity of Events',\n            hovermode : \"closest\",\n            //autosize: false,\n            //width: 500,\n            height: 700,\n            margin: {\n                l: 50,\n                r: 50,\n                b: 50,\n                t: 50,\n                pad: 4\n            }\n        };\n\n        var config = {responsive: true};\n\n        Plotly.newPlot('severities-plot', severityTraces, severityLayout, config);\n\n        let severitiesPlot = document.getElementById('severities-plot');\n\n        severitiesPlot.on('plotly_click', function(data) {\n            console.log(\"clicked on plot near point!\");\n            console.log(data);\n\n            for (var i = 0; i < data.points.length; i++) {\n                let index = data.points[i].pointIndex;\n                let flightId = data.points[i].data.flightIds[index];\n                let otherFlightId = null;\n                if (typeof flightId === 'string' && flightId.indexOf(' ') >= 0) {\n                    let parts = flightId.split(' ');\n                    flightId = parts[0];\n                    otherFlightId = parts[1];\n                }\n\n                console.log(\"point index of clicked point is: \" + index + \" with a flight id of: \" + flightId);\n                if (otherFlightId == null) {\n                    window.open(\"/protected/flight?flight_id=\" + flightId);\n                } else {\n                    window.open(\"/protected/flight?flight_id=\" + otherFlightId + \"&flight_id=\" + flightId);\n                }\n\n                //might want to only open one tab if for some reason multiple points overlap (which shouldn't but might happen)\n                //break;\n            }\n        });\n\n    }\n\n\n    checkEvent(eventName) {\n        console.log(\"checking event: '\" + eventName + \"'\");\n        this.state.eventChecked[eventName] = !this.state.eventChecked[eventName];\n        this.setState(this.state);\n\n        let startDate = this.state.startYear + \"-\";\n        let endDate = this.state.endYear + \"-\";\n\n        //0 pad the months on the front\n        if (parseInt(this.state.startMonth) < 10) startDate += \"0\" + parseInt(this.state.startMonth);\n        else startDate += this.state.startMonth;\n        if (parseInt(this.state.endMonth) < 10) endDate += \"0\" + parseInt(this.state.endMonth);\n        else endDate += this.state.endMonth;\n\n        var submission_data = {\n            startDate : startDate + \"-01\",\n            endDate : endDate + \"-28\",\n            eventName : eventName\n        };\n\n        if (eventName in eventSeverities) {\n            console.log(\"already loaded counts for event: '\" + eventName + \"'\");\n            severitiesPage.displayPlot(severitiesPage.state.airframe);\n\n        } else {\n            $('#loading').show();\n            console.log(\"showing loading spinner!\");\n\n            let severitiesPage = this;\n\n            $.ajax({\n                type: 'POST',\n                url: '/protected/severities',\n                data : submission_data,\n                dataType : 'json',\n                success : function(response) {\n                    console.log(\"received response: \");\n                    console.log(response);\n\n                    $('#loading').hide();\n\n                    if (response.err_msg) {\n                        errorModal.show(response.err_title, response.err_msg);\n                        return;\n                    }   \n\n                    eventSeverities[eventName] = response;\n                    severitiesPage.displayPlot(severitiesPage.state.airframe);\n                },   \n                error : function(jqXHR, textStatus, errorThrown) {\n                    errorModal.show(\"Error Loading Uploads\", errorThrown);\n                },   \n                async: true \n            });\n        }\n    }\n\n    updateStartYear(newStartYear) {\n        console.log(\"setting new start year to: \" + newStartYear);\n        this.setState({startYear : newStartYear, datesChanged : true});\n        console.log(this.state);\n    }\n\n    updateStartMonth(newStartMonth) {\n        console.log(\"setting new start month to: \" + newStartMonth);\n        this.setState({startMonth : newStartMonth, datesChanged : true});\n        console.log(this.state);\n    }\n\n    updateEndYear(newEndYear) {\n        console.log(\"setting new end year to: \" + newEndYear);\n        this.setState({endYear : newEndYear, datesChanged : true});\n        console.log(this.state);\n    }\n\n    updateEndMonth(newEndMonth) {\n        console.log(\"setting new end month to: \" + newEndMonth);\n        this.setState({endMonth : newEndMonth, datesChanged : true});\n        console.log(this.state);\n    }\n\n    dateChange() {\n        console.log(\"[severitiescard] notifying date change 2, startYear: '\" + this.state.startYear + \"', startMonth: '\" + this.state.startMonth + \", endYear: '\" + this.state.endYear + \"', endMonth: '\" + this.state.endMonth + \"'\"); \n\n        for (let [eventName, value] of Object.entries(this.state.eventChecked)) {\n            this.state.eventChecked[eventName] = false;\n        }\n        this.state.datesChanged = false;\n        this.setState(this.state);\n\n        eventSeverities = {};\n        this.displayPlot(this.state.airframe);\n    }\n\n    airframeChange(airframe) {\n        this.setState({airframe});\n        this.displayPlot(airframe);\n    }\n\n    render() {\n        //console.log(systemIds);\n\n        const numberOptions = { \n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2 \n        };\n\n        return (\n            <div>\n                <SignedInNavbar activePage={\"severities\"} waitingUserCount={waitingUserCount} fleetManager={fleetManager} unconfirmedTailsCount={unconfirmedTailsCount} modifyTailsAccess={modifyTailsAccess} plotMapHidden={plotMapHidden}/>\n\n                <div className=\"container-fluid\">\n\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <div className=\"card mb-2 m-2\" style={{background : \"rgba(248,259,250,0.8)\"}}>\n                                <TimeHeader\n                                    name=\"Event Severities\"\n                                    airframes={airframes}\n                                    airframe={this.state.airframe}\n                                    startYear={this.state.startYear} \n                                    startMonth={this.state.startMonth} \n                                    endYear={this.state.endYear} \n                                    endMonth={this.state.endMonth} \n                                    datesChanged={this.state.datesChanged}\n                                    dateChange={() => this.dateChange()}\n                                    airframeChange={(airframe) => this.airframeChange(airframe)}\n                                    updateStartYear={(newStartYear) => this.updateStartYear(newStartYear)}\n                                    updateStartMonth={(newStartMonth) => this.updateStartMonth(newStartMonth)}\n                                    updateEndYear={(newEndYear) => this.updateEndYear(newEndYear)}\n                                    updateEndMonth={(newEndMonth) => this.updateEndMonth(newEndMonth)}\n                                    exportCSV={() => this.exportCSV()}\n                                />\n\n                            <div className=\"card-body\" style={{padding:\"0\"}}>\n                                <div className=\"row\" style={{margin:\"0\"}}>\n                                    <div className=\"col-lg-2\" style={{padding:\"8 8 8 8\"}}>\n\n                                        {\n                                            eventNames.map((eventName, index) => {\n                                                return (\n                                                    <div key={index} className=\"form-check\">\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"event-check-\" + index} checked={this.state.eventChecked[eventName]} onChange={() => this.checkEvent(eventName)}></input>\n\n                                                        <OverlayTrigger overlay={(props) => (\n                                                            <Tooltip {...props}>{GetDescription(eventName)}</Tooltip>)}\n                                                                        placement=\"bottom\">\n                                                            <label className=\"form-check-label\">\n                                                                {eventName}\n                                                            </label>\n\n\n                                                        </OverlayTrigger>\n\n\n                                                    </div>\n                                                );\n                                            })\n                                        }\n\n\n                                    </div>\n\n                                    <div className=\"col-lg-10\" style={{padding:\"0 0 0 8\"}}>\n                                        <div id=\"severities-plot\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\n\nvar severitiesPage = ReactDOM.render(\n    <SeveritiesPage />,\n    document.querySelector('#severities-page')\n);\n\nseveritiesPage.displayPlot(\"All Airframes\");\n"],"mappings":"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"}]}