{"remainingRequest":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/ngafid/ngafid2.0/src/main/javascript/reset_password.js","dependencies":[{"path":"/ngafid/ngafid2.0/src/main/javascript/reset_password.js","mtime":1664810261290},{"path":"/ngafid/ngafid2.0/.babelrc","mtime":1664810261182},{"path":"/ngafid/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":1664910647113},{"path":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":1664910647213}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\nimport { loginModal } from \"./login.js\";\nimport { navbar } from \"./home_navbar.js\";\n\nvar ResetPasswordCard = /*#__PURE__*/function (_React$Component) {\n  _inherits(ResetPasswordCard, _React$Component);\n\n  var _super = _createSuper(ResetPasswordCard);\n\n  function ResetPasswordCard(props) {\n    var _this;\n\n    _classCallCheck(this, ResetPasswordCard);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      emailAddress: \"\",\n      passphrase: \"\",\n      newPassword: \"\",\n      confirmPassword: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ResetPasswordCard, [{\n    key: \"clearPasswords\",\n    value: function clearPasswords() {\n      this.state = {\n        emailAddress: \"\",\n        passphrase: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\"\n      };\n      this.setState(this.state);\n    }\n  }, {\n    key: \"resetPassword\",\n    value: function resetPassword(event) {\n      event.preventDefault();\n      var submissionData = {\n        emailAddress: this.state.emailAddress,\n        passphrase: this.state.passphrase,\n        newPassword: this.state.newPassword,\n        confirmPassword: this.state.confirmPassword\n      };\n      $(\"#loading\").show();\n      $.ajax({\n        type: 'POST',\n        url: '/reset_password',\n        data: submissionData,\n        dataType: 'json',\n        success: function success(response) {\n          console.log(\"received response: \");\n          console.log(response);\n          $(\"#loading\").hide();\n\n          if (response.errorTitle) {\n            resetPasswordCard.clearPasswords();\n            console.log(\"displaying error modal!\");\n            errorModal.show(response.errorTitle, response.errorMessage);\n            return false;\n          }\n\n          if (response.waiting || response.denied) {\n            //redirect to the waiting page\n            window.location.replace(\"/protected/waiting\");\n          } else {\n            //redirect to the welcome page\n            window.location.replace(\"/protected/welcome\");\n          }\n        },\n        error: function error(jqXHR, textStatus, errorThrown) {\n          errorModal.show(\"Error Submitting Account Information\", errorThrown);\n        },\n        async: true\n      });\n      console.log(\"submitting account!\");\n    }\n  }, {\n    key: \"changeEmailAddress\",\n    value: function changeEmailAddress(event) {\n      this.state.emailAddress = event.target.value;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"changePassphrase\",\n    value: function changePassphrase(event) {\n      this.state.passphrase = event.target.value;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"changeNewPassword\",\n    value: function changeNewPassword(event) {\n      this.state.newPassword = event.target.value;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"changeConfirmPassword\",\n    value: function changeConfirmPassword(event) {\n      this.state.confirmPassword = event.target.value;\n      this.setState(this.state);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hidden = this.props.hidden;\n      var bgStyle = {\n        background: \"rgba(248,259,250,0.8)\"\n      };\n      var fgStyle = {\n        opacity: 1.0\n      };\n      var formGroupStyle = {\n        marginBottom: '8px'\n      };\n      var formHeaderStyle = {\n        width: '150px',\n        flex: '0 0 150px'\n      };\n      var labelStyle = {\n        padding: '7 0 7 0',\n        margin: '0',\n        display: 'block',\n        textAlign: 'right'\n      };\n      var validationMessageStyle = {\n        padding: '7 0 7 0',\n        margin: '0',\n        display: 'block',\n        textAlign: 'left',\n        color: 'red'\n      };\n      var emailAddress = this.state.emailAddress;\n      var passphrase = this.state.passphrase;\n      var newPassword = this.state.newPassword;\n      var confirmPassword = this.state.confirmPassword; //passwords must have valid text\n      //new must equal validate\n      //current must not equal new/validate\n\n      var re = /[\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\+\\!\\/\\\\\\.,a-zA-Z0-9 ]*/;\n      var emailRe = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n      var passwordValidationMessage = \"\";\n      var passwordValidationHidden = true;\n\n      if (emailAddress.length == 0) {\n        passwordValidationMessage = \"Please enter your email address.\";\n        passwordValidationHidden = false;\n      } else if (!emailRe.test(emailAddress)) {\n        passwordValidationMessage = \"Email address was not valid.\";\n        passwordValidationHidden = false;\n      } else if (passphrase.length == 0) {\n        passwordValidationMessage = \"Please enter the passphrase that was emailed to you.\";\n        passwordValidationHidden = false;\n      } else if (newPassword.length == 0) {\n        passwordValidationMessage = \"Please enter a new password.\";\n        passwordValidationHidden = false;\n      } else if (re.test(newPassword) && newPassword.length < 10) {\n        passwordValidationMessage = \"New password was not valid. Must be minimum 10 characters long and consist of letters, numbers, spaces and any of the following special characters: @#$%^&*()_+!/\\\\\";\n        passwordValidationHidden = false;\n      } else if (confirmPassword.length == 0) {\n        passwordValidationMessage = \"Please re-enter your new password.\";\n        passwordValidationHidden = false;\n      } else if (re.test(confirmPassword) && confirmPassword.length < 10) {\n        passwordValidationMessage = \"Confirmation password was not valid. Must be minimum 10 characters long and consist of letters, numbers, spaces and any of the following special characters: @#$%^&*()_+!/\\\\\";\n        passwordValidationHidden = false;\n      } else if (newPassword != confirmPassword) {\n        passwordValidationMessage = \"The new password and confirmation password must be the same.\";\n        passwordValidationHidden = false;\n      }\n\n      var resetPasswordDisabled = !passwordValidationHidden;\n      console.log(\"rendering with password validation message: '\" + passwordValidationMessage + \"' and password validation visible: \" + passwordValidationHidden);\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        hidden: hidden\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mb-1\",\n        style: bgStyle\n      }, /*#__PURE__*/React.createElement(\"h5\", {\n        className: \"card-header\",\n        style: fgStyle\n      }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        style: fgStyle\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: function onSubmit(event) {\n          return _this2.resetPassword(event);\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"resetEmailAddress\",\n        style: labelStyle\n      }, \"Email Address\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"resetEmailAddress\",\n        \"aria-describedby\": \"emailAddressHelp\",\n        placeholder: \"Enter Email Address\",\n        onChange: function onChange(event) {\n          return _this2.changeEmailAddress(event);\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"form-group\",\n        style: formGroupStyle\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"resetPassphrase\",\n        style: labelStyle\n      }, \"Reset Passphrase\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"resetPassphrase\",\n        \"aria-describedby\": \"passphraseHelp\",\n        placeholder: \"Enter Reset Passphrase\",\n        onChange: function onChange(event) {\n          return _this2.changePassphrase(event);\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"createPassword\",\n        style: labelStyle\n      }, \"New Password\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"newPassword\",\n        placeholder: \"Password (required)\",\n        required: true,\n        onChange: function onChange(event) {\n          _this2.changeNewPassword(event);\n        },\n        value: this.state.newPassword\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"confirmPassword\",\n        placeholder: \"Confirm password (required)\",\n        required: true,\n        onChange: function onChange(event) {\n          _this2.changeConfirmPassword(event);\n        },\n        value: this.state.confirmPassword\n      }))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\",\n        style: formHeaderStyle\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2 flex-fill\"\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: validationMessageStyle,\n        hidden: passwordValidationHidden\n      }, passwordValidationMessage)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"p-2\"\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary float-right\",\n        disabled: resetPasswordDisabled\n      }, \"Reset Password\")))))));\n    }\n  }]);\n\n  return ResetPasswordCard;\n}(React.Component);\n\nvar resetPasswordCard = ReactDOM.render( /*#__PURE__*/React.createElement(ResetPasswordCard, null), document.querySelector('#reset-password-card'));",{"version":3,"names":["React","Component","ReactDOM","errorModal","loginModal","navbar","ResetPasswordCard","props","state","emailAddress","passphrase","newPassword","confirmPassword","setState","event","preventDefault","submissionData","$","show","ajax","type","url","data","dataType","success","response","console","log","hide","errorTitle","resetPasswordCard","clearPasswords","errorMessage","waiting","denied","window","location","replace","error","jqXHR","textStatus","errorThrown","async","target","value","hidden","bgStyle","background","fgStyle","opacity","formGroupStyle","marginBottom","formHeaderStyle","width","flex","labelStyle","padding","margin","display","textAlign","validationMessageStyle","color","re","emailRe","passwordValidationMessage","passwordValidationHidden","length","test","resetPasswordDisabled","resetPassword","changeEmailAddress","changePassphrase","changeNewPassword","changeConfirmPassword","render","document","querySelector"],"sources":["/ngafid/ngafid2.0/src/main/javascript/reset_password.js"],"sourcesContent":["import 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { errorModal } from \"./error_modal.js\";\nimport { loginModal } from \"./login.js\";\nimport { navbar } from \"./home_navbar.js\";\n\nclass ResetPasswordCard extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            emailAddress : \"\",\n            passphrase : \"\",\n            newPassword : \"\",\n            confirmPassword : \"\"\n        };\n    }\n\n    clearPasswords() {\n        this.state = {\n            emailAddress : \"\",\n            passphrase : \"\",\n            newPassword : \"\",\n            confirmPassword : \"\"\n        };\n\n        this.setState(this.state);\n    }\n\n    resetPassword(event) {\n        event.preventDefault();\n\n        var submissionData = { \n            emailAddress : this.state.emailAddress,\n            passphrase : this.state.passphrase,\n            newPassword : this.state.newPassword,\n            confirmPassword : this.state.confirmPassword\n        };\n\n\n        $(\"#loading\").show();\n\n        $.ajax({\n            type: 'POST',\n            url: '/reset_password',\n            data : submissionData,\n            dataType : 'json',\n            success : function(response) {\n                console.log(\"received response: \");\n                console.log(response);\n\n                $(\"#loading\").hide();\n\n                if (response.errorTitle) {\n                    resetPasswordCard.clearPasswords();\n                    console.log(\"displaying error modal!\");\n                    errorModal.show(response.errorTitle, response.errorMessage);\n                    return false;\n                }\n\n                if (response.waiting || response.denied) {\n                    //redirect to the waiting page\n                    window.location.replace(\"/protected/waiting\");\n                } else {\n                    //redirect to the welcome page\n                    window.location.replace(\"/protected/welcome\");\n                }\n\n            },\n            error : function(jqXHR, textStatus, errorThrown) {\n                errorModal.show(\"Error Submitting Account Information\", errorThrown);\n            },\n            async: true\n        });\n\n        console.log(\"submitting account!\");\n    }\n\n    changeEmailAddress(event) {\n        this.state.emailAddress = event.target.value;\n        this.setState(this.state);\n    }\n\n    changePassphrase(event) {\n        this.state.passphrase = event.target.value;\n        this.setState(this.state);\n    }\n\n    changeNewPassword(event) {\n        this.state.newPassword = event.target.value;\n        this.setState(this.state);\n    }\n\n    changeConfirmPassword(event) {\n        this.state.confirmPassword = event.target.value;\n        this.setState(this.state);\n    }\n\n    render() {\n        const hidden = this.props.hidden;\n        const bgStyle = {background : \"rgba(248,259,250,0.8)\"};\n        const fgStyle = {opacity : 1.0};\n\n        let formGroupStyle = {\n            marginBottom: '8px'\n        };\n\n        let formHeaderStyle = {\n            width: '150px',\n            flex: '0 0 150px'\n        };\n\n        let labelStyle = {\n            padding : '7 0 7 0',\n            margin : '0',\n            display: 'block',\n            textAlign: 'right'\n        };\n\n        let validationMessageStyle = {\n            padding : '7 0 7 0',\n            margin : '0',\n            display: 'block',\n            textAlign: 'left',\n            color: 'red'\n        };\n\n        let emailAddress = this.state.emailAddress;\n        let passphrase = this.state.passphrase;\n        let newPassword = this.state.newPassword;\n        let confirmPassword = this.state.confirmPassword;\n\n        //passwords must have valid text\n        //new must equal validate\n        //current must not equal new/validate\n\n        let re = /[\\@\\#\\$\\%\\^\\&\\*\\(\\)\\_\\+\\!\\/\\\\\\.,a-zA-Z0-9 ]*/;\n        let emailRe = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n\n        let passwordValidationMessage = \"\";\n        let passwordValidationHidden = true;\n\n        if (emailAddress.length == 0) {\n            passwordValidationMessage = \"Please enter your email address.\";\n            passwordValidationHidden = false;\n\n        } else if (!emailRe.test(emailAddress)) {\n            passwordValidationMessage = \"Email address was not valid.\";\n            passwordValidationHidden = false;\n\n        } else if (passphrase.length == 0) {\n            passwordValidationMessage = \"Please enter the passphrase that was emailed to you.\";\n            passwordValidationHidden = false;\n\n        } else if (newPassword.length == 0) {\n            passwordValidationMessage = \"Please enter a new password.\";\n            passwordValidationHidden = false;\n\n        } else if (re.test(newPassword) && newPassword.length < 10) {\n            passwordValidationMessage = \"New password was not valid. Must be minimum 10 characters long and consist of letters, numbers, spaces and any of the following special characters: @#$%^&*()_+!/\\\\\";\n            passwordValidationHidden = false;\n\n        } else if (confirmPassword.length == 0) {\n            passwordValidationMessage = \"Please re-enter your new password.\";\n            passwordValidationHidden = false;\n\n        } else if (re.test(confirmPassword) && confirmPassword.length < 10) {\n            passwordValidationMessage = \"Confirmation password was not valid. Must be minimum 10 characters long and consist of letters, numbers, spaces and any of the following special characters: @#$%^&*()_+!/\\\\\";\n            passwordValidationHidden = false;\n\n        } else if (newPassword != confirmPassword) {\n            passwordValidationMessage = \"The new password and confirmation password must be the same.\";\n            passwordValidationHidden = false;\n        }\n\n        let resetPasswordDisabled = !passwordValidationHidden;\n\n        console.log(\"rendering with password validation message: '\" + passwordValidationMessage + \"' and password validation visible: \" + passwordValidationHidden);\n\n        return (\n            <div className=\"card-body\" hidden={hidden}>\n\n                <div className=\"card mb-1\" style={bgStyle}>\n                    <h5 className=\"card-header\" style={fgStyle}>\n                        Reset Password\n                    </h5>\n\n                    <div className=\"card-body\" style={fgStyle}>\n\n                        <form onSubmit={(event) => this.resetPassword(event)} >\n\n                            <div className=\"form-group\" style={formGroupStyle}>\n                                <div className=\"d-flex\">\n                                    <div className=\"p-2\" style={formHeaderStyle}>\n                                        <label htmlFor=\"resetEmailAddress\" style={labelStyle}>Email Address</label>\n                                    </div>\n                                    <div className=\"p-2 flex-fill\">\n                                        <input type=\"text\" className=\"form-control\" id=\"resetEmailAddress\" aria-describedby=\"emailAddressHelp\" placeholder=\"Enter Email Address\" onChange={(event) => this.changeEmailAddress(event)}/>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"form-group\" style={formGroupStyle}>\n                                <div className=\"d-flex\">\n                                    <div className=\"p-2\" style={formHeaderStyle}>\n                                        <label htmlFor=\"resetPassphrase\" style={labelStyle}>Reset Passphrase</label>\n                                    </div>\n                                    <div className=\"p-2 flex-fill\">\n                                        <input type=\"text\" className=\"form-control\" id=\"resetPassphrase\" aria-describedby=\"passphraseHelp\" placeholder=\"Enter Reset Passphrase\" onChange={(event) => this.changePassphrase(event)}/>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div className=\"d-flex\">\n                                <div className=\"p-2\" style={formHeaderStyle}>\n                                    <label htmlFor=\"createPassword\" style={labelStyle}>New Password</label>\n                                </div>\n                                <div className=\"p-2 flex-fill\">\n                                    <input type=\"password\" className=\"form-control\" id=\"newPassword\" placeholder=\"Password (required)\" required={true} onChange={(event) => {this.changeNewPassword(event)}} value={this.state.newPassword}/>\n                                </div>\n                                <div className=\"p-2 flex-fill\">\n                                    <input type=\"password\" className=\"form-control\" id=\"confirmPassword\" placeholder=\"Confirm password (required)\" required={true} onChange={(event) => {this.changeConfirmPassword(event)}} value={this.state.confirmPassword}/>\n                                </div>\n                            </div>\n\n                            <div className=\"d-flex\">\n                                <div className=\"p-2\" style={formHeaderStyle}>\n                                </div>\n                                <div className=\"p-2 flex-fill\">\n                                    <span style={validationMessageStyle} hidden={passwordValidationHidden}>{passwordValidationMessage}</span>\n                                </div>\n                                <div className=\"p-2\">\n                                    <button type=\"submit\" className=\"btn btn-primary float-right\" disabled={resetPasswordDisabled}>Reset Password</button>\n                                </div>\n                            </div>\n\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nvar resetPasswordCard = ReactDOM.render(\n    <ResetPasswordCard />,\n    document.querySelector('#reset-password-card')\n);\n"],"mappings":"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"}]}