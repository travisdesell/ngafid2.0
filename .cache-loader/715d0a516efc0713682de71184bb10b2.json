{"remainingRequest":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js??ruleSet[1].rules[0].use[1]!/ngafid/ngafid2.0/src/main/javascript/trends.js","dependencies":[{"path":"/ngafid/ngafid2.0/src/main/javascript/trends.js","mtime":1664810261290},{"path":"/ngafid/ngafid2.0/.babelrc","mtime":1664810261182},{"path":"/ngafid/ngafid2.0/node_modules/cache-loader/dist/cjs.js","mtime":1664910647113},{"path":"/ngafid/ngafid2.0/node_modules/babel-loader/lib/index.js","mtime":1664910647213}],"contextDependencies":[],"result":["function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it[\"return\"] != null) it[\"return\"](); } finally { if (didErr) throw err; } } }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport 'bootstrap';\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { errorModal } from \"./error_modal.js\";\nimport SignedInNavbar from \"./signed_in_navbar.js\";\nimport TimeHeader from \"./time_header.js\";\nimport GetDescription from \"./get_description\";\nimport Plotly from 'plotly.js';\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport { OverlayTrigger } from \"react-bootstrap\";\nairframes.unshift(\"All Airframes\");\nvar index = airframes.indexOf(\"Garmin Flight Display\");\nif (index !== -1) airframes.splice(index, 1);\neventNames.sort();\nconsole.log(eventNames);\n/*\nvar trace1 = {\n    name: 'test1',\n    x: [1, 2, 3, 4],\n    y: [10, 15, 13, 17],\n    type: 'scatter'\n};\n\nvar trace2 = {\n    name: 'test2',\n    x: [1, 2, 3, 4],\n    y: [16, 5, 11, 9],\n    type: 'scatter'\n};\n*/\n\nvar countData = [];\nvar percentData = [];\nvar eventCounts = {};\nvar eventFleetPercents = {};\nvar eventNGAFIDPercents = {};\n\nvar TrendsPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(TrendsPage, _React$Component);\n\n  var _super = _createSuper(TrendsPage);\n\n  function TrendsPage(props) {\n    var _this;\n\n    _classCallCheck(this, TrendsPage);\n\n    _this = _super.call(this, props);\n    var eventChecked = {};\n\n    for (var i = 0; i < eventNames.length; i++) {\n      eventChecked[eventNames[i]] = false;\n    }\n\n    var date = new Date();\n    _this.state = {\n      airframe: \"All Airframes\",\n      startYear: 2020,\n      startMonth: 1,\n      endYear: date.getFullYear(),\n      endMonth: date.getMonth() + 1,\n      datesChanged: false,\n      eventChecked: eventChecked\n    };\n    return _this;\n  }\n\n  _createClass(TrendsPage, [{\n    key: \"exportCSV\",\n    value: function exportCSV() {\n      var selectedAirframe = this.state.airframe;\n      console.log(\"selected airframe: '\" + selectedAirframe + \"'\");\n      console.log(eventCounts);\n      var eventNames = [];\n      var airframeNames = [];\n      var dates = [];\n      var csvValues = {};\n\n      for (var _i = 0, _Object$entries = Object.entries(eventCounts); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            eventName = _Object$entries$_i[0],\n            countsObject = _Object$entries$_i[1];\n\n        //console.log(\"checking to plot event: '\" + eventName + \"', checked? '\" + this.state.eventChecked[eventName] + \"'\");\n        if (!this.state.eventChecked[eventName]) continue; //make sure the eventNames array is unique names only\n\n        if (!eventNames.includes(eventName)) {\n          eventNames.push(eventName);\n        }\n\n        for (var _i2 = 0, _Object$entries2 = Object.entries(countsObject); _i2 < _Object$entries2.length; _i2++) {\n          var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n              airframe = _Object$entries2$_i[0],\n              value = _Object$entries2$_i[1];\n\n          if (value.airframeName === \"Garmin Flight Display\") continue;\n          if (selectedAirframe !== value.airframeName && selectedAirframe !== \"All Airframes\") continue;\n          var airframeName = value.airframeName;\n          var valueDates = value.dates; //make sure the airframeNames array is unique names only\n\n          if (!airframeNames.includes(airframeName)) {\n            airframeNames.push(airframeName);\n          }\n\n          console.log(eventName + \" - \" + value.airframeName + \" has dates: \");\n          console.log(value.dates);\n\n          for (var i = 0; i < value.dates.length; i++) {\n            var date = value.dates[i];\n            var eventCount = value.y[i];\n            var flightsWithEventCount = value.flightsWithEventCounts[i];\n            var totalFlights = value.totalFlightsCounts[i]; //make sure the dates array is unique dates only\n\n            if (!dates.includes(date)) {\n              dates.push(date);\n            }\n\n            if (!(eventName in csvValues)) {\n              csvValues[eventName] = {};\n            }\n\n            if (!(airframeName in csvValues[eventName])) {\n              csvValues[eventName][airframeName] = {};\n            }\n\n            csvValues[eventName][airframeName][date] = {};\n            csvValues[eventName][airframeName][date].eventCount = eventCount;\n            csvValues[eventName][airframeName][date].flightsWithEventCount = flightsWithEventCount;\n            csvValues[eventName][airframeName][date].totalFlights = totalFlights;\n          }\n        }\n      }\n\n      eventNames.sort();\n      airframeNames.sort();\n      dates.sort();\n      console.log(\"eventNames:\");\n      console.log(eventNames);\n      console.log(\"airframeNames:\");\n      console.log(airframeNames);\n      console.log(\"dates:\");\n      console.log(dates);\n\n      for (var _i3 = 0, _eventNames = eventNames; _i3 < _eventNames.length; _i3++) {\n        var _eventName = _eventNames[_i3];\n        console.log(_eventName + \" has \" + Object.keys(csvValues[_eventName]).length + \" entries!\");\n        console.log(csvValues[_eventName]);\n\n        var _iterator = _createForOfIteratorHelper(airframeNames),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var _airframeName = _step.value;\n\n            if (_airframeName in csvValues[_eventName]) {\n              console.log(\"\\t\" + _eventName + \" - \" + _airframeName + \" has \" + Object.keys(csvValues[_eventName][_airframeName]).length + \" entries!\");\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      var filetext = \"\";\n      var needsComma = false;\n\n      for (var _i4 = 0, _eventNames2 = eventNames; _i4 < _eventNames2.length; _i4++) {\n        var _eventName2 = _eventNames2[_i4];\n\n        var _iterator2 = _createForOfIteratorHelper(airframeNames),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var _airframeName2 = _step2.value;\n\n            if (_airframeName2 in csvValues[_eventName2]) {\n              if (needsComma) {\n                filetext += \",\";\n              } else {\n                needsComma = true;\n              }\n\n              filetext += _eventName2;\n              filetext += \",\" + _eventName2;\n              filetext += \",\" + _eventName2;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      filetext += \"\\n\";\n      needsComma = false;\n\n      for (var _i5 = 0, _eventNames3 = eventNames; _i5 < _eventNames3.length; _i5++) {\n        var _eventName3 = _eventNames3[_i5];\n\n        var _iterator3 = _createForOfIteratorHelper(airframeNames),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _airframeName3 = _step3.value;\n\n            if (_airframeName3 in csvValues[_eventName3]) {\n              if (needsComma) {\n                filetext += \",\";\n              } else {\n                needsComma = true;\n              }\n\n              filetext += _airframeName3;\n              filetext += \",\" + _airframeName3;\n              filetext += \",\" + _airframeName3;\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n\n      filetext += \"\\n\";\n      needsComma = false;\n\n      for (var _i6 = 0, _eventNames4 = eventNames; _i6 < _eventNames4.length; _i6++) {\n        var _eventName4 = _eventNames4[_i6];\n\n        var _iterator4 = _createForOfIteratorHelper(airframeNames),\n            _step4;\n\n        try {\n          for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n            var _airframeName4 = _step4.value;\n\n            if (_airframeName4 in csvValues[_eventName4]) {\n              if (needsComma) {\n                filetext += \",\";\n              } else {\n                needsComma = true;\n              }\n\n              filetext += \"Events\";\n              filetext += \",Flights With Event\";\n              filetext += \",Total Flights\";\n            }\n          }\n        } catch (err) {\n          _iterator4.e(err);\n        } finally {\n          _iterator4.f();\n        }\n      }\n\n      filetext += \"\\n\";\n\n      for (var _i7 = 0; _i7 < dates.length; _i7++) {\n        var _date = dates[_i7];\n        needsComma = false;\n\n        var _iterator5 = _createForOfIteratorHelper(eventNames),\n            _step5;\n\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var _eventName5 = _step5.value;\n\n            var _iterator6 = _createForOfIteratorHelper(airframeNames),\n                _step6;\n\n            try {\n              for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n                var _airframeName5 = _step6.value;\n\n                if (_airframeName5 in csvValues[_eventName5]) {\n                  if (needsComma) {\n                    filetext += \",\";\n                  } else {\n                    needsComma = true;\n                  }\n\n                  if (_date in csvValues[_eventName5][_airframeName5]) {\n                    filetext += csvValues[_eventName5][_airframeName5][_date].eventCount;\n                    filetext += \",\" + csvValues[_eventName5][_airframeName5][_date].flightsWithEventCount;\n                    filetext += \",\" + csvValues[_eventName5][_airframeName5][_date].totalFlights;\n                  } else {\n                    filetext += \",,\";\n                  }\n                }\n              }\n            } catch (err) {\n              _iterator6.e(err);\n            } finally {\n              _iterator6.f();\n            }\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n\n        filetext += \"\\n\";\n      }\n\n      console.log(\"eventNames:\");\n      console.log(eventNames);\n      console.log(\"airframeNames:\");\n      console.log(airframeNames);\n      console.log(\"dates:\");\n      console.log(dates);\n      var filename = \"trends.csv\";\n      console.log(\"exporting csv!\");\n      var element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(filetext));\n      element.setAttribute('download', filename);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    }\n  }, {\n    key: \"displayPlots\",\n    value: function displayPlots(selectedAirframe) {\n      console.log(\"displaying plots with airframe: '\" + selectedAirframe + \"'\");\n      eventFleetPercents = {};\n      eventNGAFIDPercents = {};\n      countData = [];\n      percentData = [];\n\n      for (var _i8 = 0, _Object$entries3 = Object.entries(eventCounts); _i8 < _Object$entries3.length; _i8++) {\n        var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i8], 2),\n            eventName = _Object$entries3$_i[0],\n            countsObject = _Object$entries3$_i[1];\n\n        //console.log(\"checking to plot event: '\" + eventName + \"', checked? '\" + this.state.eventChecked[eventName] + \"'\");\n        if (!this.state.eventChecked[eventName]) continue;\n        var fleetPercents = null;\n        var ngafidPercents = null;\n\n        if (eventName in eventFleetPercents) {\n          console.log('getting existing fleetPercents!');\n          fleetPercents = eventFleetPercents[eventName];\n          ngafidPercents = eventNGAFIDPercents[eventName];\n        } else {\n          console.log('setting initial fleetPercents!');\n          fleetPercents = {\n            name: eventName + ' - Your Fleet',\n            type: 'scatter',\n            hoverinfo: 'x+text',\n            hovertext: [],\n            y: [],\n            x: [],\n            flightsWithEventCounts: {},\n            totalFlightsCounts: {}\n          };\n          ngafidPercents = {\n            name: eventName + ' - All Other Fleets',\n            type: 'scatter',\n            hoverinfo: 'x+text',\n            hovertext: [],\n            y: [],\n            x: [],\n            flightsWithEventCounts: {},\n            totalFlightsCounts: {}\n          };\n          eventFleetPercents[eventName] = fleetPercents;\n          eventNGAFIDPercents[eventName] = ngafidPercents;\n        }\n\n        for (var _i9 = 0, _Object$entries4 = Object.entries(countsObject); _i9 < _Object$entries4.length; _i9++) {\n          var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i9], 2),\n              airframe = _Object$entries4$_i[0],\n              value = _Object$entries4$_i[1];\n\n          if (value.airframeName === \"Garmin Flight Display\") continue;\n          if (selectedAirframe !== value.airframeName && selectedAirframe !== \"All Airframes\") continue;\n          /*\n          console.log(\"airframes, airframeName, value:\"); \n          console.log(airframes);\n          console.log(airframe);\n          console.log(value);\n          */\n\n          value.name = value.eventName + \" - \" + value.airframeName;\n          value.x = value.dates;\n          value.type = 'scatter';\n          value.hoverinfo = 'x+text'; //don't add airframes to the count plot that the fleet doesn't have\n\n          if (airframes.indexOf(value.airframeName) >= 0) countData.push(value);\n          value.y = value.totalEventsCounts;\n          value.hovertext = [];\n\n          for (var i = 0; i < value.dates.length; i++) {\n            var date = value.dates[i]; //don't add airframes to the fleet percentage plot that the fleet doesn't have\n\n            if (airframes.indexOf(value.airframeName) >= 0) {\n              if (date in fleetPercents.flightsWithEventCounts) {\n                //console.log(\"incremented fleetPercents.flightsWithEventCounts for date: \" + date + \" and airframe: \" + value.airframeName + \" initially \" + fleetPercents.flightsWithEventCounts[date] + \" by \" + value.flightsWithEventCounts[i]);\n                //console.log(\"incremented fleetPercents.totalFlightsCounts for date: \" + date + \" and airframe: \" + value.airframeName + \" initially \" + fleetPercents.totalFlightsCounts[date] + \" by \" + value.totalFlightsCounts[i]);\n                fleetPercents.flightsWithEventCounts[date] += value.flightsWithEventCounts[i];\n                fleetPercents.totalFlightsCounts[date] += value.totalFlightsCounts[i]; //console.log(\"incremented fleetPercents.flightsWithEventCounts for date: \" + date + \" and airframe: \" + value.airframeName + \" to \" + fleetPercents.flightsWithEventCounts[date] + \" was incremented by \" + value.flightsWithEventCounts[i]);\n                //console.log(\"incremented fleetPercents.totalFlightsCounts for date: \" + date + \" and airframe: \" + value.airframeName + \" to \" + fleetPercents.totalFlightsCounts[date] + \" was incremented by \" + value.totalFlightsCounts[i]);\n              } else {\n                fleetPercents.flightsWithEventCounts[date] = value.flightsWithEventCounts[i];\n                fleetPercents.totalFlightsCounts[date] = value.totalFlightsCounts[i]; //console.log(\"resetting fleetPercents for date: \" + date + \" and airframe: \" + value.airframeName + \" to \" + fleetPercents.flightsWithEventCounts[date]);\n              }\n            }\n\n            if (date in ngafidPercents.flightsWithEventCounts) {\n              ngafidPercents.flightsWithEventCounts[date] += value.aggregateFlightsWithEventCounts[i];\n              ngafidPercents.totalFlightsCounts[date] += value.aggregateTotalFlightsCounts[i];\n            } else {\n              ngafidPercents.flightsWithEventCounts[date] = value.aggregateFlightsWithEventCounts[i];\n              ngafidPercents.totalFlightsCounts[date] = value.aggregateTotalFlightsCounts[i];\n            }\n          }\n\n          for (var _i10 = 0; _i10 < value.dates.length; _i10++) {\n            var _date2 = value.dates[_i10];\n            value.hovertext.push(value.y[_i10] + \" events in \" + value.flightsWithEventCounts[_i10] + \" of \" + value.totalFlightsCounts[_i10] + \" flights : \" + value.eventName + \" - \" + value.airframeName);\n          }\n        }\n      }\n      /*\n      console.log(\"eventFleetPercents:\");\n      console.log(eventFleetPercents);\n      console.log(\"eventNGAFIDPercents:\");\n      console.log(eventNGAFIDPercents);\n      */\n\n\n      for (var _i11 = 0, _Object$entries5 = Object.entries(eventFleetPercents); _i11 < _Object$entries5.length; _i11++) {\n        var _Object$entries5$_i = _slicedToArray(_Object$entries5[_i11], 2),\n            _eventName6 = _Object$entries5$_i[0],\n            fleetValue = _Object$entries5$_i[1];\n\n        var ngafidValue = eventNGAFIDPercents[_eventName6];\n        percentData.push(fleetValue);\n        percentData.push(ngafidValue);\n        fleetValue.x = [];\n        fleetValue.y = [];\n\n        var _iterator7 = _createForOfIteratorHelper(Object.keys(fleetValue.flightsWithEventCounts).sort()),\n            _step7;\n\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var _date3 = _step7.value;\n            fleetValue.x.push(_date3);\n            var v = 100.0 * parseFloat(fleetValue.flightsWithEventCounts[_date3]) / parseFloat(fleetValue.totalFlightsCounts[_date3]);\n            fleetValue.y.push(v); //console.log(date + \" :: \" + fleetValue.flightsWithEventCounts[date]  + \" / \" + fleetValue.totalFlightsCounts[date] + \" : \" + v);\n            //this will give 2 significant figures (and leading 0s if it is quite small)\n\n            var fixedText = \"\";\n\n            if (v > 0 && v < 1) {\n              //console.log(\"Log10 of y is \" + Math.log10(v);\n              fixedText = v.toFixed(-Math.ceil(Math.log10(v)) + 2) + \"%\";\n            } else {\n              fixedText = v.toFixed(2) + \"%\";\n            }\n\n            fleetValue.hovertext.push(fixedText + \" (\" + fleetValue.flightsWithEventCounts[_date3] + \" of \" + fleetValue.totalFlightsCounts[_date3] + \" flights) : \" + fleetValue.name);\n          } //console.log(fleetValue);\n\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n\n        ngafidValue.x = [];\n        ngafidValue.y = [];\n\n        var _iterator8 = _createForOfIteratorHelper(Object.keys(ngafidValue.flightsWithEventCounts).sort()),\n            _step8;\n\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var _date4 = _step8.value;\n            ngafidValue.x.push(_date4);\n\n            var _v = 100.0 * parseFloat(ngafidValue.flightsWithEventCounts[_date4]) / parseFloat(ngafidValue.totalFlightsCounts[_date4]);\n\n            ngafidValue.y.push(_v); //console.log(date + \" :: \" + ngafidValue.flightsWithEventCounts[date]  + \" / \" + ngafidValue.totalFlightsCounts[date] + \" : \" + v);\n            //this will give 2 significant figures (and leading 0s if it is quite small)\n\n            var fixedText = \"\";\n\n            if (_v > 0 && _v < 1) {\n              //console.log(\"Log10 of y is \" + Math.log10(v);\n              fixedText = _v.toFixed(-Math.ceil(Math.log10(_v)) + 2) + \"%\";\n            } else {\n              fixedText = _v.toFixed(2) + \"%\";\n            }\n\n            ngafidValue.hovertext.push(fixedText + \" (\" + ngafidValue.flightsWithEventCounts[_date4] + \" of \" + ngafidValue.totalFlightsCounts[_date4] + \" flights) : \" + ngafidValue.name);\n          } //console.log(ngafidValue);\n\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n      }\n      /*\n      console.log(\"percentData:\");\n      console.log(percentData);\n      */\n\n\n      var countLayout = {\n        title: 'Event Counts Over Time',\n        hovermode: \"x unified\",\n        //autosize: false,\n        //width: 500,\n        //height: 500,\n        margin: {\n          l: 50,\n          r: 50,\n          b: 50,\n          t: 50,\n          pad: 4\n        }\n      };\n      var percentLayout = {\n        title: 'Percentage of Flights With Event Over Time',\n        hovermode: \"x unified\",\n        //autosize: false,\n        //width: 500,\n        //height: 500,\n        margin: {\n          l: 50,\n          r: 50,\n          b: 50,\n          t: 50,\n          pad: 4\n        }\n      };\n      var config = {\n        responsive: true\n      };\n      /*\n      console.log(\"countData, percentData:\");\n      console.log(countData);\n      console.log(percentData);\n      */\n\n      Plotly.newPlot('count-trends-plot', countData, countLayout, config);\n      Plotly.newPlot('percent-trends-plot', percentData, percentLayout, config);\n    }\n  }, {\n    key: \"checkEvent\",\n    value: function checkEvent(eventName) {\n      console.log(\"checking event: '\" + eventName + \"'\");\n      this.state.eventChecked[eventName] = !this.state.eventChecked[eventName];\n      this.setState(this.state);\n      var startDate = this.state.startYear + \"-\";\n      var endDate = this.state.endYear + \"-\"; //0 pad the months on the front\n\n      if (parseInt(this.state.startMonth) < 10) startDate += \"0\" + parseInt(this.state.startMonth);else startDate += this.state.startMonth;\n      if (parseInt(this.state.endMonth) < 10) endDate += \"0\" + parseInt(this.state.endMonth);else endDate += this.state.endMonth;\n      var submission_data = {\n        startDate: startDate + \"-01\",\n        endDate: endDate + \"-28\",\n        eventName: eventName\n      };\n\n      if (eventName in eventCounts) {\n        console.log(\"already loaded counts for event: '\" + eventName + \"'\");\n        trendsPage.displayPlots(trendsPage.state.airframe);\n      } else {\n        $('#loading').show();\n        console.log(\"showing loading spinner!\");\n\n        var _trendsPage = this;\n\n        $.ajax({\n          type: 'POST',\n          url: '/protected/monthly_event_counts',\n          data: submission_data,\n          dataType: 'json',\n          success: function success(response) {\n            console.log(\"received response: \");\n            console.log(response);\n            $('#loading').hide();\n\n            if (response.err_msg) {\n              errorModal.show(response.err_title, response.err_msg);\n              return;\n            }\n\n            eventCounts[eventName] = response;\n\n            _trendsPage.displayPlots(_trendsPage.state.airframe);\n          },\n          error: function error(jqXHR, textStatus, errorThrown) {\n            errorModal.show(\"Error Loading Uploads\", errorThrown);\n          },\n          async: true\n        });\n      }\n    }\n  }, {\n    key: \"updateStartYear\",\n    value: function updateStartYear(newStartYear) {\n      console.log(\"setting new start year to: \" + newStartYear);\n      this.setState({\n        startYear: newStartYear,\n        datesChanged: true\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"updateStartMonth\",\n    value: function updateStartMonth(newStartMonth) {\n      console.log(\"setting new start month to: \" + newStartMonth);\n      this.setState({\n        startMonth: newStartMonth,\n        datesChanged: true\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"updateEndYear\",\n    value: function updateEndYear(newEndYear) {\n      console.log(\"setting new end year to: \" + newEndYear);\n      this.setState({\n        endYear: newEndYear,\n        datesChanged: true\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"updateEndMonth\",\n    value: function updateEndMonth(newEndMonth) {\n      console.log(\"setting new end month to: \" + newEndMonth);\n      this.setState({\n        endMonth: newEndMonth,\n        datesChanged: true\n      });\n      console.log(this.state);\n    }\n  }, {\n    key: \"dateChange\",\n    value: function dateChange() {\n      console.log(\"[trendscard] notifying date change 2, startYear: '\" + this.state.startYear + \"', startMonth: '\" + this.state.startMonth + \", endYear: '\" + this.state.endYear + \"', endMonth: '\" + this.state.endMonth + \"'\");\n\n      for (var _i12 = 0, _Object$entries6 = Object.entries(this.state.eventChecked); _i12 < _Object$entries6.length; _i12++) {\n        var _Object$entries6$_i = _slicedToArray(_Object$entries6[_i12], 2),\n            eventName = _Object$entries6$_i[0],\n            value = _Object$entries6$_i[1];\n\n        this.state.eventChecked[eventName] = false;\n      }\n\n      this.state.datesChanged = false;\n      this.setState(this.state);\n      eventCounts = {};\n      this.displayPlots(this.state.airframe);\n    }\n  }, {\n    key: \"airframeChange\",\n    value: function airframeChange(airframe) {\n      this.setState({\n        airframe: airframe\n      });\n      this.displayPlots(airframe);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      //console.log(systemIds);\n      var numberOptions = {\n        minimumFractionDigits: 2,\n        maximumFractionDigits: 2\n      };\n      return /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(SignedInNavbar, {\n        activePage: \"trends\",\n        waitingUserCount: waitingUserCount,\n        fleetManager: fleetManager,\n        unconfirmedTailsCount: unconfirmedTailsCount,\n        modifyTailsAccess: modifyTailsAccess,\n        plotMapHidden: plotMapHidden\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container-fluid\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-12\"\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card mb-2 m-2\",\n        style: {\n          background: \"rgba(248,259,250,0.8)\"\n        }\n      }, /*#__PURE__*/React.createElement(TimeHeader, {\n        name: \"Event Trends\",\n        airframes: airframes,\n        airframe: this.state.airframe,\n        startYear: this.state.startYear,\n        startMonth: this.state.startMonth,\n        endYear: this.state.endYear,\n        endMonth: this.state.endMonth,\n        datesChanged: this.state.datesChanged,\n        dateChange: function dateChange() {\n          return _this2.dateChange();\n        },\n        airframeChange: function airframeChange(airframe) {\n          return _this2.airframeChange(airframe);\n        },\n        updateStartYear: function updateStartYear(newStartYear) {\n          return _this2.updateStartYear(newStartYear);\n        },\n        updateStartMonth: function updateStartMonth(newStartMonth) {\n          return _this2.updateStartMonth(newStartMonth);\n        },\n        updateEndYear: function updateEndYear(newEndYear) {\n          return _this2.updateEndYear(newEndYear);\n        },\n        updateEndMonth: function updateEndMonth(newEndMonth) {\n          return _this2.updateEndMonth(newEndMonth);\n        },\n        exportCSV: function exportCSV() {\n          return _this2.exportCSV();\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-body\",\n        style: {\n          padding: \"0\"\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        style: {\n          margin: \"0\"\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-2\",\n        style: {\n          padding: \"8 8 8 8\"\n        }\n      }, eventNames.map(function (eventName, index) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: index,\n          className: \"form-check\"\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          className: \"form-check-input\",\n          type: \"checkbox\",\n          value: \"\",\n          id: \"event-check-\" + index,\n          checked: _this2.state.eventChecked[eventName],\n          onChange: function onChange() {\n            return _this2.checkEvent(eventName);\n          }\n        }), /*#__PURE__*/React.createElement(OverlayTrigger, {\n          overlay: function overlay(props) {\n            return /*#__PURE__*/React.createElement(Tooltip, props, GetDescription(eventName));\n          },\n          placement: \"bottom\"\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          className: \"form-check-label\"\n        }, eventName)));\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-lg-10\",\n        style: {\n          padding: \"0 0 0 8\"\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        id: \"count-trends-plot\"\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        id: \"percent-trends-plot\"\n      })))))))));\n    }\n  }]);\n\n  return TrendsPage;\n}(React.Component);\n\nvar trendsPage = ReactDOM.render( /*#__PURE__*/React.createElement(TrendsPage, null), document.querySelector('#trends-page'));\ntrendsPage.displayPlots(\"All Airframes\");",{"version":3,"names":["React","Component","ReactDOM","errorModal","SignedInNavbar","TimeHeader","GetDescription","Plotly","Tooltip","OverlayTrigger","airframes","unshift","index","indexOf","splice","eventNames","sort","console","log","countData","percentData","eventCounts","eventFleetPercents","eventNGAFIDPercents","TrendsPage","props","eventChecked","i","length","date","Date","state","airframe","startYear","startMonth","endYear","getFullYear","endMonth","getMonth","datesChanged","selectedAirframe","airframeNames","dates","csvValues","Object","entries","eventName","countsObject","includes","push","value","airframeName","valueDates","eventCount","y","flightsWithEventCount","flightsWithEventCounts","totalFlights","totalFlightsCounts","keys","filetext","needsComma","filename","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","fleetPercents","ngafidPercents","name","type","hoverinfo","hovertext","x","totalEventsCounts","aggregateFlightsWithEventCounts","aggregateTotalFlightsCounts","fleetValue","ngafidValue","v","parseFloat","fixedText","toFixed","Math","ceil","log10","countLayout","title","hovermode","margin","l","r","b","t","pad","percentLayout","config","responsive","newPlot","setState","startDate","endDate","parseInt","submission_data","trendsPage","displayPlots","$","show","ajax","url","data","dataType","success","response","hide","err_msg","err_title","error","jqXHR","textStatus","errorThrown","async","newStartYear","newStartMonth","newEndYear","newEndMonth","numberOptions","minimumFractionDigits","maximumFractionDigits","waitingUserCount","fleetManager","unconfirmedTailsCount","modifyTailsAccess","plotMapHidden","background","dateChange","airframeChange","updateStartYear","updateStartMonth","updateEndYear","updateEndMonth","exportCSV","padding","map","checkEvent","render","querySelector"],"sources":["/ngafid/ngafid2.0/src/main/javascript/trends.js"],"sourcesContent":["import 'bootstrap';\n\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { errorModal } from \"./error_modal.js\";\nimport SignedInNavbar from \"./signed_in_navbar.js\";\n\nimport TimeHeader from \"./time_header.js\";\nimport GetDescription from \"./get_description\";\n\nimport Plotly from 'plotly.js';\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport {OverlayTrigger} from \"react-bootstrap\";\n\nairframes.unshift(\"All Airframes\");\nvar index = airframes.indexOf(\"Garmin Flight Display\");\nif (index !== -1) airframes.splice(index, 1);\n\neventNames.sort();\n\nconsole.log(eventNames);\n\n/*\nvar trace1 = {\n    name: 'test1',\n    x: [1, 2, 3, 4],\n    y: [10, 15, 13, 17],\n    type: 'scatter'\n};\n\nvar trace2 = {\n    name: 'test2',\n    x: [1, 2, 3, 4],\n    y: [16, 5, 11, 9],\n    type: 'scatter'\n};\n*/\n\nvar countData = [];\nvar percentData = [];\n\nvar eventCounts = {};\n\nvar eventFleetPercents = {};\nvar eventNGAFIDPercents = {};\n\nclass TrendsPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        let eventChecked = {};\n        for (let i = 0; i < eventNames.length; i++) {\n            eventChecked[eventNames[i]] = false;\n        }\n\n        var date = new Date();\n        this.state = {\n            airframe : \"All Airframes\",\n            startYear : 2020,\n            startMonth : 1,\n            endYear : date.getFullYear(),\n            endMonth : date.getMonth() + 1,\n            datesChanged : false,\n\n            eventChecked : eventChecked\n        };\n    }\n\n    exportCSV() {\n        let selectedAirframe = this.state.airframe;\n\n        console.log(\"selected airframe: '\" + selectedAirframe + \"'\");\n\n        console.log(eventCounts);\n\n        let eventNames = [];\n        let airframeNames = [];\n        let dates = [];\n        let csvValues = {};\n\n\n        for (let [eventName, countsObject] of Object.entries(eventCounts)) {\n            //console.log(\"checking to plot event: '\" + eventName + \"', checked? '\" + this.state.eventChecked[eventName] + \"'\");\n            if (!this.state.eventChecked[eventName]) continue;\n\n            //make sure the eventNames array is unique names only\n            if (!eventNames.includes(eventName)) {\n                eventNames.push(eventName);\n            }\n\n            for (let [airframe, value] of Object.entries(countsObject)) {\n                if (value.airframeName === \"Garmin Flight Display\") continue;\n                if (selectedAirframe !== value.airframeName && selectedAirframe !== \"All Airframes\") continue;\n\n                let airframeName = value.airframeName;\n                let valueDates = value.dates;\n\n\n                //make sure the airframeNames array is unique names only\n                if (!airframeNames.includes(airframeName)) {\n                    airframeNames.push(airframeName);\n                }\n\n\n                console.log(eventName + \" - \" + value.airframeName + \" has dates: \");\n                console.log(value.dates);\n\n                for (let i = 0; i < value.dates.length; i++) {\n                    let date = value.dates[i];\n                    let eventCount = value.y[i];\n                    let flightsWithEventCount = value.flightsWithEventCounts[i];\n                    let totalFlights = value.totalFlightsCounts[i];\n\n\n                    //make sure the dates array is unique dates only\n                    if (!dates.includes(date)) {\n                        dates.push(date);\n                    }\n\n                    if (!(eventName in csvValues)) {\n                        csvValues[eventName] = {};\n                    }\n\n                    if (!(airframeName in csvValues[eventName])) {\n                        csvValues[eventName][airframeName] = {};\n                    }\n\n                    csvValues[eventName][airframeName][date] = {};\n                    csvValues[eventName][airframeName][date].eventCount = eventCount;\n                    csvValues[eventName][airframeName][date].flightsWithEventCount = flightsWithEventCount;\n                    csvValues[eventName][airframeName][date].totalFlights = totalFlights;\n                }\n            }\n        }\n        eventNames.sort();\n        airframeNames.sort();\n        dates.sort();\n\n        console.log(\"eventNames:\");\n        console.log(eventNames);\n        console.log(\"airframeNames:\");\n        console.log(airframeNames);\n        console.log(\"dates:\");\n        console.log(dates);\n\n        for (let eventName of eventNames) {\n            console.log(eventName + \" has \" + Object.keys(csvValues[eventName]).length + \" entries!\");\n            console.log(csvValues[eventName]);\n\n            for (let airframeName of airframeNames) {\n                if (airframeName in csvValues[eventName]) {\n                    console.log(\"\\t\" + eventName + \" - \" + airframeName + \" has \" + Object.keys(csvValues[eventName][airframeName]).length + \" entries!\");\n                }\n            }\n        }\n\n        let filetext = \"\";\n\n        let needsComma = false;\n        for (let eventName of eventNames) {\n            for (let airframeName of airframeNames) {\n                if (airframeName in csvValues[eventName]) {\n                    if (needsComma) {\n                        filetext += \",\";\n                    } else {\n                        needsComma = true;\n                    }\n\n                    filetext += eventName;\n                    filetext += \",\" + eventName;\n                    filetext += \",\" + eventName;\n                }\n            }\n        }\n        filetext += \"\\n\";\n\n        needsComma = false;\n        for (let eventName of eventNames) {\n            for (let airframeName of airframeNames) {\n                if (airframeName in csvValues[eventName]) {\n                    if (needsComma) {\n                        filetext += \",\";\n                    } else {\n                        needsComma = true;\n                    }\n                    filetext += airframeName;\n                    filetext += \",\" + airframeName;\n                    filetext += \",\" + airframeName;\n                }\n            }\n        }\n        filetext += \"\\n\";\n\n        needsComma = false;\n        for (let eventName of eventNames) {\n            for (let airframeName of airframeNames) {\n                if (airframeName in csvValues[eventName]) {\n                    if (needsComma) {\n                        filetext += \",\";\n                    } else {\n                        needsComma = true;\n                    }\n                    filetext += \"Events\";\n                    filetext += \",Flights With Event\";\n                    filetext += \",Total Flights\";\n                }\n            }\n        }\n        filetext += \"\\n\";\n\n        for (let i = 0; i < dates.length; i++) {\n            let date = dates[i];\n\n            needsComma = false;\n            for (let eventName of eventNames) {\n                for (let airframeName of airframeNames) {\n                    if (airframeName in csvValues[eventName]) {\n                        if (needsComma) {\n                            filetext += \",\";\n                        } else {\n                            needsComma = true;\n                        }\n\n                        if (date in csvValues[eventName][airframeName]) {\n                            filetext += csvValues[eventName][airframeName][date].eventCount;\n                            filetext += \",\" + csvValues[eventName][airframeName][date].flightsWithEventCount;\n                            filetext += \",\" + csvValues[eventName][airframeName][date].totalFlights;\n                        } else {\n                            filetext += \",,\";\n                        }\n                    }\n                }\n            }\n            filetext += \"\\n\";\n        }\n\n        console.log(\"eventNames:\");\n        console.log(eventNames);\n        console.log(\"airframeNames:\");\n        console.log(airframeNames);\n        console.log(\"dates:\");\n        console.log(dates);\n\n\n        let filename = \"trends.csv\";\n\n        console.log(\"exporting csv!\");\n\n        var element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(filetext));\n        element.setAttribute('download', filename);\n\n        element.style.display = 'none';\n        document.body.appendChild(element);\n\n        element.click();\n\n        document.body.removeChild(element);\n\n    }\n\n    displayPlots(selectedAirframe) {\n        console.log(\"displaying plots with airframe: '\" + selectedAirframe + \"'\");\n\n        eventFleetPercents = {};\n        eventNGAFIDPercents = {};\n\n        countData = [];\n        percentData = [];\n\n        for (let [eventName, countsObject] of Object.entries(eventCounts)) {\n            //console.log(\"checking to plot event: '\" + eventName + \"', checked? '\" + this.state.eventChecked[eventName] + \"'\");\n            if (!this.state.eventChecked[eventName]) continue;\n\n            let fleetPercents = null;\n            let ngafidPercents = null;\n\n            if (eventName in eventFleetPercents) {\n                console.log('getting existing fleetPercents!');\n\n                fleetPercents = eventFleetPercents[eventName];\n                ngafidPercents = eventNGAFIDPercents[eventName];\n\n            } else {\n                console.log('setting initial fleetPercents!');\n\n                fleetPercents = { \n                    name : eventName + ' - Your Fleet',\n                    type : 'scatter',\n                    hoverinfo : 'x+text',\n                    hovertext : [], \n                    y : [], \n                    x : [], \n                    flightsWithEventCounts : {},\n                    totalFlightsCounts : {}\n                }   \n\n                ngafidPercents = { \n                    name : eventName + ' - All Other Fleets',\n                    type : 'scatter',\n                    hoverinfo : 'x+text',\n                    hovertext : [], \n                    y : [], \n                    x : [], \n                    flightsWithEventCounts : {}, \n                    totalFlightsCounts :{} \n                }   \n\n                eventFleetPercents[eventName] = fleetPercents;\n                eventNGAFIDPercents[eventName] = ngafidPercents;\n            }\n\n\n            for (let [airframe, value] of Object.entries(countsObject)) {\n                if (value.airframeName === \"Garmin Flight Display\") continue;\n                if (selectedAirframe !== value.airframeName && selectedAirframe !== \"All Airframes\") continue;\n\n                /*\n                console.log(\"airframes, airframeName, value:\"); \n                console.log(airframes);\n                console.log(airframe);\n                console.log(value);\n                */\n\n\n                value.name = value.eventName + \" - \" + value.airframeName;\n                value.x = value.dates;\n                value.type = 'scatter';\n                value.hoverinfo = 'x+text';\n\n                //don't add airframes to the count plot that the fleet doesn't have\n                if (airframes.indexOf(value.airframeName) >= 0) countData.push(value);\n                value.y = value.totalEventsCounts;\n                value.hovertext = [];\n\n                for (let i = 0; i < value.dates.length; i++) {\n                    let date = value.dates[i];\n\n                    //don't add airframes to the fleet percentage plot that the fleet doesn't have\n                    if (airframes.indexOf(value.airframeName) >= 0) {\n                        if (date in fleetPercents.flightsWithEventCounts) {\n                            //console.log(\"incremented fleetPercents.flightsWithEventCounts for date: \" + date + \" and airframe: \" + value.airframeName + \" initially \" + fleetPercents.flightsWithEventCounts[date] + \" by \" + value.flightsWithEventCounts[i]);\n                            //console.log(\"incremented fleetPercents.totalFlightsCounts for date: \" + date + \" and airframe: \" + value.airframeName + \" initially \" + fleetPercents.totalFlightsCounts[date] + \" by \" + value.totalFlightsCounts[i]);\n\n                            fleetPercents.flightsWithEventCounts[date] += value.flightsWithEventCounts[i];\n                            fleetPercents.totalFlightsCounts[date] += value.totalFlightsCounts[i];\n\n                            //console.log(\"incremented fleetPercents.flightsWithEventCounts for date: \" + date + \" and airframe: \" + value.airframeName + \" to \" + fleetPercents.flightsWithEventCounts[date] + \" was incremented by \" + value.flightsWithEventCounts[i]);\n                            //console.log(\"incremented fleetPercents.totalFlightsCounts for date: \" + date + \" and airframe: \" + value.airframeName + \" to \" + fleetPercents.totalFlightsCounts[date] + \" was incremented by \" + value.totalFlightsCounts[i]);\n                        } else {\n                            fleetPercents.flightsWithEventCounts[date] = value.flightsWithEventCounts[i];\n                            fleetPercents.totalFlightsCounts[date] = value.totalFlightsCounts[i];\n\n                            //console.log(\"resetting fleetPercents for date: \" + date + \" and airframe: \" + value.airframeName + \" to \" + fleetPercents.flightsWithEventCounts[date]);\n                        }\n                    }\n\n                    if (date in ngafidPercents.flightsWithEventCounts) {\n                        ngafidPercents.flightsWithEventCounts[date] += value.aggregateFlightsWithEventCounts[i];\n                        ngafidPercents.totalFlightsCounts[date] += value.aggregateTotalFlightsCounts[i];\n                    } else {\n                        ngafidPercents.flightsWithEventCounts[date] = value.aggregateFlightsWithEventCounts[i];\n                        ngafidPercents.totalFlightsCounts[date] = value.aggregateTotalFlightsCounts[i];\n                    }\n                }\n\n                for (let i = 0; i < value.dates.length; i++) {\n                    let date = value.dates[i];\n                    value.hovertext.push(value.y[i] + \" events in \" + value.flightsWithEventCounts[i] + \" of \" + value.totalFlightsCounts[i] + \" flights : \" + value.eventName + \" - \" + value.airframeName);\n                }\n\n            }\n        }\n\n        /*\n        console.log(\"eventFleetPercents:\");\n        console.log(eventFleetPercents);\n        console.log(\"eventNGAFIDPercents:\");\n        console.log(eventNGAFIDPercents);\n        */\n\n        for (let [eventName, fleetValue] of Object.entries(eventFleetPercents)) {\n            let ngafidValue = eventNGAFIDPercents[eventName];\n            percentData.push(fleetValue);\n            percentData.push(ngafidValue);\n\n            fleetValue.x = [];\n            fleetValue.y = [];\n            for (let date of Object.keys(fleetValue.flightsWithEventCounts).sort()) {\n                fleetValue.x.push(date);\n\n                let v = 100.0 * parseFloat(fleetValue.flightsWithEventCounts[date]) / parseFloat(fleetValue.totalFlightsCounts[date]);\n                fleetValue.y.push(v);\n\n                //console.log(date + \" :: \" + fleetValue.flightsWithEventCounts[date]  + \" / \" + fleetValue.totalFlightsCounts[date] + \" : \" + v);\n\n                //this will give 2 significant figures (and leading 0s if it is quite small)\n                var fixedText = \"\";\n                if (v > 0 && v < 1) {\n                    //console.log(\"Log10 of y is \" + Math.log10(v);\n                    fixedText = v.toFixed(-Math.ceil(Math.log10(v)) + 2) + \"%\";\n                } else {\n                    fixedText = v.toFixed(2) + \"%\";\n                }\n                fleetValue.hovertext.push(fixedText  + \" (\" + fleetValue.flightsWithEventCounts[date] + \" of \" + fleetValue.totalFlightsCounts[date] + \" flights) : \" + fleetValue.name);\n            }\n\n            //console.log(fleetValue);\n\n            ngafidValue.x = [];\n            ngafidValue.y = [];\n            for (let date of Object.keys(ngafidValue.flightsWithEventCounts).sort()) {\n                ngafidValue.x.push(date);\n\n                let v = 100.0 * parseFloat(ngafidValue.flightsWithEventCounts[date]) / parseFloat(ngafidValue.totalFlightsCounts[date]);\n                ngafidValue.y.push(v);\n\n                //console.log(date + \" :: \" + ngafidValue.flightsWithEventCounts[date]  + \" / \" + ngafidValue.totalFlightsCounts[date] + \" : \" + v);\n\n                //this will give 2 significant figures (and leading 0s if it is quite small)\n                var fixedText = \"\";\n                if (v > 0 && v < 1) {\n                    //console.log(\"Log10 of y is \" + Math.log10(v);\n                    fixedText = v.toFixed(-Math.ceil(Math.log10(v)) + 2) + \"%\";\n                } else {\n                    fixedText = v.toFixed(2) + \"%\";\n                }\n                ngafidValue.hovertext.push(fixedText + \" (\" + ngafidValue.flightsWithEventCounts[date] + \" of \" + ngafidValue.totalFlightsCounts[date] + \" flights) : \" + ngafidValue.name);\n            }\n\n            //console.log(ngafidValue);\n        }\n\n        /*\n        console.log(\"percentData:\");\n        console.log(percentData);\n        */\n\n        var countLayout = {\n            title : 'Event Counts Over Time',\n            hovermode : \"x unified\",\n            //autosize: false,\n            //width: 500,\n            //height: 500,\n            margin: {\n                l: 50,\n                r: 50,\n                b: 50,\n                t: 50,\n                pad: 4\n            }\n        };\n\n        var percentLayout = {\n            title : 'Percentage of Flights With Event Over Time',\n            hovermode : \"x unified\",\n            //autosize: false,\n            //width: 500,\n            //height: 500,\n            margin: {\n                l: 50,\n                r: 50,\n                b: 50,\n                t: 50,\n                pad: 4\n            }\n        };\n\n        var config = {responsive: true};\n\n        /*\n        console.log(\"countData, percentData:\");\n        console.log(countData);\n        console.log(percentData);\n        */\n\n        Plotly.newPlot('count-trends-plot', countData, countLayout, config);\n        Plotly.newPlot('percent-trends-plot', percentData, percentLayout, config);\n    }\n\n\n    checkEvent(eventName) {\n        console.log(\"checking event: '\" + eventName + \"'\");\n        this.state.eventChecked[eventName] = !this.state.eventChecked[eventName];\n        this.setState(this.state);\n\n        let startDate = this.state.startYear + \"-\";\n        let endDate = this.state.endYear + \"-\";\n\n        //0 pad the months on the front\n        if (parseInt(this.state.startMonth) < 10) startDate += \"0\" + parseInt(this.state.startMonth);\n        else startDate += this.state.startMonth;\n        if (parseInt(this.state.endMonth) < 10) endDate += \"0\" + parseInt(this.state.endMonth);\n        else endDate += this.state.endMonth;\n\n        var submission_data = {\n            startDate : startDate + \"-01\",\n            endDate : endDate + \"-28\",\n            eventName : eventName\n        };\n\n        if (eventName in eventCounts) {\n            console.log(\"already loaded counts for event: '\" + eventName + \"'\");\n            trendsPage.displayPlots(trendsPage.state.airframe);\n\n        } else {\n            $('#loading').show();\n            console.log(\"showing loading spinner!\");\n\n            let trendsPage = this;\n\n            $.ajax({\n                type: 'POST',\n                url: '/protected/monthly_event_counts',\n                data : submission_data,\n                dataType : 'json',\n                success : function(response) {\n                    console.log(\"received response: \");\n                    console.log(response);\n\n                    $('#loading').hide();\n\n                    if (response.err_msg) {\n                        errorModal.show(response.err_title, response.err_msg);\n                        return;\n                    }   \n\n                    eventCounts[eventName] = response;\n                    trendsPage.displayPlots(trendsPage.state.airframe);\n                },   \n                error : function(jqXHR, textStatus, errorThrown) {\n                    errorModal.show(\"Error Loading Uploads\", errorThrown);\n                },   \n                async: true \n            });\n        }\n    }\n\n    updateStartYear(newStartYear) {\n        console.log(\"setting new start year to: \" + newStartYear);\n        this.setState({startYear : newStartYear, datesChanged : true});\n        console.log(this.state);\n    }\n\n    updateStartMonth(newStartMonth) {\n        console.log(\"setting new start month to: \" + newStartMonth);\n        this.setState({startMonth : newStartMonth, datesChanged : true});\n        console.log(this.state);\n    }\n\n    updateEndYear(newEndYear) {\n        console.log(\"setting new end year to: \" + newEndYear);\n        this.setState({endYear : newEndYear, datesChanged : true});\n        console.log(this.state);\n    }\n\n    updateEndMonth(newEndMonth) {\n        console.log(\"setting new end month to: \" + newEndMonth);\n        this.setState({endMonth : newEndMonth, datesChanged : true});\n        console.log(this.state);\n    }\n\n    dateChange() {\n        console.log(\"[trendscard] notifying date change 2, startYear: '\" + this.state.startYear + \"', startMonth: '\" + this.state.startMonth + \", endYear: '\" + this.state.endYear + \"', endMonth: '\" + this.state.endMonth + \"'\"); \n\n        for (let [eventName, value] of Object.entries(this.state.eventChecked)) {\n            this.state.eventChecked[eventName] = false;\n        }\n        this.state.datesChanged = false;\n        this.setState(this.state);\n\n        eventCounts = {};\n        this.displayPlots(this.state.airframe);\n    }\n\n    airframeChange(airframe) {\n        this.setState({airframe});\n        this.displayPlots(airframe);\n    }\n\n\n    render() {\n        //console.log(systemIds);\n\n        const numberOptions = { \n            minimumFractionDigits: 2,\n            maximumFractionDigits: 2 \n        };\n\n        return (\n            <div>\n                <SignedInNavbar activePage={\"trends\"} waitingUserCount={waitingUserCount} fleetManager={fleetManager} unconfirmedTailsCount={unconfirmedTailsCount} modifyTailsAccess={modifyTailsAccess} plotMapHidden={plotMapHidden}/>\n\n                <div className=\"container-fluid\">\n\n                    <div className=\"row\">\n                        <div className=\"col-lg-12\">\n                            <div className=\"card mb-2 m-2\" style={{background : \"rgba(248,259,250,0.8)\"}}>\n                                <TimeHeader\n                                    name=\"Event Trends\"\n                                    airframes={airframes}\n                                    airframe={this.state.airframe}\n                                    startYear={this.state.startYear} \n                                    startMonth={this.state.startMonth} \n                                    endYear={this.state.endYear} \n                                    endMonth={this.state.endMonth} \n                                    datesChanged={this.state.datesChanged}\n                                    dateChange={() => this.dateChange()}\n                                    airframeChange={(airframe) => this.airframeChange(airframe)}\n                                    updateStartYear={(newStartYear) => this.updateStartYear(newStartYear)}\n                                    updateStartMonth={(newStartMonth) => this.updateStartMonth(newStartMonth)}\n                                    updateEndYear={(newEndYear) => this.updateEndYear(newEndYear)}\n                                    updateEndMonth={(newEndMonth) => this.updateEndMonth(newEndMonth)}\n                                    exportCSV={() => this.exportCSV()}\n                                />\n\n                            <div className=\"card-body\" style={{padding:\"0\"}}>\n                                <div className=\"row\" style={{margin:\"0\"}}>\n                                    <div className=\"col-lg-2\" style={{padding:\"8 8 8 8\"}}>\n\n                                        {\n                                            eventNames.map((eventName, index) => {\n                                                return (\n                                                    <div key={index} className=\"form-check\">\n                                                        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id={\"event-check-\" + index} checked={this.state.eventChecked[eventName]} onChange={() => this.checkEvent(eventName)}></input>\n\n                                                        <OverlayTrigger overlay={(props) => (\n                                                            <Tooltip {...props}>{GetDescription(eventName)}</Tooltip>)}\n                                                                        placement=\"bottom\">\n                                                            <label className=\"form-check-label\">\n                                                                {eventName}\n                                                            </label>\n\n\n                                                        </OverlayTrigger>\n                                                            \n\n                                                    </div>\n                                                );\n                                            })\n                                        }\n\n                                    </div>\n\n                                    <div className=\"col-lg-10\" style={{padding:\"0 0 0 8\"}}>\n                                        <div id=\"count-trends-plot\"></div>\n                                        <div id=\"percent-trends-plot\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        );\n    }\n}\n\n\nvar trendsPage = ReactDOM.render(\n    <TrendsPage />,\n    document.querySelector('#trends-page')\n);\n\ntrendsPage.displayPlots(\"All Airframes\");\n"],"mappings":"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"}]}